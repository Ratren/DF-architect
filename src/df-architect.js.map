{"version":3,"file":"df-architect.js","mappings":"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","sources":["webpack://df-architect/./src/core/declarations.ts","webpack://df-architect/./src/core/settings.ts","webpack://df-architect/./src/core/architect.ts","webpack://df-architect/./src/general/PIXIAppOverride.ts","webpack://df-architect/./src/general/LayerShortcuts.ts","webpack://df-architect/./src/general/AltGridSnap.ts","webpack://df-architect/./src/walls/WallCtrlInvert.ts","webpack://df-architect/./src/core/libWrapperShared.ts","webpack://df-architect/./src/walls/WallShortcuts.ts","webpack://df-architect/./src/walls/WallJoinSplit.ts","webpack://df-architect/./src/lights/AltLightOrigin.ts","webpack://df-architect/./src/general/QuickColourPicker.ts","webpack://df-architect/./src/general/CaptureGameScreen.ts","webpack://df-architect/./src/general/capture/TileExt.ts","webpack://df-architect/./src/general/capture/DrawingExt.ts","webpack://df-architect/./src/lights/LightTemplate.ts","webpack://df-architect/./src/walls/WallChangeType.ts","webpack://df-architect/./src/walls/WallAltDrop.ts","webpack://df-architect/./src/lights/AltLightInverted.ts","webpack://df-architect/./src/walls/WallDirections.ts","webpack://df-architect/./src/core/migration.ts","webpack://df-architect/./src/tiles/TileFlattener.ts","webpack://df-architect/./src/tiles/TileFlattenerFolder.ts","webpack://df-architect/./src/lights/LightCounter.ts","webpack://df-architect/./src/core/CounterUI.ts","webpack://df-architect/./src/walls/WallCounter.ts","webpack://df-architect/./src/tiles/TileCounter.ts","webpack://df-architect/./src/sounds/SoundCounter.ts","webpack://df-architect/./src/general/ShowLayerControls.ts","webpack://df-architect/./src/tiles/TileConfigExt.ts","webpack://df-architect/./src/walls/WallGapFiller.ts","webpack://df-architect/webpack/bootstrap","webpack://df-architect/webpack/runtime/define property getters","webpack://df-architect/webpack/runtime/hasOwnProperty shorthand","webpack://df-architect/webpack/runtime/make namespace object","webpack://df-architect/./src/df-architect.ts"],"sourcesContent":["\ndeclare global {\n\tinterface Map<K, V> {\n\t\tgetOrDefault<T extends V>(key: K, defaultValue: (() => T) | T): T;\n\t}\n\tinterface String {\n\t\t/** Localizes the string via the global `game.i18n.localize()` function. */\n\t\tlocalize(): string\n\t}\n\tinterface Indexable<V> {\n\t\t[key: string]: V\n\t}\n}\n\nexport default function () {\n\tif (!Map.prototype.getOrDefault)\n\t\tMap.prototype.getOrDefault = function <T>(key: any, defaultValue: (() => T) | T): T {\n\t\t\tvar result: T = this.get(key);\n\t\t\tif (result === undefined) {\n\t\t\t\tresult = defaultValue instanceof Function ? defaultValue() : defaultValue;\n\t\t\t\tthis.set(key, result);\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\tif (!String.prototype.localize)\n\t\tString.prototype.localize = function () {\n\t\t\treturn game.i18n.localize(this.valueOf());\n\t\t}\n};","export default class SETTINGS {\n\tprivate static _MOD_NAME: string;\n\tstatic init(moduleName: string) {\n\t\tthis._MOD_NAME = moduleName;\n\t}\n\tstatic register<T>(key: string, config: ClientSettings.PartialSettingConfig<T>) { game.settings.register(SETTINGS._MOD_NAME, key, config); }\n\tstatic registerMenu(key: string, config: ClientSettings.PartialSettingSubmenuConfig) { game.settings.registerMenu(SETTINGS._MOD_NAME, key, config); }\n\tstatic get<T>(key: string): T { return <T>game.settings.get(SETTINGS._MOD_NAME, key); }\n\tstatic async set<T>(key: string, value: T): Promise<T> { return await game.settings.set(SETTINGS._MOD_NAME, key, value); }\n\tstatic default<T>(key: string): T { return <T>game.settings.settings.get(SETTINGS._MOD_NAME + '.' + key).default; }\n\t/** helper for referencing a Typed constructor for the `type` field of a setting { type: SETTINGS.typeOf<MyClass>() } */\n\tstatic typeOf<T>(): ConstructorOf<T> { return Object as any; }\n}\n","export default class ARCHITECT {\n\tstatic MOD_NAME = 'df-architect'\n\n\tstatic reportProgress(context: string, progress: number, total: number, keepAlive: boolean = false) {\n\t\tconst loader = document.getElementById(\"loading\");\n\t\tconst pct = Math.round((progress / total) * 100);\n\t\tloader.querySelector<HTMLElement>(\"#context\").textContent = context + ` (${progress}/${total})`;\n\t\tloader.querySelector<HTMLElement>(\"#loading-bar\").style.width = `${pct}%`;\n\t\tloader.querySelector<HTMLElement>(\"#progress\").textContent = `${pct}%`;\n\t\tloader.style.display = \"block\";\n\t\tif ((pct === 100) && !loader.hidden && !keepAlive) $(loader).fadeOut(2000);\n\t}\n\tstatic hideProgress(immediately = false) {\n\t\timmediately ? $('#loading').hide() : $('#loading').fadeOut(2000);\n\t}\n\n\tstatic requestReload() {\n\t\tconst dialog: Dialog = new Dialog({\n\t\t\ttitle: 'DF_ARCHITECT.ReloadRequired.Title'.localize(),\n\t\t\tcontent: 'DF_ARCHITECT.ReloadRequired.Content'.localize(),\n\t\t\tdefault: 'yes',\n\t\t\tbuttons: {\n\t\t\t\tno: {\n\t\t\t\t\ticon: '<i class=\"fas fa-times\"><╱i>',\n\t\t\t\t\tlabel: 'DF_ARCHITECT.ReloadRequired.Negative'.localize(),\n\t\t\t\t\tcallback: async () => await dialog.close()\n\t\t\t\t},\n\t\t\t\tyes: {\n\t\t\t\t\ticon: '<i class=\"fas fa-check\"><╱i>',\n\t\t\t\t\tlabel: 'DF_ARCHITECT.ReloadRequired.Positive'.localize(),\n\t\t\t\t\tcallback: () => window.location.reload()\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tdialog.render(true);\n\t}\n\n\tstatic Base64ToBlob(b64Data: string, contentType: string, sliceSize = 512) {\n\t\tconst byteCharacters = atob(b64Data);\n\t\tconst byteArrays: Uint8Array[] = [];\n\t\tfor (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n\t\t\tconst slice = byteCharacters.slice(offset, offset + sliceSize);\n\t\t\tconst byteNumbers = new Array<number>(slice.length);\n\t\t\tfor (let i = 0; i < slice.length; i++) {\n\t\t\t\tbyteNumbers[i] = slice.charCodeAt(i);\n\t\t\t}\n\t\t\tconst byteArray = new Uint8Array(byteNumbers);\n\t\t\tbyteArrays.push(byteArray);\n\t\t}\n\t\treturn new Blob(byteArrays, { type: contentType });\n\t}\n\n\t\n\tstatic getLayer<T extends CanvasLayer>(key: string): T {\n\t\tconst layer = <T>(canvas as any as { [key: string]: CanvasLayer })[key];\n\t\tif(!layer)\n\t\t\treturn <T>(<any>CONFIG.Canvas.layers[key].layerClass).instance;\n\t\treturn layer;\n\t}\n\n\tprivate static readonly GR_BG_HI = '44';\n\tprivate static readonly GR_BG_LO = '08';\n\tprivate static readonly GR_BG_BDR = '36a';\n\tprivate static readonly GR_BG_TCT = '4d4';\n\tprivate static GRAPHIC: string[] = [\n\t\t\"%c                                                                      %c%c\",\n\t\t\"%c  ╭────────────────────────────────────────────────────────────────╮  %c%c\",\n\t\t\"%c  │ %c ______  ╭╮  ○    ◌   __  ○     ◌ __        ╭╮    ○   __       %c│  \",\n\t\t\"%c  │ %c╱╲  _  ╲ ╰╯     ╭╮   ╱╲ ╲    ◌ __╱╲ ╲__  ○  ╰╯  ╭╮   ╱╲ ╲__  ◌ %c│  \",\n\t\t\"%c  │ %c╲ ╲ ╲L╲ ╲  _ __ ╰╯___╲ ╲ ╲____╱╲_╲ ╲  _╲   ____ ╰╯___╲ ╲  _╲   %c│  \",\n\t\t\"%c  │ %c ╲ ╲  __ ╲╱╲╵ __╲╱ ___╲ ╲  __ ╲╱╲ ╲ ╲ ╲╱  ╱ __ ╲ ╱ ___╲ ╲ ╲╱○  %c│  \",\n\t\t\"%c  │ %c  ╲ ╲ ╲╱╲ ╲ ╲ ╲╱╱╲ ╲__╱╲ ╲ ╲ ╲ ╲ ╲ ╲ ╲ ╲_╱╲  __╱╱╲ ╲__╱╲ ╲ ╲_  %c│  \",\n\t\t\"%c  │ %c ◌ ╲ ╲_╲ ╲_╲ ╲_╲╲ ╲____╲╲ ╲_╲ ╲_╲ ╲_╲ ╲__╲ ╲____╲ ╲____╲╲ ╲__╲ %c│  \",\n\t\t\"%c  │ %c    ╲╱_╱╲╱_╱╲╱_╱ ╲╱____╱ ╲╱_╱╲╱_╱╲╱_╱╲╱__╱╲╱____╱╲╱____╱ ╲╱__╱ %c│  \",\n\t\t\"%c  ╰────────────────────────────────────────────────────────────────╯  %c%c\",\n\t\t\"%c                                                                      %c%c\"];\n\tstatic DrawArchitectGraphicToConsole() {\n\t\tconst css = [];\n\t\tconst loEnd = parseInt(this.GR_BG_LO, 16);\n\t\tconst hiEnd = parseInt(this.GR_BG_HI, 16);\n\t\tconst bdr = `;color:#${this.GR_BG_BDR}`;\n\t\tconst tct = `;color:#${this.GR_BG_TCT}`;\n\t\tfor (let c = 0; c < this.GRAPHIC.length; c++) {\n\t\t\tvar bg: number | string = Math.trunc((((this.GRAPHIC.length - 1) - c) / (this.GRAPHIC.length - 1)) * (hiEnd - loEnd)) + loEnd;\n\t\t\tbg = 'background:#' + (bg < 16 ? '0' + bg.toString(16) : bg.toString(16)).repeat(3);\n\t\t\tcss.push(bg + bdr);\n\t\t\tcss.push(bg + tct);\n\t\t\tcss.push(bg + bdr);\n\t\t}\n\t\tconsole.log(ARCHITECT.GRAPHIC.join('\\n'), ...css);\n\t}\n};","\nexport default class PIXIAppOverride {\n\tstatic setup() {\n\t\tHooks.once('canvasConfig', (canvasConfig: {\n\t\t\tautoStart?: boolean;\n\t\t\twidth?: number;\n\t\t\theight?: number;\n\t\t\tview?: HTMLCanvasElement;\n\t\t\ttransparent?: boolean;\n\t\t\tautoDensity?: boolean;\n\t\t\tantialias?: boolean;\n\t\t\tpreserveDrawingBuffer?: boolean;\n\t\t\tresolution?: number;\n\t\t\tforceCanvas?: boolean;\n\t\t\tbackgroundColor?: number;\n\t\t\tbackgroundAlpha?: number;\n\t\t\tclearBeforeRender?: boolean;\n\t\t\tpowerPreference?: string;\n\t\t\tsharedTicker?: boolean;\n\t\t\tsharedLoader?: boolean;\n\t\t\tresizeTo?: Window | HTMLElement;\n\t\t}) => {\n\t\t\tcanvasConfig.preserveDrawingBuffer = true;\n\t\t\tcanvasConfig.transparent = true;\n\t\t})\n\t}\n\tstatic ready() {\n\t\tif (!canvas.app) return;\n\t\t(<any>canvas.app.renderer).backgroundAlpha = 1.0;\n\t}\n}","import ARCHITECT from \"../core/architect\";\nimport SETTINGS from \"../core/settings\";\n\nexport default class LayerShortcuts {\n\tprivate static readonly PREF_LAYER_SWAP_LAYER1 = \"LayerShortcutsSettingsLayer-SwapLayer1\";\n\tprivate static readonly PREF_LAYER_SWAP_LAYER2 = \"LayerShortcutsSettingsLayer-SwapLayer2\";\n\tstatic init() {\n\t\t// #region Register and bind the layer hot-swap Hotkey\n\t\tgame.keybindings.register(ARCHITECT.MOD_NAME, 'LayerShortcuts.QuickSwap', {\n\t\t\trestricted: true,\n\t\t\tname: 'DF_ARCHITECT.LayerShortcuts.Settings.QuickSwap.Title'.localize(),\n\t\t\thint: 'DF_ARCHITECT.LayerShortcuts.Settings.QuickSwap.Info'.localize(),\n\t\t\teditable: [{ key: 'KeyQ', modifiers: [KeyboardManager.MODIFIER_KEYS.ALT] }],\n\t\t\tonDown: () => {\n\t\t\t\tconst layer1 = SETTINGS.get(LayerShortcuts.PREF_LAYER_SWAP_LAYER1);\n\t\t\t\tconst layer2 = SETTINGS.get(LayerShortcuts.PREF_LAYER_SWAP_LAYER2);\n\t\t\t\tconst layer = ui.controls.activeControl === layer1 ? layer2 : layer1;\n\t\t\t\t(ui.controls as any)._onClickLayer({ preventDefault: () => { }, currentTarget: { dataset: { control: layer } } });\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\t\t// #endregion\n\n\t\t// #region Register and bind the Hotkeys for the Scene Layers\n\t\tconst layers: string[][] = [\n\t\t\t['tokens', CONFIG.Canvas.layers['tokens'].layerClass.name],\n\t\t\t['templates', CONFIG.Canvas.layers['templates'].layerClass.name],\n\t\t\t['tiles', CONFIG.Canvas.layers['tiles'].layerClass.name],\n\t\t\t['drawings', CONFIG.Canvas.layers['drawings'].layerClass.name],\n\t\t\t['walls', CONFIG.Canvas.layers['walls'].layerClass.name],\n\t\t\t['lighting', CONFIG.Canvas.layers['lighting'].layerClass.name],\n\t\t\t['sounds', CONFIG.Canvas.layers['sounds'].layerClass.name],\n\t\t\t['notes', CONFIG.Canvas.layers['notes'].layerClass.name]\n\t\t];\n\t\tvar count = 0;\n\t\tfor (let layer of layers) {\n\t\t\tgame.keybindings.register(ARCHITECT.MOD_NAME, layer[0], {\n\t\t\t\trestricted: true,\n\t\t\t\tname: layer[1].replace('Layer', ' Layer'),\n\t\t\t\thint: 'DF_ARCHITECT.LayerShortcuts.Settings.Description',\n\t\t\t\teditable: [{ key: `Digit${++count}`, modifiers: [KeyboardManager.MODIFIER_KEYS.CONTROL] }],\n\t\t\t\tonDown: () => {\n\t\t\t\t\tARCHITECT.getLayer(layer[0])?.activate();\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t// #endregion\n\t}\n\n\tstatic ready() {\n\t\tconst getLayers: () => Record<string, string> = () => {\n\t\t\tconst result: Record<string, string> = {};\n\t\t\tui.controls.controls\n\t\t\t\t.map(x => [x.name, x.title])\n\t\t\t\t.forEach(x => {\n\t\t\t\t\tresult[x[0]] = x[1];\n\t\t\t\t})\n\t\t\treturn result;\n\t\t}\n\n\t\tSETTINGS.register<string>(LayerShortcuts.PREF_LAYER_SWAP_LAYER1, {\n\t\t\tname: 'DF_ARCHITECT.LayerShortcuts.Settings.QuickSwap.Layer1_Name',\n\t\t\thint: 'DF_ARCHITECT.LayerShortcuts.Settings.QuickSwap.Layer1_Hint',\n\t\t\tchoices: getLayers(),\n\t\t\tscope: 'world',\n\t\t\ttype: String,\n\t\t\tconfig: true,\n\t\t\tdefault: 'walls'\n\t\t});\n\t\tSETTINGS.register<string>(LayerShortcuts.PREF_LAYER_SWAP_LAYER2, {\n\t\t\tname: 'DF_ARCHITECT.LayerShortcuts.Settings.QuickSwap.Layer2_Name',\n\t\t\thint: 'DF_ARCHITECT.LayerShortcuts.Settings.QuickSwap.Layer2_Hint',\n\t\t\tchoices: getLayers(),\n\t\t\tscope: 'world',\n\t\t\ttype: String,\n\t\t\tconfig: true,\n\t\t\tdefault: 'lighting'\n\t\t});\n\t}\n}\n","import ARCHITECT from \"../core/architect\";\nimport SETTINGS from \"../core/settings\";\n\ndeclare global {\n\tinterface SquareGrid {\n\t\t_DFArch_getSnappedPosition(x: number, y: number, interval: number | null): { x: number; y: number }\n\t}\n}\n\nexport default class AltGridSnap {\n\tstatic readonly PREF_ENABLED = 'AltGridSnap.Enabled';\n\tstatic readonly PREF_TOGGLED = 'AltGridSnap.Toggled';\n\tstatic readonly PREF_PLACE_ON_CONTROL_BAR = 'AltGridSnap.PlaceOnControlBar';\n\n\tstatic init() {\n\t\tSETTINGS.register(AltGridSnap.PREF_TOGGLED, {\n\t\t\tscope: 'client',\n\t\t\tconfig: false,\n\t\t\ttype: Boolean,\n\t\t\tdefault: false,\n\t\t\tonChange: (value: Boolean) => {\n\t\t\t\tif (SETTINGS.get(AltGridSnap.PREF_PLACE_ON_CONTROL_BAR)) {\n\t\t\t\t\tconst button = $('ol#controls>li#df-arch-altSnap');\n\t\t\t\t\tif (value) button.addClass('active');\n\t\t\t\t\telse button.removeClass('active');\n\t\t\t\t} else {\n\t\t\t\t\tui.controls.control.tools.find(t => t.name === 'altSnap').active = <boolean>value;\n\t\t\t\t\tui.controls.render();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tSETTINGS.register(AltGridSnap.PREF_ENABLED, {\n\t\t\tscope: 'world',\n\t\t\tconfig: true,\n\t\t\tname: 'DF_ARCHITECT.AltGridSnap.Setting.EnabledName',\n\t\t\thint: 'DF_ARCHITECT.AltGridSnap.Setting.EnabledHint',\n\t\t\ttype: Boolean,\n\t\t\tdefault: false,\n\t\t\tonChange: () => { this._patchSquareGrid(); ui.controls.initialize() }\n\t\t});\n\t\tSETTINGS.register(AltGridSnap.PREF_PLACE_ON_CONTROL_BAR, {\n\t\t\tscope: 'world',\n\t\t\tconfig: true,\n\t\t\tname: 'DF_ARCHITECT.AltGridSnap.Setting.PlaceOnControlBarName',\n\t\t\thint: 'DF_ARCHITECT.AltGridSnap.Setting.PlaceOnControlBarHint',\n\t\t\ttype: Boolean,\n\t\t\tdefault: false,\n\t\t\tonChange: () => { ui.controls.initialize(); ui.controls.render(true) }\n\t\t});\n\n\t\tgame.keybindings.register(ARCHITECT.MOD_NAME, 'AltSnapGrid.Toggle', {\n\t\t\trestricted: true,\n\t\t\tname: 'DF_ARCHITECT.AltGridSnap.Hotkey_Toggle',\n\t\t\teditable: [{ key: 'KeyS', modifiers: [KeyboardManager.MODIFIER_KEYS.ALT] }],\n\t\t\tonDown: () => {\n\t\t\t\tif (this.enabled)\n\t\t\t\t\tthis.toggled = !this.toggled;\n\t\t\t\treturn this.enabled;\n\t\t\t}\n\t\t});\n\n\t\tif (this.enabled)\n\t\t\tthis._patchSquareGrid();\n\n\t\tHooks.on('getSceneControlButtons', (controls: SceneControl[]) => {\n\t\t\tif (!this.enabled) return;\n\t\t\tif (SETTINGS.get(AltGridSnap.PREF_PLACE_ON_CONTROL_BAR)) return;\n\t\t\tconst isGM = game.user.isGM;\n\t\t\tconst enabled = this.toggled;\n\t\t\tfor (let control of controls) {\n\t\t\t\tcontrol.tools.splice(0, 0, {\n\t\t\t\t\ticon: 'df df-alt-snap',\n\t\t\t\t\tname: 'altSnap',\n\t\t\t\t\ttitle: 'DF_ARCHITECT.AltGridSnap.Label',\n\t\t\t\t\tvisible: isGM,\n\t\t\t\t\ttoggle: true,\n\t\t\t\t\tactive: enabled,\n\t\t\t\t\tonClick: (toggled: boolean) => this.toggled = toggled\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\tHooks.on('renderSceneControls', (app: SceneControls, html: JQuery<HTMLElement>, data: any) => {\n\t\t\tif (!SETTINGS.get(AltGridSnap.PREF_PLACE_ON_CONTROL_BAR)) return;\n\t\t\tconst button = $(`\n<li class=\"scene-control toggle\" id=\"df-arch-altSnap\" style=\"line-height:0\" title=\"${'DF_ARCHITECT.AltGridSnap.Label'.localize()}\">\n\t<i class=\"df df-alt-snap\"></i>\n</li>`);\n\t\t\tbutton.on('click', () => {\n\t\t\t\tif (button.hasClass('active')) {\n\t\t\t\t\tthis.toggled = false;\n\t\t\t\t\tbutton.removeClass('active');\n\t\t\t\t} else {\n\t\t\t\t\tthis.toggled = true;\n\t\t\t\t\tbutton.addClass('active');\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (this.toggled) button.addClass('active');\n\t\t\thtml.find('.main-controls').append(button);\n\t\t});\n\t}\n\n\tstatic get enabled(): boolean {\n\t\treturn SETTINGS.get(AltGridSnap.PREF_ENABLED);\n\t}\n\tstatic get toggled(): boolean {\n\t\treturn SETTINGS.get(AltGridSnap.PREF_TOGGLED);\n\t}\n\tstatic set toggled(value: boolean) {\n\t\tSETTINGS.set(AltGridSnap.PREF_TOGGLED, value);\n\t}\n\n\tprivate static _patchSquareGrid() {\n\t\tif (this.enabled)\n\t\t\tlibWrapper.register(ARCHITECT.MOD_NAME, 'SquareGrid.prototype.getSnappedPosition', this._SquareGrid_getSnappedPosition, 'WRAPPER');\n\t\telse\n\t\t\tlibWrapper.unregister(ARCHITECT.MOD_NAME, 'SquareGrid.prototype.getSnappedPosition');\n\t}\n\n\tprivate static _SquareGrid_getSnappedPosition(wrapped: Function, x: number, y: number, interval: number | null): { x: number; y: number } {\n\t\tif (AltGridSnap.enabled && AltGridSnap.toggled) {\n\t\t\tif (!interval) interval = 1;\n\t\t\tconst altGs = (canvas as Canvas).dimensions.size / (interval * 2);\n\t\t\tconst result = wrapped(x - altGs, y - altGs, interval);\n\t\t\treturn { x: result.x + altGs, y: result.y + altGs };\n\t\t}\n\t\treturn wrapped(x, y, interval);\n\t}\n}\n","import ARCHITECT from \"../core/architect\";\nimport SETTINGS from \"../core/settings\";\nimport libWrapperShared from \"../core/libWrapperShared\";\n\nexport default class WallCtrlInvert {\n\tstatic readonly PREF_ENABLED = 'WallCtrlInvert-Enabled';\n\tprivate static _invertKeyboardMap = false;\n\tprivate static _onDragLeftDropRegistrationId = -1;\n\tstatic get enabled(): boolean { return SETTINGS.get(WallCtrlInvert.PREF_ENABLED) }\n\tstatic set enabled(value: boolean) { SETTINGS.set(WallCtrlInvert.PREF_ENABLED, value) }\n\n\tstatic init() {\n\t\tSETTINGS.register(WallCtrlInvert.PREF_ENABLED, {\n\t\t\tscope: 'world',\n\t\t\tconfig: false,\n\t\t\ttype: Boolean,\n\t\t\tdefault: false,\n\t\t\tonChange: toggled => {\n\t\t\t\tif (toggled) {\n\t\t\t\t\tlibWrapper.register(ARCHITECT.MOD_NAME, 'KeyboardManager.prototype.isModifierActive', this._isModifierActive, 'WRAPPER');\n\t\t\t\t\tthis._onDragLeftDropRegistrationId = libWrapperShared.register('WallsLayer.prototype._onDragLeftDrop', this._onDragLeftDrop);\n\t\t\t\t} else {\n\t\t\t\t\tlibWrapper.unregister(ARCHITECT.MOD_NAME, 'KeyboardManager.prototype.isModifierActive', false);\n\t\t\t\t\tlibWrapperShared.unregister('WallsLayer.prototype._onDragLeftDrop', this._onDragLeftDropRegistrationId);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tgame.keybindings.register(ARCHITECT.MOD_NAME, 'ctrlInvert', {\n\t\t\trestricted: true,\n\t\t\tname: 'DF_ARCHITECT.WallCtrlInvert.Name',\n\t\t\teditable: [{ key: 'KeyC', modifiers: [KeyboardManager.MODIFIER_KEYS.ALT] }],\n\t\t\tonDown: <any>(async () => {\n\t\t\t\tawait SETTINGS.set(WallCtrlInvert.PREF_ENABLED, !this.enabled)\n\t\t\t\tui.controls.initialize();\n\t\t\t\treturn true;\n\t\t\t})\n\t\t});\n\n\t\tHooks.on('getSceneControlButtons', (controls: SceneControl[]) => {\n\t\t\tconst isGM = game.user.isGM;\n\t\t\tconst wallsControls = controls.find(x => x.name === 'walls');\n\t\t\twallsControls.tools.splice(wallsControls.tools.findIndex(x => x.name === 'snap'), 0, {\n\t\t\t\ticon: 'fas fa-link',\n\t\t\t\tname: 'ctrlInvert',\n\t\t\t\ttitle: 'DF_ARCHITECT.WallCtrlInvert.Title',\n\t\t\t\tvisible: isGM,\n\t\t\t\ttoggle: true,\n\t\t\t\tactive: this.enabled,\n\t\t\t\tonClick: (toggled: boolean) => { this.enabled = toggled }\n\t\t\t});\n\t\t});\n\t}\n\n\tstatic ready() {\n\t\tif (!SETTINGS.get(WallCtrlInvert.PREF_ENABLED)) return;\n\t\tlibWrapper.register(ARCHITECT.MOD_NAME, 'KeyboardManager.prototype.isModifierActive', this._isModifierActive, 'WRAPPER');\n\t\tthis._onDragLeftDropRegistrationId = libWrapperShared.register('WallsLayer.prototype._onDragLeftDrop', this._onDragLeftDrop);\n\t}\n\n\tprivate static _onDragLeftDrop(this: WallsLayer, wrapper: (arg: any) => void, event: PIXI.InteractionEvent) {\n\t\tWallCtrlInvert._invertKeyboardMap = true;\n\t\tconst result = wrapper(event);\n\t\tWallCtrlInvert._invertKeyboardMap = false;\n\t\treturn result;\n\t}\n\tprivate static _isModifierActive(this: WallsLayer, wrapper: any, ...args: any) {\n\t\tif (!WallCtrlInvert._invertKeyboardMap)\n\t\t\treturn wrapper(...args);\n\t\tconst clone = new Set(game.keyboard.downKeys);\n\t\tif (KeyboardManager.MODIFIER_CODES[KeyboardManager.MODIFIER_KEYS.CONTROL].some(k => game.keyboard.downKeys.has(k)))\n\t\t\tKeyboardManager.MODIFIER_CODES[KeyboardManager.MODIFIER_KEYS.CONTROL].forEach(x => game.keyboard.downKeys.delete(x));\n\t\telse\n\t\t\tgame.keyboard.downKeys.add(KeyboardManager.MODIFIER_CODES[KeyboardManager.MODIFIER_KEYS.CONTROL][0]);\n\t\tconst result = wrapper(...args);\n\t\tgame.keyboard.downKeys = clone;\n\t\treturn result;\n\t}\n}\n","import ARCHITECT from \"./architect\";\n\ntype Wrapper = (...args: any) => unknown;\ntype Handler = (wrapped: Wrapper, ...args: any) => unknown;\n\nclass Registration {\n\tnextId = 0;\n\twrappers = new Map<number, Handler>();\n\n\thandler(context: any, wrapped: Wrapper, ...args: any) {\n\t\tconst wrappers = [...this.wrappers.values()];\n\t\tlet current = (...args: any) => wrappers[0].call(context, wrapped, ...args);\n\t\tfor (let c = 1; c < wrappers.length; c++) {\n\t\t\tconst next = current;\n\t\t\tcurrent = (...args: any) => wrappers[c].call(context, next, ...args);\n\t\t}\n\t\tcurrent.apply(context, args);\n\t}\n}\n\nexport default class libWrapperShared {\n\tprivate static registrations = new Map<string, Registration>();\n\n\tstatic register(target: string, handler: Handler) {\n\t\tlet registration = this.registrations.get(target);\n\t\tif (!registration) {\n\t\t\tregistration = new Registration();\n\t\t\tlibWrapper.register(ARCHITECT.MOD_NAME, target,\n\t\t\t\tfunction (this: any, wrapped: Wrapper, ...args: any) { registration.handler(this, wrapped, ...args); },\n\t\t\t\t'WRAPPER');\n\t\t\tthis.registrations.set(target, registration);\n\t\t}\n\t\tconst id = registration.nextId++;\n\t\tregistration.wrappers.set(id, handler);\n\t\treturn id;\n\t}\n\n\tstatic unregister(target: string, id: number): boolean {\n\t\tconst registration = this.registrations.get(target);\n\t\tif (!registration) return false;\n\t\tregistration.wrappers.delete(id);\n\t\tif (registration.wrappers.size === 0) {\n\t\t\tlibWrapper.unregister(ARCHITECT.MOD_NAME, target, false);\n\t\t\tthis.registrations.delete(target);\n\t\t}\n\t\treturn true;\n\t}\n}","import ARCHITECT from \"../core/architect\";\nimport libWrapperShared from \"../core/libWrapperShared\";\n\n\nexport default class WallShortcuts {\n\tprivate static readonly WALL_TYPES = new Set(['walls', 'terrain', 'invisible', 'ethereal', 'doors', 'secret']);\n\n\tstatic init() {\n\t\tconst wallTypes = [\n\t\t\t{ name: 'walls', title: 'Normal Walls' },\n\t\t\t{ name: 'terrain', title: 'Terrain Walls' },\n\t\t\t{ name: 'invisible', title: 'Invisible Walls' },\n\t\t\t{ name: 'ethereal', title: 'Ethereal Walls' },\n\t\t\t{ name: 'doors', title: 'Normal Doors' },\n\t\t\t{ name: 'secret', title: 'Secret Doors' }\n\t\t];\n\t\tvar counter = 0;\n\t\tfor (let tool of wallTypes) {\n\t\t\tconst currentTool = tool;\n\t\t\tgame.keybindings.register(ARCHITECT.MOD_NAME, `WallShortcuts-${tool.name}`, {\n\t\t\t\trestricted: true,\n\t\t\t\tname: tool.title,\n\t\t\t\thint: 'DF_ARCHITECT.WallShortcuts.Settings.Description',\n\t\t\t\teditable: [{ key: `Digit${++counter}`, modifiers: [KeyboardManager.MODIFIER_KEYS.SHIFT] }],\n\t\t\t\tonDown: () => {\n\t\t\t\t\tif (ui.controls.activeControl !== 'walls') return false;\n\t\t\t\t\t(ui.controls as any)._onClickTool({ preventDefault: function () { }, currentTarget: { dataset: { tool: currentTool.name } } });\n\t\t\t\t\tif (canvas.walls.preview.children.length > 0 && canvas.walls.preview.children[0] instanceof Wall) {\n\t\t\t\t\t\t// @ts-expect-error\n\t\t\t\t\t\tconst data: { [key: string]: number } = <any>canvas.walls._getWallDataFromActiveTool(game.activeTool);\n\t\t\t\t\t\tfor (const key of Object.keys(data)) {\n\t\t\t\t\t\t\tcanvas.walls.preview.children[0].document.data[key] = data[key];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tgame.keybindings.register(ARCHITECT.MOD_NAME, 'WallShortcuts-ForceGridSnap', {\n\t\t\trestricted: true,\n\t\t\tname: 'DF_ARCHITECT.WallShortcuts.Settings.ToggleForceSnapName',\n\t\t\thint: 'DF_ARCHITECT.WallShortcuts.Settings.ToggleForceSnapHint',\n\t\t\teditable: [{ key: 'F', modifiers: [] }],\n\t\t\tonDown: () => {\n\t\t\t\tif (!(canvas.activeLayer instanceof WallsLayer)) return;\n\t\t\t\t$('#controls li[data-tool=\"snap\"]').trigger('click');\n\t\t\t}\n\t\t});\n\n\t\tlibWrapper.register(ARCHITECT.MOD_NAME, 'WallsLayer.prototype._onDragLeftStart', this._patchForceSnap, 'WRAPPER');\n\t\tlibWrapperShared.register('WallsLayer.prototype._onDragLeftDrop', this._patchForceSnap);\n\t}\n\n\tprivate static _patchForceSnap(wrapper: (event: any) => any, event: any) {\n\t\t// @ts-expect-error\n\t\tlet forceSnap = canvas.walls._forceSnap;\n\t\tif (!forceSnap) return wrapper(event);\n\t\tif (event.data.originalEvent.shiftKey)\n\t\t\t// @ts-expect-error\n\t\t\tcanvas.walls._forceSnap = false;\n\t\tconst result = wrapper(event);\n\t\t// @ts-expect-error\n\t\tcanvas.walls._forceSnap = forceSnap;\n\t\treturn result;\n\t}\n}\n","import { WallData } from \"@league-of-foundry-developers/foundry-vtt-types/src/foundry/common/data/module.mjs\";\nimport SETTINGS from \"../core/settings\";\n\nexport default class WallJoinSplit {\n\tstatic readonly PREF_ENABLED = 'WallJoinSplit-Enabled';\n\tstatic get enabled(): boolean { return SETTINGS.get(WallJoinSplit.PREF_ENABLED) }\n\tstatic set enabled(value: boolean) { SETTINGS.set(WallJoinSplit.PREF_ENABLED, value) }\n\tstatic init() {\n\t\tHooks.on('getSceneControlButtons', (controls: SceneControl[]) => {\n\t\t\tconst isGM = game.user.isGM;\n\t\t\tconst wallsControls = controls.find(x => x.name === 'walls');\n\t\t\twallsControls.tools.splice(wallsControls.tools.findIndex(x => x.name === 'clone') + 1, 0, {\n\t\t\t\ticon: 'df df-alt-split',\n\t\t\t\tname: 'split',\n\t\t\t\ttitle: 'DF_ARCHITECT.WallJoinSplit.Split_Label',\n\t\t\t\tbutton: true,\n\t\t\t\tvisible: isGM,\n\t\t\t\tonClick: this._splitWalls.bind(this)\n\t\t\t}, {\n\t\t\t\ticon: 'df df-alt-join',\n\t\t\t\tname: 'join',\n\t\t\t\ttitle: 'DF_ARCHITECT.WallJoinSplit.Join_Label',\n\t\t\t\tbutton: true,\n\t\t\t\tvisible: isGM,\n\t\t\t\tonClick: this._joinWalls.bind(this)\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate static async _splitWalls() {\n\t\tconst layer = canvas.walls;\n\t\tconst walls = layer.controlled;\n\t\tconst newWalls: WallData[] = [];\n\t\tfor (let wall of walls) {\n\t\t\tconst [x1, y1, x2, y2] = wall.document.c;\n\t\t\tvar midX = (x1 + x2) / 2;\n\t\t\tvar midY = (y1 + y2) / 2;\n\t\t\t//@ts-expect-error\n\t\t\t[midX, midY] = layer._getWallEndpointCoordinates(new PIXI.Point(midX, midY), {snap:false});\n\t\t\tconst wall1 = duplicate(wall.document._source) as WallData;\n\t\t\twall1.c = [x1, y1, midX, midY];\n\t\t\tdelete wall1._id;\n\t\t\tconst wall2 = duplicate(wall.document._source) as WallData;\n\t\t\twall2.c = [midX, midY, x2, y2];\n\t\t\tdelete wall2._id;\n\t\t\tnewWalls.push(wall1, wall2)\n\t\t}\n\t\tawait game.scenes.viewed.deleteEmbeddedDocuments('Wall', walls.map(x => x.id));\n\t\t// await layer.deleteMany(walls.map(x => x.id));\n\t\tconst wallObjects = (await game.scenes.viewed.createEmbeddedDocuments('Wall', <any>newWalls));\n\t\tfor (let o of wallObjects) {\n\t\t\tconst wall = layer.get(o.id);\n\t\t\tif (!wall.visible || !wall.can(game.user, \"control\")) continue;\n\t\t\twall.control({ releaseOthers: false });\n\t\t}\n\t}\n\tprivate static async _joinWalls() {\n\t\tconst points = new Map<string, Wall[]>();\n\t\tconst layer = canvas.walls;\n\t\tconst walls = layer.controlled;\n\t\tfor (let wall of walls) {\n\t\t\tconst [x1, y1, x2, y2] = wall.document.c;\n\t\t\t//@ts-expect-error\n\t\t\tpoints.getOrDefault(JSON.stringify(layer._getWallEndpointCoordinates(new PIXI.Point(x1, y1), {snap:false})), []).push(wall);\n\t\t\t//@ts-expect-error\n\t\t\tpoints.getOrDefault(JSON.stringify(layer._getWallEndpointCoordinates(new PIXI.Point(x2, y2), {snap:false})), []).push(wall);\n\t\t}\n\t\tif ([...points.values()].reduce((r, x) => x.length != 2 ? r + 1 : r, 0) > 2) {\n\t\t\tui.notifications.error('Selected walls are disjointed. Make sure they are a single line of connected walls.');\n\t\t\treturn;\n\t\t}\n\t\tconst endpoints = [...points.entries()].filter(x => x[1].length == 1);\n\t\tconst wallData = duplicate(endpoints[0][1][0].document._source) as WallData;\n\t\tdelete wallData._id;\n\t\twallData.c = endpoints.reduce((r, x) => r.concat(JSON.parse(x[0])), [] as number[]) as [number, number, number, number];\n\t\tawait game.scenes.viewed.deleteEmbeddedDocuments('Wall', walls.map(x => x.id));\n\t\tconst result = <WallDocument[]><any[]>await game.scenes.viewed.createEmbeddedDocuments('Wall', <any[]>[wallData]);\n\t\tfor (let wall of result) wall.object.control();\n\t}\n}\n","import ARCHITECT from \"../core/architect\";\nimport SETTINGS from \"../core/settings\";\n\n\nexport default class AltLightOrigin {\n\tprivate static readonly LIGHTING_LAYER = 'lighting';\n\tprivate static readonly KEYEVENT_UP = 'keyup';\n\tprivate static readonly KEYEVENT_DOWN = 'keydown';\n\tstatic readonly PREF_COLOUR1 = 'AltLightOrigin.Colour1';\n\tstatic readonly PREF_COLOUR2 = 'AltLightOrigin.Colour2';\n\tprivate static _showCrosshairs = false;\n\tstatic get showCrosshairs() { return this._showCrosshairs; }\n\tprivate static _alternateColour = false;\n\tstatic get alternateColour() { return this._alternateColour; }\n\n\tprivate static _controls: Set<AltLightControlIcon> = new Set();\n\tstatic register(control: AltLightControlIcon) {\n\t\tthis._controls.add(control);\n\t}\n\tstatic deregister(control: AltLightControlIcon) {\n\t\tthis._controls.delete(control);\n\t}\n\tstatic init() {\n\t\tlibWrapper.register(ARCHITECT.MOD_NAME, 'AmbientLight.prototype._drawControlIcon', () => {\n\t\t\tconst size = Math.max(Math.round(((<Canvas>canvas).dimensions.size * 0.5) / 20) * 20, 40);\n\t\t\tlet icon = new AltLightControlIcon({ texture: CONFIG.controlIcons.light, size: size });\n\t\t\ticon.x -= (size * 0.5);\n\t\t\ticon.y -= (size * 0.5);\n\t\t\treturn icon;\n\t\t}, 'OVERRIDE');\n\t}\n\tstatic ready() {\n\t\t// @ts-ignore\n\t\tnew window.Ardittristan.ColorSetting(ARCHITECT.MOD_NAME, AltLightOrigin.PREF_COLOUR1, {\n\t\t\tname: \"DF_ARCHITECT.AltLightOrigin.Settings.Colour1_Name\",\n\t\t\thint: \"DF_ARCHITECT.AltLightOrigin.Settings.Colour1_Hint\",\n\t\t\tlabel: \"DF_ARCHITECT.AltLightOrigin.Settings.Colour1_Name\",\n\t\t\trestricted: true,\n\t\t\tdefaultColor: \"#ffffffff\",\n\t\t\tscope: \"world\",\n\t\t});\n\t\t// @ts-ignore\n\t\tnew window.Ardittristan.ColorSetting(ARCHITECT.MOD_NAME, AltLightOrigin.PREF_COLOUR2, {\n\t\t\tname: \"DF_ARCHITECT.AltLightOrigin.Settings.Colour2_Name\",\n\t\t\thint: \"DF_ARCHITECT.AltLightOrigin.Settings.Colour2_Hint\",\n\t\t\tlabel: \"DF_ARCHITECT.AltLightOrigin.Settings.Colour2_Name\",\n\t\t\trestricted: true,\n\t\t\tdefaultColor: \"#ff5500ff\",\n\t\t\tscope: \"world\",\n\t\t});\n\n\t\tHooks.on('renderSceneControls', (controls: SceneControls) => {\n\t\t\tif (controls.activeControl === AltLightOrigin.LIGHTING_LAYER) {\n\t\t\t\twindow.addEventListener(AltLightOrigin.KEYEVENT_DOWN, this._keyEventHandler.bind(this));\n\t\t\t\twindow.addEventListener(AltLightOrigin.KEYEVENT_UP, this._keyEventHandler.bind(this));\n\t\t\t}\n\t\t\telse {\n\t\t\t\twindow.removeEventListener(AltLightOrigin.KEYEVENT_DOWN, this._keyEventHandler.bind(this));\n\t\t\t\twindow.removeEventListener(AltLightOrigin.KEYEVENT_UP, this._keyEventHandler.bind(this));\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate static _keyEventHandler(event: KeyboardEvent) {\n\t\tif (event.repeat\n\t\t\t|| (event.code !== 'ShiftLeft'\n\t\t\t\t&& event.code !== 'ShiftRight'\n\t\t\t\t&& event.code !== 'AltLeft'\n\t\t\t\t&& event.code !== 'AltRight')) return;\n\t\tthis._showCrosshairs = event.shiftKey;\n\t\tthis._alternateColour = event.altKey;\n\t\tthis._controls.forEach(x => x.draw());\n\t}\n}\nclass AltLightControlIcon extends ControlIcon {\n\tconstructor({\n\t\ttexture,\n\t\tsize = 40,\n\t\tborderColor = 0xFF5500,\n\t\ttint = null\n\t}: {\n\t\ttexture: string;\n\t\tsize?: number;\n\t\tborderColor?: number;\n\t\ttint?: number | null;\n\t}) {\n\t\tsuper({ texture, size, borderColor, tint });\n\t\tAltLightOrigin.register(this);\n\t}\n\t/** @override */\n\tasync draw() {\n\t\tif (!AltLightOrigin.showCrosshairs) {\n\t\t\tthis.icon.alpha = 1;\n\t\t\tif (!this.icon.texture) return this;\n\t\t\treturn super.draw();\n\t\t}\n\t\tthis.icon.alpha = 0;\n\t\t// Draw border\n\t\tthis.border.clear().lineStyle(2, this.borderColor, 1.0).drawRoundedRect(...this.rect, 5).endFill();\n\t\tthis.border.visible = false;\n\t\tconst parseColour = (colorStr: string) => {\n\t\t\tif (colorStr.startsWith('#')) colorStr = colorStr.substr(1);\n\t\t\tif (colorStr.length === 8) colorStr = colorStr.substr(0, 6);\n\t\t\treturn parseInt('0x' + colorStr);\n\t\t}\n\n\t\t// Draw icon\n\t\tvar colour = parseColour(SETTINGS.get<string>(AltLightOrigin.alternateColour ? AltLightOrigin.PREF_COLOUR2 : AltLightOrigin.PREF_COLOUR1));\n\t\tif (isNaN(colour))\n\t\t\tcolour = parseColour(SETTINGS.default(AltLightOrigin.alternateColour ? AltLightOrigin.PREF_COLOUR2 : AltLightOrigin.PREF_COLOUR1));\n\t\tthis.bg.clear()\n\t\t\t.lineStyle(1, colour, 1.0)\n\t\t\t.moveTo(this.rect[0]-1, this.rect[1]-1)\n\t\t\t.lineTo(this.rect[2]-1, this.rect[3]-1)\n\t\t\t.moveTo(this.rect[2]-1, this.rect[1]-1)\n\t\t\t.lineTo(this.rect[0]-1, this.rect[3]-1)\n\t\t\t.lineStyle(2, colour, 1.0)\n\t\t\t.drawEllipse(\n\t\t\t\tthis.rect[0] + (this.rect[2] / 2),\n\t\t\t\tthis.rect[1] + (this.rect[3] / 2),\n\t\t\t\tthis.rect[2] / 2,\n\t\t\t\tthis.rect[3] / 2\n\t\t\t)\n\t\t\t.endFill();\n\t\treturn this;\n\t}\n\tdestroy(options?: {\n\t\tchildren?: boolean;\n\t\ttexture?: boolean;\n\t\tbaseTexture?: boolean;\n\t}) {\n\t\tsuper.destroy(options);\n\t\tAltLightOrigin.deregister(this);\n\t}\n}\n","\nclass _QuickColourPicker {\n\tprivate readonly SIZE = 5;\n\tprivate readonly HALF_SIZE = Math.trunc(this.SIZE / 2);\n\tprivate _BUTTON_HTML = '';\n\tprivate _rows: NodeListOf<HTMLTableRowElement>;\n\tprivate _pixels: Uint8Array = null;\n\tprivate _colour: string | false;\n\tprivate _currentApp: Application;\n\tprivate _enabled = false;\n\tprivate _promise: { res: (colour: string | false) => void } = null;\n\tprivate _states: { id: number, minimized: boolean }[] = null;\n\tprivate _html: HTMLElement = $(`<div id=\"swatch\">\n\t<table>\n\t\t${('<tr>' + ('<td></td>'.repeat(this.SIZE)) + '</tr>').repeat(this.SIZE)}\n\t</table>\n</div>`)[0];\n\tprivate _docObserver = new MutationObserver(this._handleMutation);\n\n\tconstructor() {\n\t\tthis._rows = this._html.querySelectorAll('tr');\n\t}\n\tready() {\n\t\tthis._BUTTON_HTML = `<button type=\"button\" tabindex=\"-1\" style=\"flex:0 0\" class=\"df-arch-colourpicker\" title=\"${'DF_ARCHITECT.QuickColourPicker.EyeDrop_Title'.localize()}\"><i class=\"fas fa-eye-dropper\"></i></button>`;\n\t\tdocument.addEventListener('mousemove', this._handleMouseMove.bind(this));\n\t\tdocument.addEventListener('mousedown', this._handleMouseDownUp.bind(this));\n\t\tdocument.addEventListener('mouseup', this._handleMouseDownUp.bind(this));\n\t\tthis._docObserver.observe(document.body, { childList: true })\n\t}\n\tprivate _handleMutation(mutations: MutationRecord[], observer: MutationObserver) {\n\t\tfor (let mutation of mutations) {\n\t\t\tmutation.addedNodes.forEach(x => {\n\t\t\t\tif (!(x instanceof HTMLElement)) return;\n\t\t\t\tif (!x.classList.contains('window-app')) return;\n\t\t\t\tconst element = $(x);\n\t\t\t\tconst appId = parseInt(element.data('appid'));\n\t\t\t\tif (isNaN(appId)) return;\n\t\t\t\tconst app = ui.windows[appId];\n\t\t\t\telement.find('input[type=\"color\"]').each((_, x) => {\n\t\t\t\t\tconst button = $(QuickColourPicker._BUTTON_HTML);\n\t\t\t\t\tbutton.on('click', async (event: JQuery.ClickEvent) => {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\tconst colour = await QuickColourPicker.requestColourPick(app);\n\t\t\t\t\t\tif (colour === false) return;\n\t\t\t\t\t\t$(event.currentTarget).parent().find('input[type=\"color\"]').val(colour).trigger('change');\n\t\t\t\t\t\t$(event.currentTarget).parent().find('input.color').val(colour).trigger('change');\n\t\t\t\t\t})\n\t\t\t\t\t$(x).after(button);\n\t\t\t\t})\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate _rightDownPosition = [0, 0];\n\tprivate _ignoreRightClick = false;\n\tprivate async _handleMouseDownUp(event: MouseEvent) {\n\t\tif (!this._enabled) return;\n\t\tif (event.button !== 0) {\n\t\t\tif (event.button !== 2) return;\n\t\t\tif (event.type === 'mouseup') {\n\t\t\t\tif (this._ignoreRightClick) return;\n\t\t\t\tthis._colour = false;\n\t\t\t\tawait this._completeColourRequest();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._rightDownPosition = [event.x, event.y];\n\t\t\t\tif (event.button === 2)\n\t\t\t\t\tthis._ignoreRightClick = false;\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tawait this._completeColourRequest();\n\t}\n\n\tprivate async _completeColourRequest() {\n\t\t$(this._html).remove();\n\t\t$(document.body).css('cursor', '');\n\t\tconst result = this._colour;\n\t\tconst promise = this._promise;\n\t\tthis._promise = null;\n\t\tthis._colour = '';\n\t\tthis._enabled = false;\n\t\tthis._pixels = null;\n\t\tthis._currentApp = null;\n\t\t// Restore the windows that were not minimized previously\n\t\tfor (let state of this._states) {\n\t\t\tif (state.minimized) continue;\n\t\t\tui.windows[state.id].maximize();\n\t\t}\n\t\tthis._states = null;\n\t\tpromise.res(result);\n\t\tthis._currentApp?.bringToTop();\n\t}\n\n\tprivate _handleMouseMove(event: MouseEvent) {\n\t\tif (!this._enabled) return;\n\t\tif (event.buttons === 2) {\n\t\t\tconst deltaX = event.x - this._rightDownPosition[0];\n\t\t\tconst deltaY = event.y - this._rightDownPosition[1];\n\t\t\tif (Math.sqrt((deltaX * deltaX) + (deltaY * deltaY)) > 20)\n\t\t\t\tthis._ignoreRightClick = true;\n\t\t}\n\t\tconst gl = (<Canvas>canvas).app.renderer.context.renderer.gl;\n\t\tgl.readPixels(event.x - this.HALF_SIZE,\n\t\t\t(((<Canvas>canvas).app.renderer.height - 1) - event.y) - this.HALF_SIZE,\n\t\t\tthis.SIZE, this.SIZE, gl.RGBA,\n\t\t\tgl.UNSIGNED_BYTE, this._pixels);\n\t\tvar hex = '';\n\t\tvar x = 0;\n\t\tvar y = 0;\n\t\tfor (let c = 0; c < this._pixels.length; c += 4) {\n\t\t\thex = \"#\" + ((1 << 24) + (this._pixels[c] << 16) + (this._pixels[c + 1] << 8) + this._pixels[c + 2]).toString(16).slice(1);\n\t\t\tx = (c / 4) % this.SIZE;\n\t\t\ty = (this.SIZE - 1) - Math.trunc((c / 4) / this.SIZE);\n\t\t\t(<HTMLElement>this._rows[y].children[x]).style.backgroundColor = hex;\n\t\t\tif (x == this.HALF_SIZE && y == this.HALF_SIZE) {\n\t\t\t\tconst colour = (this._pixels[c] + this._pixels[c + 1] + this._pixels[c + 2]) / 3;\n\t\t\t\tif (colour > 128)\n\t\t\t\t\tthis._html.style.setProperty('--dfarch-border', '#000');\n\t\t\t\telse\n\t\t\t\t\tthis._html.style.setProperty('--dfarch-border', '#fff');\n\t\t\t\tthis._colour = hex;\n\t\t\t}\n\t\t}\n\t\tthis._html.style.left = event.x + 1 + 'px';\n\t\tthis._html.style.top = event.y + 1 + 'px';\n\t}\n\n\tasync requestColourPick(app?: Application): Promise<string | false> {\n\t\treturn new Promise(async (res, _) => {\n\t\t\tif (this._promise != null) this._promise.res(false);\n\t\t\tthis._promise = { res };\n\t\t\tthis._currentApp = app;\n\t\t\tthis._pixels = new Uint8Array(this.SIZE * this.SIZE * 4);\n\t\t\tdocument.body.appendChild(this._html);\n\n\t\t\t// Minimize all of the current windows\n\t\t\tif (this._states === null) {\n\t\t\t\tconst promises: Promise<void>[] = [];\n\t\t\t\tthis._states = [];\n\t\t\t\tfor (let window of Object.values(ui.windows)) {\n\t\t\t\t\t// If the application does not allow minimization, ignore it\n\t\t\t\t\tif (!window.options.minimizable) continue;\n\t\t\t\t\tthis._states.push({ id: window.appId, minimized: (<any>window)._minimized })\n\t\t\t\t\tpromises.push(window.minimize());\n\t\t\t\t}\n\t\t\t\tawait Promise.all(promises);\n\t\t\t}\n\n\t\t\tthis._enabled = true;\n\t\t\t$(document.body).css('cursor', 'crosshair');\n\t\t});\n\t}\n}\n\nexport const QuickColourPicker = new _QuickColourPicker();\n//@ts-ignore\nwindow.EyeDropper = { getColor: _QuickColourPicker.prototype.requestColourPick.bind(QuickColourPicker) };","import ARCHITECT from \"../core/architect\";\nimport SETTINGS from \"../core/settings\";\nimport TileRender from \"./capture/TileExt\";\nimport DrawingRender from \"./capture/DrawingExt\";\n\ninterface LayerFilter {\n\ts: boolean;  // show layer\n\th?: boolean; // show hidden elements\n\tc?: boolean; // show controls\n}\n\n// Declare OpenCV API\ndeclare namespace cv {\n\tclass Mat {\n\t\tdelete(): void;\n\t\tisDeleted(): boolean;\n\t\tsize(): { width: number, height: number };\n\t\tget rows(): number;\n\t\tget cols(): number;\n\t}\n\tclass MatVector {\n\t\tpush_back(mat: Mat): void;\n\t\tdelete(): void;\n\t\tisDeleted(): boolean;\n\t}\n\tfunction imread(src: HTMLCanvasElement): Mat;\n\tfunction imshow(dst: HTMLCanvasElement, image: Mat): void;\n\tfunction hconcat(vector: MatVector, dst: Mat): void;\n\tfunction vconcat(vector: MatVector, dst: Mat): void;\n\tfunction getBuildInformation(): string;\n\tvar onRuntimeInitialized: Function;\n}\n\ninterface ImageData {\n\tdata: string;\n\twidth: number;\n\theight: number;\n}\n\ninterface CaptureSession {\n\tid: number;\n\thiddenItemsSnapshot: PlaceableObject[];\n\toccludedItemsSnapshot: Tile[];\n\tforegroundPreviouslyActive: boolean;\n}\n\nconst afterDOMUpdate = (block: () => void, delay = 10) => setTimeout(block, delay);\nconst waitForDOMUpdate = async (delay = 10) => new Promise<void>(res => afterDOMUpdate(res, delay));\nconst DELETE_RESOURCES = (resources: any | any[]) => {\n\t// If a single resource was given\n\tif (!(resources instanceof Array)) {\n\t\t// Delete it if it is alive\n\t\tif (resources !== null && resources !== undefined && !resources.isDeleted())\n\t\t\tresources.delete();\n\t\treturn;\n\t}\n\t// Iterate over all resources given\n\tfor (let res of resources) {\n\t\tif (res === null || res === undefined) continue;\n\t\t// If item is an Array, recurse!\n\t\tif (res instanceof Array) DELETE_RESOURCES(res);\n\t\t// If the item is already dead, ignore!\n\t\telse if (res.isDeleted()) continue;\n\t\t// Delete the alive resource\n\t\telse res.delete();\n\t}\n}\n\nexport default class CaptureGameScreen {\n\tprivate static readonly SPLIT_DIM = 1024 * 4; // Maximum 64MiB Raw Image\n\tprivate static readonly WARNING_SIZE = CaptureGameScreen.SPLIT_DIM * CaptureGameScreen.SPLIT_DIM;\n\tstatic readonly PREF_ALLOW_PC = 'CaptureGameScreen.AllowPC';\n\tstatic readonly PREF_COMP = 'CaptureGameScreen.Compression';\n\tstatic readonly PREF_FRMT = 'CaptureGameScreen.Format';\n\tstatic readonly PREF_TRGT = 'CaptureGameScreen.Target';\n\tstatic readonly PREF_PADS = 'CaptureGameScreen.Padding';\n\tstatic readonly PREF_LYRS = 'CaptureGameScreen.Layers';\n\tstatic readonly PREF_BG_HIDE = 'CaptureGameScreen.BG.Hide';\n\tstatic readonly PREF_BG_COLO = 'CaptureGameScreen.BG.Colour';\n\tstatic readonly PREF_BG_ALPH = 'CaptureGameScreen.BG.Alpha';\n\tstatic readonly LayersWithInvisiblePlaceables = ['walls', 'lighting', 'sounds', 'templates', 'notes'];\n\tstatic readonly LayersWithHiddenPlaceables = ['background', 'tokens', 'drawings', 'foreground'];\n\tprivate static _dialogLayerFilters: { [key: string]: LayerFilter };\n\tprivate static _layerFilters: { [key: string]: LayerFilter };\n\tprivate static _captureInProgress = false;\n\tprivate static _currentSession: CaptureSession = null;\n\tprivate static _openCVPromise: Promise<void> = null;\n\n\tstatic getLayerState(key: string): LayerFilter {\n\t\treturn <LayerFilter>duplicate(this._layerFilters[key]);\n\t}\n\tprivate static _getDialogLayerFilter(key: string): LayerFilter {\n\t\tif (!this._dialogLayerFilters[key])\n\t\t\tthis._dialogLayerFilters[key] = { s: true };\n\t\treturn this._dialogLayerFilters[key];\n\t}\n\tstatic init() {\n\t\tSETTINGS.register(this.PREF_ALLOW_PC, {\n\t\t\tname: 'DF_ARCHITECT.CaptureGameScreen.Setting.AllowPC_Name',\n\t\t\thint: 'DF_ARCHITECT.CaptureGameScreen.Setting.AllowPC_Hint',\n\t\t\tscope: 'world',\n\t\t\tconfig: true,\n\t\t\ttype: Boolean,\n\t\t\tdefault: false\n\t\t});\n\t\tSETTINGS.register(this.PREF_COMP, { scope: 'client', config: false, type: Number, default: 0.95 });\n\t\tSETTINGS.register(this.PREF_FRMT, { scope: 'client', config: false, type: String, default: 'png' });\n\t\tSETTINGS.register(this.PREF_TRGT, { scope: 'client', config: false, type: String, default: 'all' });\n\t\tSETTINGS.register(this.PREF_PADS, { scope: 'client', config: false, type: Boolean, default: false });\n\t\tSETTINGS.register(this.PREF_LYRS, { scope: 'client', config: false, type: Object, default: {} });\n\t\tSETTINGS.register(this.PREF_BG_HIDE, { scope: 'client', config: false, type: Boolean, default: false });\n\t\tSETTINGS.register(this.PREF_BG_COLO, { scope: 'client', config: false, type: String, default: '#999999' });\n\t\tSETTINGS.register(this.PREF_BG_ALPH, { scope: 'client', config: false, type: Number, default: 100 });\n\n\t\tthis._dialogLayerFilters = SETTINGS.get(this.PREF_LYRS);\n\n\t\t//! TEMPORARY DISABLING OF CANVAS CAPTURE\n\t\tHooks.on('renderSettings', (settings: Settings, html: JQuery<HTMLElement>, data: {}) => {\n\t\t\tif (!SETTINGS.get(this.PREF_ALLOW_PC) && !game.user.isGM) return;\n\t\t\tconst captureButton = $(`<div><button data-action=\"screen-capture\"><i class=\"fas fa-camera\"></i>${'DF_ARCHITECT.CaptureGameScreen.ScreenCapture.Label'.localize()}</button></div>`);\n\t\t\t//! Remove this line\n\t\t\tcaptureButton.find('button').on('click', () => ui.notifications.warn(\"Canvas Capture is temporarily unavailable until the layer filtering feature can be fixed\"));\n\t\t\t//! Re-enable this line of code\n\t\t\t// captureButton.find('button').on('click', CaptureGameScreen.promptForCapture.bind(CaptureGameScreen));\n\t\t\thtml.find('#game-details').after(captureButton);\n\t\t});\n\n\t\tHandlebars.registerHelper('add', (lhs, rhs) => lhs + rhs);\n\n\t\tlibWrapper.register(ARCHITECT.MOD_NAME, 'Tile.prototype.refresh', function (this: Tile, wrapper: any, ...args: any) {\n\t\t\tif (CaptureGameScreen._captureInProgress) return TileRender.bind(this)();\n\t\t\treturn wrapper(...args);\n\t\t}, 'MIXED');\n\t\tlibWrapper.register(ARCHITECT.MOD_NAME, 'Drawing.prototype.refresh', function (this: Drawing, wrapper: any, ...args: any) {\n\t\t\tif (CaptureGameScreen._captureInProgress) return DrawingRender.bind(this)();\n\t\t\treturn wrapper(...args);\n\t\t}, 'MIXED');\n\t}\n\n\tstatic async promptForCapture() {\n\t\tif (!game.scenes.viewed) {\n\t\t\tui.notifications.warn('DF_ARCHITECT.CaptureGameScreen.ScreenCapture.WarningNoScene'.localize());\n\t\t\treturn;\n\t\t}\n\t\tconst layerToConfig = (name: string, layer: CanvasLayer): any => {\n\t\t\tvar label = ('LAYERS.' + name).localize();\n\t\t\tif (label.startsWith('LAYERS.'))\n\t\t\t\tlabel = 'LAYERS.unknown'.localize().replace('{0}', name[0].titleCase());\n\t\t\treturn {\n\t\t\t\tlabel, name: name,\n\t\t\t\tactive: name !== 'notes' ? layer._active : layer._active || game.settings.get(\"core\", (<any>layer.constructor).TOGGLE_SETTING),\n\t\t\t\thasControls: this.LayersWithInvisiblePlaceables.includes(name),\n\t\t\t\thasHidden: this.LayersWithHiddenPlaceables.includes(name),\n\t\t\t\tfilter: mergeObject({ s: true, h: false, c: false }, this._getDialogLayerFilter(name))\n\t\t\t}\n\t\t};\n\t\tconst data = {\n\t\t\tisGM: game.user.isGM,\n\t\t\tcompression: SETTINGS.get(this.PREF_COMP),\n\t\t\tpng: SETTINGS.get(this.PREF_FRMT) === 'png',\n\t\t\tjpeg: SETTINGS.get(this.PREF_FRMT) === 'jpeg',\n\t\t\twebp: SETTINGS.get(this.PREF_FRMT) === 'webp',\n\t\t\tall: SETTINGS.get(this.PREF_TRGT) === 'all',\n\t\t\tpads: SETTINGS.get(this.PREF_PADS),\n\t\t\tlayers: Object.keys(CONFIG.Canvas.layers)\n\t\t\t\t.filter(x => {\n\t\t\t\t\tconst properlyDefined = !!CONFIG.Canvas.layers[x].layerClass;\n\t\t\t\t\tconst message = `Invalid layer registration '{name}'. This may be from a module that has not been updated for FoundryVTT V9+. You will need to disable the module providing this layer in order to prevent it being visible in any renders.`;\n\t\t\t\t\tif (!properlyDefined) {\n\t\t\t\t\t\tconst name = typeof CONFIG.Canvas.layers.simplefog === 'function' && (<any>CONFIG.Canvas.layers[x]).name ? (<any>CONFIG.Canvas.layers[x]).name : x;\n\t\t\t\t\t\tconsole.warn(message.replace('{name}', name));\n\t\t\t\t\t}\n\t\t\t\t\treturn properlyDefined;\n\t\t\t\t})\n\t\t\t\t.map(x => layerToConfig(x, <CanvasLayer>(<any>CONFIG.Canvas.layers[x]).layerClass.instance)),\n\t\t\tbg: {\n\t\t\t\thide: SETTINGS.get<boolean>(this.PREF_BG_HIDE),\n\t\t\t\talph: SETTINGS.get<number>(this.PREF_BG_ALPH),\n\t\t\t\tcolo: SETTINGS.get<string>(this.PREF_BG_COLO)\n\t\t\t}\n\t\t};\n\n\t\t// Initialize the Background\n\t\tif (!!canvas.background.bg)\n\t\t\tcanvas.background.bg.visible = !data.bg.hide;\n\t\tcanvas.app.renderer.backgroundColor = parseInt(data.bg.colo.slice(1), 16);\n\t\t(<any>canvas.app.renderer).backgroundAlpha = data.bg.alph / 100.0;\n\n\t\t// Completely hide the placeables that are set as \"Hidden\"\n\t\tconst session = this.beginCapture(false);\n\t\tif (!session) {\n\t\t\tui.notifications.warn('DF_ARCHITECT.CaptureGameScreen.ErrorCaptureInProgress'.localize());\n\t\t\treturn;\n\t\t}\n\t\tvar cleanupHandled = false;\n\t\tconst dialog = new Dialog({\n\t\t\ttitle: 'DF_ARCHITECT.CaptureGameScreen.ScreenCapture.Label'.localize(),\n\t\t\tcontent: await renderTemplate(`modules/${ARCHITECT.MOD_NAME}/templates/capture-board.hbs`, data),\n\t\t\tdefault: 'save',\n\t\t\tbuttons: {\n\t\t\t\tcancel: {\n\t\t\t\t\ticon: '<i class=\"fas fa-times\"></i>',\n\t\t\t\t\tlabel: 'DF_ARCHITECT.General.Cancel'.localize(),\n\t\t\t\t\tcallback: () => { cleanupHandled = true; this.endCapture(session); }\n\t\t\t\t},\n\t\t\t\tsave: {\n\t\t\t\t\ticon: '<i class=\"fas fa-camera\"></i>',\n\t\t\t\t\tlabel: 'DF_ARCHITECT.CaptureGameScreen.ScreenCapture.ContinueButton'.localize(),\n\t\t\t\t\tcallback: async (html: JQuery | HTMLElement) => {\n\t\t\t\t\t\tcleanupHandled = true;\n\t\t\t\t\t\thtml = $(html);\n\t\t\t\t\t\tvar target: string = '';\n\t\t\t\t\t\thtml.find('input[name=\"target\"]').each((_, element) => {\n\t\t\t\t\t\t\tif ((<HTMLInputElement>element).checked)\n\t\t\t\t\t\t\t\ttarget = $(element).val() as string;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tconst keepPadding = (<HTMLInputElement>html.find('input[name=\"padding\"]')[0]).checked;\n\t\t\t\t\t\tconst compression: number = parseFloat(html.find('#compression').val() as string);\n\t\t\t\t\t\tconst call = target === 'all' ? this.captureCanvas : this.captureView;\n\t\t\t\t\t\tconst format: string = html.find('#format').val() as string;\n\t\t\t\t\t\tawait Promise.all([\n\t\t\t\t\t\t\tSETTINGS.set(this.PREF_COMP, compression),\n\t\t\t\t\t\t\tSETTINGS.set(this.PREF_FRMT, format),\n\t\t\t\t\t\t\tSETTINGS.set(this.PREF_TRGT, target),\n\t\t\t\t\t\t\tSETTINGS.set(this.PREF_PADS, keepPadding)]);\n\t\t\t\t\t\tawait dialog.close();\n\t\t\t\t\t\tvar imageData: ImageData;\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\timageData = await call(<any>{ format: 'image/' + format, compression, keepPadding });\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\tconsole.warn(error);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\tthis.endCapture(session);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tawait this.saveImageData({ image: imageData });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tclose: () => { if (!cleanupHandled) this.endCapture(session); },\n\t\t\trender: (htmlElement: HTMLElement | JQuery<HTMLElement>) => {\n\t\t\t\tconst html = $(htmlElement);\n\t\t\t\tconst compression = html.find('#compression');\n\t\t\t\tconst output = html.find('#compr-out');\n\t\t\t\tcompression.on('change', () => output.html(<string>compression.val()));\n\t\t\t\tcompression.on('input', () => compression.trigger('change'));\n\t\t\t\thtml.find('#filter-reset').on('click', (e: Event) => {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tObject.entries(this._dialogLayerFilters).forEach((layerFilter) => {\n\t\t\t\t\t\tvar [layer, filter] = layerFilter;\n\t\t\t\t\t\tif (!filter.s) {\n\t\t\t\t\t\t\tthis.toggleLayer(layer, true);\n\t\t\t\t\t\t\tfilter.s = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!!filter.h) {\n\t\t\t\t\t\t\tthis.toggleHidden(layer, false);\n\t\t\t\t\t\t\tfilter.h = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!!filter.c) {\n\t\t\t\t\t\t\tthis.toggleControls(layer, false);\n\t\t\t\t\t\t\tfilter.c = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\thtml.find('.dfarch-capture-form section>div>input').each((_, e: HTMLElement) => {\n\t\t\t\t\t\tconst element = <HTMLInputElement>e;\n\t\t\t\t\t\tif (element.id.endsWith('-show')) element.checked = true;\n\t\t\t\t\t\telse element.checked = false;\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\thtml.find('.dfarch-capture-form section>div>input').on('change', async (event: Event) => {\n\t\t\t\t\tconst element = <HTMLInputElement>event.currentTarget;\n\t\t\t\t\tif (element.id.endsWith('-show')) {\n\t\t\t\t\t\tthis._getDialogLayerFilter(element.value).s = element.checked;\n\t\t\t\t\t\tthis.toggleLayer(element.value, element.checked);\n\t\t\t\t\t}\n\t\t\t\t\telse if (element.id.endsWith('-hidden')) {\n\t\t\t\t\t\tthis._getDialogLayerFilter(element.value).h = element.checked;\n\t\t\t\t\t\tthis.toggleHidden(element.value, element.checked);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._getDialogLayerFilter(element.value).c = element.checked;\n\t\t\t\t\t\tthis.toggleControls(element.value, element.checked);\n\t\t\t\t\t}\n\t\t\t\t\tawait SETTINGS.set(this.PREF_LYRS, this._dialogLayerFilters);\n\t\t\t\t});\n\t\t\t\thtml.find('#bg-hide').on('change', (e: Event) => {\n\t\t\t\t\tconst hide = (<HTMLInputElement>e.currentTarget).checked;\n\t\t\t\t\tif (!!canvas.background.bg)\n\t\t\t\t\t\tcanvas.background.bg.visible = !hide;\n\t\t\t\t\tSETTINGS.set(this.PREF_BG_HIDE, hide);\n\t\t\t\t});\n\t\t\t\thtml.find('#bg-colo').on('change', (e: Event) => {\n\t\t\t\t\tconst colour = (<HTMLInputElement>e.currentTarget).value;\n\t\t\t\t\tcanvas.app.renderer.backgroundColor = parseInt(colour.slice(1), 16);\n\t\t\t\t\tSETTINGS.set(this.PREF_BG_COLO, colour);\n\t\t\t\t});\n\t\t\t\tconst alphaRange = html.find('#bg-alph');\n\t\t\t\tconst alphaOutput = html.find('#bg-alph-out')[0] as HTMLOutputElement;\n\t\t\t\talphaRange.on('change', (e: Event) => {\n\t\t\t\t\tconst element = <HTMLInputElement>e.currentTarget;\n\t\t\t\t\talphaOutput.value = `${element.value}%`;\n\t\t\t\t\tconst alpha = parseInt(element.value);\n\t\t\t\t\tif (isNaN(alpha)) return;\n\t\t\t\t\t(<any>canvas.app.renderer).backgroundAlpha = alpha / 100.0;\n\t\t\t\t\tSETTINGS.set(this.PREF_BG_ALPH, alpha);\n\t\t\t\t});\n\t\t\t\talphaRange.on('input', () => alphaRange.trigger('change'));\n\t\t\t\thtml.find('#bg-colo-reset').on('click', (e: Event) => {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\thtml.find('#bg-colo')\n\t\t\t\t\t\t.val(game.scenes.viewed.data.backgroundColor)\n\t\t\t\t\t\t.trigger('change');\n\t\t\t\t});\n\t\t\t\tObject.entries(this._dialogLayerFilters).forEach((layerFilter) => {\n\t\t\t\t\tvar [layer, filter] = layerFilter;\n\t\t\t\t\t// If the layer no longer exists, remove it from list and return\n\t\t\t\t\tif (ARCHITECT.getLayer(layer) === null) {\n\t\t\t\t\t\tdelete this._dialogLayerFilters[layer];\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\tthis.toggleLayer(layer, filter.s);\n\t\t\t\t\tif (!!filter.h) this.toggleHidden(layer, true);\n\t\t\t\t\tif (!!filter.c) this.toggleControls(layer, true);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\tdialog.render(true);\n\t}\n\n\tprivate static async loadOpenCV(): Promise<void> {\n\t\t// Resolve immediately if element exists\n\t\tif (this._openCVPromise == null) {\n\t\t\t// If the OpenCV library has not yet been loaded, lets load it now inside a promise\n\t\t\tthis._openCVPromise = new Promise<void>(res => {\n\t\t\t\tvar openCVScript = document.createElement('script') as HTMLScriptElement;\n\t\t\t\topenCVScript.id = 'opencv';\n\t\t\t\topenCVScript.async = true;\n\t\t\t\topenCVScript.onload = () => {\n\t\t\t\t\tif (cv.getBuildInformation) res();\n\t\t\t\t\t// WASM\n\t\t\t\t\telse cv['onRuntimeInitialized'] = () => res();\n\t\t\t\t};\n\t\t\t\topenCVScript.src = `/modules/${ARCHITECT.MOD_NAME}/libs/opencv.js`;\n\t\t\t\tdocument.body.append(openCVScript);\n\t\t\t});\n\t\t}\n\t\treturn this._openCVPromise;\n\t}\n\n\t/**\n\t * Begins the process of capturing the canvas.\n\t * @param throwOnError If true, an error is thrown if a Capture is already running; otherwise function will return null.\n\t * @returns The HiddenPlaceablesSnapshot\n\t * @throws If `beginCapture()` has been invoked and `endCapture()` has not been subsequently invoked yet.\n\t */\n\tstatic beginCapture(throwOnError = true): CaptureSession {\n\t\tif (CaptureGameScreen._captureInProgress)\n\t\t\tif (throwOnError) throw Error('Capture In Progress'); else return null;\n\t\tCaptureGameScreen._captureInProgress = true;\n\t\t// Reset the layer filters\n\t\tthis._layerFilters = {};\n\t\tfor (const layer of Object.keys(CONFIG.Canvas.layers)) {\n\t\t\tthis._layerFilters[layer] = { s: true };\n\t\t}\n\t\t// Collect Hidden Items\n\t\tconst hiddenItemsSnapshot: PlaceableObject[] = [];\n\t\tconst occludedItemsSnapshot: Tile[] = [];\n\t\tfor (let layerName of this.LayersWithHiddenPlaceables) {\n\t\t\tconst layer = ARCHITECT.getLayer<PlaceablesLayer<any>>(layerName);\n\t\t\tfor (let object of layer.objects.children as PlaceableObject[]) {\n\t\t\t\t// Disable the Border/Frame of the selectable objects during the render\n\t\t\t\tif ((<Tile>object).frame !== undefined) (<Tile>object).frame.visible = false\n\t\t\t\telse if ((<any | Token>object).border !== undefined) (<any | Token>object).border.visible = false\n\t\t\t\tif (object instanceof Tile && object.data.occlusion.mode !== CONST.TILE_OCCLUSION_MODES.NONE) {\n\t\t\t\t\tobject.data.flags.df_arch_occl = object.data.occlusion.mode;\n\t\t\t\t\tobject.data.occlusion.mode = CONST.TILE_OCCLUSION_MODES.NONE;\n\t\t\t\t\toccludedItemsSnapshot.push(object);\n\t\t\t\t}\n\t\t\t\t// If the object is not hidden, ignore it\n\t\t\t\tif ((<any>object.data).hidden === undefined || !(<any>object.data).hidden) continue;\n\t\t\t\t(<any>object.data).hidden = false;\n\t\t\t\tobject.data.flags.df_arch_hidden = true;\n\t\t\t\thiddenItemsSnapshot.push(object);\n\t\t\t\tobject.refresh();\n\t\t\t\tobject.visible = false;\n\t\t\t}\n\t\t}\n\t\tconst foregroundPreviouslyActive = canvas.foreground._active;\n\t\tCaptureGameScreen._currentSession = { hiddenItemsSnapshot, occludedItemsSnapshot, foregroundPreviouslyActive, id: new Date().getTime() };\n\t\treturn CaptureGameScreen._currentSession;\n\t}\n\n\t/**\n\t * Ends a capture session. Resetting all changes to layers and objects.\n\t * @param session The {@link CaptureSession} object returned by {@link beginCapture}\n\t * @returns \n\t */\n\tstatic async endCapture(session: CaptureSession): Promise<boolean> {\n\t\tif (!CaptureGameScreen._captureInProgress) return false;\n\t\tif (session === null || session.id !== CaptureGameScreen._currentSession?.id) return false;\n\t\tCaptureGameScreen._captureInProgress = false;\n\t\t// Reset the layer filters\n\t\tthis._layerFilters = {};\n\t\t// Cleanup Background\n\t\tif (!!canvas.background.bg)\n\t\t\tcanvas.background.bg.visible = true;\n\t\tcanvas.app.renderer.backgroundColor = parseInt(game.scenes.viewed.data.backgroundColor.slice(1), 16);\n\t\t(<any>canvas.app.renderer).backgroundAlpha = 1.0;\n\n\t\t// Correct Hidden Items\n\t\tfor (let object of session.hiddenItemsSnapshot as any[]) {\n\t\t\tobject.data.hidden = true;\n\t\t\tobject.visible = true;\n\t\t\tdelete object.data.flags.df_arch_hidden;\n\t\t}\n\t\t// Correct Occluded Items\n\t\tfor (let object of session.occludedItemsSnapshot) {\n\t\t\tobject.data.occlusion.mode = <any>object.data.flags.df_arch_occl;\n\t\t\tdelete object.data.flags.df_arch_occl;\n\t\t}\n\n\t\t// Correct Layers\n\t\tfor (let layerName of Object.keys(CONFIG.Canvas.layers)) {\n\t\t\tconst layer = ARCHITECT.getLayer<PlaceablesLayer<any>>(layerName);\n\t\t\tif (this.LayersWithHiddenPlaceables.includes(layerName)) {\n\t\t\t\tfor (let object of layer.objects.children as PlaceableObject[]) {\n\t\t\t\t\t// Enable the Border/Frame of the selectable objects after the render\n\t\t\t\t\tif ((<Tile>object).frame !== undefined) (<Tile>object).frame.visible = true;\n\t\t\t\t\telse if ((<any | Token>object).border !== undefined) (<any | Token>object).border.visible = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlayer.renderable = true;\n\t\t\tlayer.deactivate();\n\t\t\tif (layer.name === 'NotesLayer') {\n\t\t\t\tconst isToggled = <boolean>game.settings.get(\"core\", (<any>layer.constructor).TOGGLE_SETTING);\n\t\t\t\tif ((<PlaceablesLayer<any>>layer).objects) {\n\t\t\t\t\t(<PlaceablesLayer<any>>layer).objects.visible = isToggled;\n\t\t\t\t\t(<PlaceablesLayer<any>>layer).placeables.forEach(p => p.controlIcon.visible = isToggled);\n\t\t\t\t}\n\t\t\t\tlayer.interactiveChildren = isToggled;\n\t\t\t}\n\t\t}\n\t\t// Correct Active Layer\n\t\tconst controlName = ui.controls.activeControl;\n\t\tconst control = ui.controls.controls.find((c: any) => c.name === controlName);\n\t\tif (control && control.layer) (<any>canvas)[control.layer].activate();\n\t\tawait waitForDOMUpdate();\n\t\tif (session.foregroundPreviouslyActive) canvas.foreground.activate();\n\t\treturn true;\n\t}\n\n\t/**\n\t * Toggle the visibility of the given layer.\n\t * @param layerName String name of the layer to shown/hidden.\n\t * @param show true to show; false to hide.\n\t */\n\tstatic toggleLayer(layerName: string, show: boolean) {\n\t\tif (!this._captureInProgress) {\n\t\t\tconsole.error(\"Layer toggling requires a Capture Session to be started. Please call `beginCapture()` first.\");\n\t\t\treturn;\n\t\t}\n\t\tvar layer: CanvasLayer | undefined = ARCHITECT.getLayer<PlaceablesLayer<any>>(layerName);\n\t\tif (!layer) {\n\t\t\tconsole.error(`CaptureGameScreen::toggleLayer() - There is no registered layer for the name '${layerName}'. Attempting to find layer in layer list manually.`);\n\t\t\treturn;\n\t\t}\n\t\tlayer.renderable = show;\n\t\tif (layerName in this._layerFilters)\n\t\t\tthis._layerFilters[layerName].s = show;\n\t\telse\n\t\t\tthis._layerFilters[layerName] = { s: show };\n\t}\n\t/**\n\t * Toggle the visibility of hidden entities on the given layer.\n\t * @param layerName String name of the layer to show/hide entities on.\n\t * @param show true to show; false to hide.\n\t */\n\tstatic toggleHidden(layerName: string, show: boolean) {\n\t\tif (!this._captureInProgress) {\n\t\t\tconsole.error(\"Hidden Placeables toggling requires a Capture Session to be started. Please call `beginCapture()` first.\");\n\t\t\treturn;\n\t\t}\n\t\tconst layer = ARCHITECT.getLayer<PlaceablesLayer<any>>(layerName);\n\t\t(layer.objects.children as PlaceableObject[]).forEach(x => {\n\t\t\tif (!x.data.flags.df_arch_hidden) return;\n\t\t\tx.visible = show;\n\t\t});\n\t\tif (layerName in this._layerFilters)\n\t\t\tthis._layerFilters[layerName].h = show;\n\t\telse\n\t\t\tthis._layerFilters[layerName] = { s: true, h: show };\n\t}\n\t/**\n\t * Toggle the visibility of entity controls on the given layer.\n\t * @param layerName String name of the layer to show/hide entity controls on.\n\t * @param show true to show; false to hide.\n\t */\n\tstatic toggleControls(layerName: string, show: boolean) {\n\t\tif (!this._captureInProgress) {\n\t\t\tconsole.error(\"Controls toggling requires a Capture Session to be started. Please call `beginCapture()` first.\");\n\t\t\treturn;\n\t\t}\n\t\tconst layer = ARCHITECT.getLayer<PlaceablesLayer<any>>(layerName);\n\t\tthis._getDialogLayerFilter(layerName).c = show;\n\t\t// The Template Layer has specialized activation to always show template frame.\n\t\tif (layer.name === 'TemplateLayer') {\n\t\t\tif (show) {\n\t\t\t\tif (layer.objects) {\n\t\t\t\t\tlayer.placeables.forEach(p => {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tp.hud.children.forEach((x: PIXI.Graphics) => x.visible = true);\n\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\tconsole.error(err);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (layer.objects) {\n\t\t\t\t\tlayer.objects.visible = true;\n\t\t\t\t\tlayer.placeables.forEach(p => {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tp.hud.children.forEach((x: PIXI.Graphics) => x.visible = false);\n\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\tconsole.error(err);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// The Notes Layer has specialized activation when the note pins are toggled on.\n\t\telse if (layer.name === 'NotesLayer') {\n\t\t\tif (show) {\n\t\t\t\tif (layer.objects) {\n\t\t\t\t\tlayer._active = true;\n\t\t\t\t\tlayer.objects.visible = true;\n\t\t\t\t\tlayer.placeables.forEach(p => p.controlIcon.visible = true);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (layer.objects) {\n\t\t\t\t\tlayer._active = false;\n\t\t\t\t\tlayer.objects.visible = false;\n\t\t\t\t\tlayer.placeables.forEach(p => p.controlIcon.visible = false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// All the other Placeable layers act with the same default behaviour\n\t\telse {\n\t\t\tif (show) {\n\t\t\t\tlayer._active = true;\n\t\t\t\tlayer.objects.visible = true;\n\t\t\t\tlayer.placeables.forEach(l => l.refresh());\n\t\t\t} else {\n\t\t\t\tlayer._active = false;\n\t\t\t\tlayer.objects.visible = false;\n\t\t\t\tlayer.releaseAll();\n\t\t\t\tlayer.placeables.forEach(l => l.refresh());\n\t\t\t\tif (layer.preview) layer.preview.removeChildren();\n\t\t\t}\n\t\t}\n\t\tif (layerName in this._layerFilters)\n\t\t\tthis._layerFilters[layerName].c = show;\n\t\telse\n\t\t\tthis._layerFilters[layerName] = { s: true, c: show };\n\t}\n\n\tstatic async captureView({ format, quality }: { format: string, quality: number }): Promise<ImageData> {\n\t\tcanvas = <Canvas>canvas;\n\t\treturn await CaptureGameScreen.captureCanvas({\n\t\t\tformat, quality, view: {\n\t\t\t\tx: canvas.stage.pivot.x,\n\t\t\t\ty: canvas.stage.pivot.y,\n\t\t\t\tw: canvas.app.renderer.width,\n\t\t\t\th: canvas.app.renderer.height,\n\t\t\t\ts: canvas.stage.scale.x\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Renders the Canvas to a single image.\n\t * @param format MIME type of final image. Supports `image/png`, `image/jpeg`, (Chromium only) `image/webp`.\n\t * @param quality The percent quality from 0 to 1 for Jpeg and WebP images.\n\t * @param keepPadding (optional) Includes the canvas padding if no {@link view} is given.\n\t * @param view The region of the canvas and scale to render.\n\t * @returns {@link ImageData} object containing the rendered image\n\t */\n\tstatic async captureCanvas({ format, quality, keepPadding, view }\n\t\t: { format: string, quality: number, keepPadding?: boolean, view?: { x: number, y: number, w: number, h: number, s: number } }): Promise<ImageData> {\n\t\tconst targetImage = new Image();\n\t\tconst targetCanvas = document.createElement('canvas') as HTMLCanvasElement;\n\t\tconst targetContext = targetCanvas.getContext('2d');\n\t\ttargetContext.imageSmoothingEnabled = false;\n\t\tconst GetImageMat = (imageData: string) => new Promise<cv.Mat>((resolve, _) => {\n\t\t\ttargetImage.onload = () => {\n\t\t\t\ttargetCanvas.width = targetImage.width;\n\t\t\t\ttargetCanvas.height = targetImage.height;\n\t\t\t\ttargetContext.drawImage(targetImage, 0, 0);\n\t\t\t\tresolve(cv.imread(targetCanvas));\n\t\t\t};\n\t\t\ttargetImage.src = imageData;\n\t\t});\n\t\tconst GetImageData = (image: cv.Mat) => {\n\t\t\tcv.imshow(targetCanvas, image);\n\t\t\treturn targetCanvas.toDataURL(format, quality);\n\t\t}\n\n\t\treturn new Promise(async (resolveCapture, rejectCapture) => {\n\t\t\t// Create an overlay element to be temporarily displayed\n\t\t\tconst overlayElement = $(`<div id=\"dfarch-temp-overlay\"><h1>${'DF_ARCHITECT.CaptureGameScreen.ScreenCapture.Rendering'.localize()}...</h1><div class=\"dfarch-dual-ring\"></div></div>`);\n\t\t\toverlayElement.appendTo(document.body);\n\n\t\t\t// Make sure OpenCV has fully loaded. If it is loaded, this will resolve immediately\n\t\t\tawait CaptureGameScreen.loadOpenCV();\n\n\t\t\t// Activate the Foreground layer so it draws properly\n\t\t\tif (!canvas.foreground._active && CaptureGameScreen._layerFilters['foreground'].s) {\n\t\t\t\tcanvas.foreground.activate();\n\t\t\t\t// Iterate over filters to insure any that needs controls show are restored\n\t\t\t\tfor (const layer of Object.keys(CaptureGameScreen._layerFilters)) {\n\t\t\t\t\tif (!CaptureGameScreen._layerFilters[layer].s || !CaptureGameScreen._layerFilters[layer].c) continue;\n\t\t\t\t\tCaptureGameScreen.toggleControls(layer, true);\n\t\t\t\t}\n\t\t\t\tconst resolve = resolveCapture;\n\t\t\t\tconst reject = rejectCapture;\n\t\t\t\tresolveCapture = v => { canvas.foreground.deactivate(); resolve(v) };\n\t\t\t\trejectCapture = e => { canvas.foreground.deactivate(); reject(e) };\n\t\t\t}\n\t\t\t// Must wait for DOM to update or image may be taken before some layers finish redrawing\n\t\t\tawait waitForDOMUpdate(100);\n\n\t\t\t// Save the previous orientation of the canvas stage\n\t\t\tconst origX = canvas.stage.pivot.x;\n\t\t\tconst origY = canvas.stage.pivot.y;\n\t\t\tconst origS = canvas.stage.scale.x;\n\t\t\tconst origW = canvas.app.renderer.width;\n\t\t\tconst origH = canvas.app.renderer.height;\n\t\t\tconst origR = canvas.app.renderer.resolution;\n\t\t\tcanvas.app.renderer.resolution = 1;\n\t\t\t// Calculate dimension adjustments for offseting coordinates relative to the body\n\t\t\tconst body = $(document.body);\n\n\t\t\tvar padW = canvas.scene.data.padding * canvas.scene.data.width;\n\t\t\tvar padH = canvas.scene.data.padding * canvas.scene.data.height;\n\t\t\t// If we are slightly off, round to nearest grid size.\n\t\t\tif ((padW % canvas.grid.size) !== 0)\n\t\t\t\tpadW = (Math.trunc(padW / canvas.grid.size) + 1) * canvas.grid.size;\n\t\t\tif ((padH % canvas.grid.size) !== 0)\n\t\t\t\tpadH = (Math.trunc(padH / canvas.grid.size) + 1) * canvas.grid.size;\n\n\t\t\t// Initialize the capture view if none was supplied\n\t\t\tif (view === undefined) {\n\t\t\t\tview = {\n\t\t\t\t\tx: 0, y: 0,\n\t\t\t\t\tw: (keepPadding ? padW * 2 : 0) + canvas.scene.data.width,\n\t\t\t\t\th: (keepPadding ? padH * 2 : 0) + canvas.scene.data.height,\n\t\t\t\t\ts: 1\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Adjust provided capture view for padding\n\t\t\t\tview.x -= padW;\n\t\t\t\tview.y -= padH;\n\t\t\t}\n\t\t\t// Calculate the width and height offsets needed for coordinate correction\n\t\t\tconst widthAdjust = (body.width() - view.w) / 2;\n\t\t\tconst heightAdjust = (body.height() - view.h) / 2;\n\n\t\t\t// Calculate the splits\n\t\t\tconst split = [\n\t\t\t\tMath.ceil(view.w / CaptureGameScreen.SPLIT_DIM),\n\t\t\t\tMath.ceil(view.h / CaptureGameScreen.SPLIT_DIM)\n\t\t\t];\n\n\t\t\t// Calculate the width and height chunk data\n\t\t\tconst widthChunk = Math.ceil(view.w / split[0]);\n\t\t\tconst widthExtra = view.w - (widthChunk * (split[0] - 1));\n\t\t\tconst heightChunk = Math.ceil(view.h / split[1]);\n\t\t\tconst heightExtra = view.h - (heightChunk * (split[1] - 1));\n\n\t\t\t// Display warning if splitting is required\n\t\t\tif ((view.w * view.h) > CaptureGameScreen.WARNING_SIZE) {\n\t\t\t\tconst confirmed = await Dialog.confirm({\n\t\t\t\t\ttitle: 'DF_ARCHITECT.CaptureGameScreen.ScreenCapture.WarningConfirmTitle'.localize(),\n\t\t\t\t\tcontent: 'DF_ARCHITECT.CaptureGameScreen.ScreenCapture.WarningConfirmContent'.localize(),\n\t\t\t\t\tdefaultYes: true,\n\t\t\t\t});\n\t\t\t\tif (!confirmed) {\n\t\t\t\t\toverlayElement.remove();\n\t\t\t\t\trejectCapture(\"User Cancelled\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Game Board Canvas Element\n\t\t\tconst boardCanvasElement = $('canvas#board');\n\t\t\t// Array of images in the form of Base64 encoded strings\n\t\t\tconst images: ImageData[] = [];\n\t\t\ttry {\n\t\t\t\tconst widthSplitMultiplier = view.s != 1 ? Math.floor(split[0] / 2) : split[0] / 2;\n\t\t\t\tconst heightSplitMultiplier = view.s != 1 ? Math.floor(split[1] / 2) : split[1] / 2;\n\t\t\t\t// Iterate over each ROW of Sectors\n\t\t\t\tfor (let cy = 0; cy < split[1]; cy++) {\n\t\t\t\t\tconst indexH = cy;\n\t\t\t\t\t// Iterate over each Sector in the current ROW\n\t\t\t\t\tfor (let cx = 0; cx < split[0]; cx++) {\n\t\t\t\t\t\tconst indexW = cx;\n\t\t\t\t\t\tARCHITECT.reportProgress('DF_ARCHITECT.CaptureGameScreen.ScreenCapture.Rendering'.localize(), indexH * split[0] + indexW, split[0] * split[1]);\n\t\t\t\t\t\tcanvas = <Canvas>canvas;\n\t\t\t\t\t\tvar width = 0;\n\t\t\t\t\t\tvar height = 0;\n\t\t\t\t\t\t// Calculate the base XY coordinates\n\t\t\t\t\t\tvar x = view.x + widthAdjust + (keepPadding ? 0 : padW) + (widthChunk * (indexW + widthSplitMultiplier));\n\t\t\t\t\t\tvar y = view.y + heightAdjust + (keepPadding ? 0 : padH) + (heightChunk * (indexH + heightSplitMultiplier));\n\t\t\t\t\t\t// Calculate the Width and X Offset for the current Sector\n\t\t\t\t\t\tif (split[0] > 1 && indexW == split[0] - 1) {\n\t\t\t\t\t\t\twidth = widthExtra;\n\t\t\t\t\t\t\tx -= (widthChunk - widthExtra) / 2;\n\t\t\t\t\t\t} else width = widthChunk;\n\t\t\t\t\t\t// Calculate the Height and Y Offset for the current Sector\n\t\t\t\t\t\tif (split[1] > 1 && indexH == split[1] - 1) {\n\t\t\t\t\t\t\theight = heightExtra;\n\t\t\t\t\t\t\ty -= (heightChunk - heightExtra) / 2;\n\t\t\t\t\t\t} else height = heightChunk;\n\t\t\t\t\t\t// Update the orientation of the canvas stage\n\t\t\t\t\t\tcanvas.app.renderer.resize(width, height);\n\t\t\t\t\t\tcanvas.stage.scale.set(view.s);\n\t\t\t\t\t\tcanvas.stage.pivot.set(x, y);\n\t\t\t\t\t\t// Update the canvas element dimensions\n\t\t\t\t\t\tboardCanvasElement.css('width', width + 'px');\n\t\t\t\t\t\tboardCanvasElement.css('height', height + 'px');\n\t\t\t\t\t\t// Wait for DOM to Update\n\t\t\t\t\t\tawait waitForDOMUpdate();\n\t\t\t\t\t\t// Render a single image for the given Sector\n\t\t\t\t\t\timages.push({\n\t\t\t\t\t\t\tdata: canvas.app.renderer.context.renderer.extract.base64(null, 'image/png', 1),\n\t\t\t\t\t\t\twidth, height\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (error) {\n\t\t\t\tARCHITECT.hideProgress();\n\t\t\t\trejectCapture(error);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tARCHITECT.reportProgress('DF_ARCHITECT.CaptureGameScreen.ScreenCapture.Rendering'.localize(), split[0] * split[1], split[0] * split[1], true);\n\t\t\t// Reset PIXI resolution (pixel scaling) **BEFORE** resetting size/scale/pivot\n\t\t\tcanvas.app.renderer.resolution = origR;\n\t\t\t// Reset the canvas dimensions\n\t\t\tboardCanvasElement.css('width', origW + 'px');\n\t\t\tboardCanvasElement.css('height', origH + 'px');\n\t\t\t// Reset the orientation of the canvas stage\n\t\t\tcanvas.app.renderer.resize(origW, origH);\n\t\t\tcanvas.stage.scale.set(origS);\n\t\t\tcanvas.stage.pivot.set(origX, origY);\n\t\t\toverlayElement.find('h1').text('DF_ARCHITECT.CaptureGameScreen.ScreenCapture.Stitching'.localize() + '...');\n\t\t\t// Remove the overlay after the canvas has had a chance to re-render\n\t\t\tafterDOMUpdate(() => overlayElement.remove());\n\n\t\t\t// If there is only 1 image exists, so return it immediately\n\t\t\tif (images.length == 1) {\n\t\t\t\t// If the requested format is not PNG, convert it\n\t\t\t\tif (format != 'image/png') {\n\t\t\t\t\tconst image = await GetImageMat(images[0].data);\n\t\t\t\t\tresolveCapture({ data: GetImageData(image), width: image.cols, height: image.rows });\n\t\t\t\t} else\n\t\t\t\t\tresolveCapture(images[0]);\n\t\t\t\tARCHITECT.hideProgress();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Begin Stitching the individual Rows\n\t\t\tconst finalMats: cv.Mat[] = [];\n\t\t\tvar finalVec: cv.MatVector;\n\t\t\ttry {\n\t\t\t\tfinalVec = new cv.MatVector();\n\t\t\t\t// Loop over each ROW\n\t\t\t\tfor (let cy = 0; cy < split[1]; cy++) {\n\t\t\t\t\tARCHITECT.reportProgress('DF_ARCHITECT.CaptureGameScreen.ScreenCapture.Stitching'.localize(), cy, split[1]);\n\t\t\t\t\tawait waitForDOMUpdate();\n\t\t\t\t\t// If there is only 1 Sector per ROW\n\t\t\t\t\tif (split[0] === 1) {\n\t\t\t\t\t\tfinalMats.push(await GetImageMat(images[cy].data));\n\t\t\t\t\t\tfinalVec.push_back(finalMats[cy]);\n\t\t\t\t\t\tconsole.log(finalMats[cy].size());\n\t\t\t\t\t\t// Continue to next image\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tconst rowVector = new cv.MatVector();\n\t\t\t\t\tconst rowMats: cv.Mat[] = [];\n\t\t\t\t\tvar renderTarget: cv.Mat;\n\t\t\t\t\t// Generate the image for the whole ROW\n\t\t\t\t\t// We do this in an await/timeout to allow for updating UI Progress Bar\n\t\t\t\t\ttry {\n\t\t\t\t\t\t// Convert image datas to Mats\n\t\t\t\t\t\tfor (let cx = 0; cx < split[0]; cx++) {\n\t\t\t\t\t\t\t// Extract the Mat for the current Image\n\t\t\t\t\t\t\trenderTarget = await GetImageMat(images[(cy * split[0]) + cx].data);\n\t\t\t\t\t\t\t// Append Mat onto rowMat array for cleanup\n\t\t\t\t\t\t\trowMats.push(renderTarget);\n\t\t\t\t\t\t\t// Append Mat to MetVector for stitching\n\t\t\t\t\t\t\trowVector.push_back(renderTarget);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Generate a render target for stitching result\n\t\t\t\t\t\trenderTarget = new cv.Mat();\n\t\t\t\t\t\t// Stitch the row's Mats together and render to Render Target\n\t\t\t\t\t\tcv.hconcat(rowVector, renderTarget);\n\t\t\t\t\t\tconsole.log(renderTarget.size());\n\t\t\t\t\t\t// Add the new Mat to the Array and Final Vector\n\t\t\t\t\t\tfinalMats.push(renderTarget);\n\t\t\t\t\t\tfinalVec.push_back(renderTarget);\n\t\t\t\t\t}\n\t\t\t\t\tfinally {\n\t\t\t\t\t\t// Delete the Row's Mats and Vector as the final step\n\t\t\t\t\t\tDELETE_RESOURCES([rowVector, rowMats]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error('Failed to complete image stitching!', error);\n\t\t\t\tDELETE_RESOURCES([finalVec, finalMats]);\n\t\t\t\tui.notifications.error(\"DF_ARCHITECT.CaptureGameScreen.ScreenCapture.ErrorStitchingFailure\".localize(), { permanent: true });\n\t\t\t\tARCHITECT.hideProgress();\n\t\t\t\trejectCapture(error);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tARCHITECT.reportProgress('DF_ARCHITECT.CaptureGameScreen.ScreenCapture.Stitching'.localize(), split[1], split[1]);\n\t\t\t// Jump on a timeout to let the UI progress update to get through.\n\t\t\tawait waitForDOMUpdate();\n\t\t\tvar finalImage: cv.Mat;\n\t\t\ttry {\n\t\t\t\tif (finalMats.length == 1) {\n\t\t\t\t\tresolveCapture({ data: GetImageData(finalMats[0]), width: finalMats[0].cols, height: finalMats[0].rows });\n\t\t\t\t\tDELETE_RESOURCES([finalVec, finalMats]);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tfinalImage = new cv.Mat();\n\t\t\t\t// Concatenate the row images into a single final image\n\t\t\t\tlet error = cv.vconcat(finalVec, finalImage);\n\t\t\t\tconsole.log(error);\n\t\t\t\tconsole.log((<any>finalImage).size());\n\t\t\t\t// Delete the final vector and mats\n\t\t\t\tDELETE_RESOURCES([finalVec, finalMats]);\n\t\t\t\t// Retrieve the rendered image data and return it.\n\t\t\t\tresolveCapture({ data: GetImageData(finalImage), width: finalImage.cols, height: finalImage.rows });\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error('Failed to complete image stitching!', error);\n\t\t\t\tui.notifications.error(\"DF_ARCHITECT.CaptureGameScreen.ScreenCapture.ErrorStitchingFailure\".localize(), { permanent: true });\n\t\t\t\trejectCapture(error);\n\t\t\t}\n\t\t\tfinally {\n\t\t\t\tARCHITECT.hideProgress();\n\t\t\t\tDELETE_RESOURCES([finalVec, finalMats, finalImage]);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Prompt the user to save the image data to either their computer or the server.\n\t * @param image {@link ImageData} object to be saved.\n\t * @param dialogTitle (optional) Title to display in the Dialog Titlebar.\n\t * @param defaultFileName (optional) Default file name to be used as a placeholder. Default: 'capture'\n\t * @param folder (optional) Folder path to save the image to (must already exist).\n\t * @param folderSource (optional) Storage source for saving the file (ie. 'data', 'public', or 's3')\n\t * @param allowDownload (optional) If true, allow the user to download the image to their computer; otherwise the option will be hidden.\n\t * @returns String containing the server file path to the image is uploaded; otherwise null if the user saved locally, or undefined if the user cancelled the process.\n\t */\n\tstatic saveImageData({ image, dialogTitle, defaultFileName, folder, folderSource, allowDownload }\n\t\t: { image: ImageData, dialogTitle?: string, defaultFileName?: string, folder?: string, folderSource?: FilePicker.SourceType, allowDownload?: boolean })\n\t\t: Promise<string> {\n\t\treturn new Promise<string>(async (res) => {\n\t\t\tvar resolved = false;\n\t\t\tconst resolve = (value: any) => {\n\t\t\t\tif (resolved) return;\n\t\t\t\tresolved = true;\n\t\t\t\tres(value);\n\t\t\t}\n\t\t\tvar ignoreClose = false;\n\n\t\t\tconst linkDate = new Date().toISOString().replace(/(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2}).+/, '$3$4$5$6');\n\n\t\t\tconst buttons: Record<string, Dialog.Button<unknown>> = {\n\t\t\t\tcancel: {\n\t\t\t\t\ticon: '<i class=\"fas fa-times\"></i>',\n\t\t\t\t\tlabel: 'DF_ARCHITECT.General.Cancel'.localize(),\n\t\t\t\t\tcallback: () => { dialog.close(); }\n\t\t\t\t},\n\t\t\t\tlocal: {\n\t\t\t\t\ticon: '<i class=\"fas fa-download\"></i>',\n\t\t\t\t\tlabel: 'DF_ARCHITECT.CaptureGameScreen.SaveImageDialog.SaveLocal'.localize(),\n\t\t\t\t\tcallback: (html) => {\n\t\t\t\t\t\thtml = html instanceof HTMLElement ? $(html) : html;\n\t\t\t\t\t\tconst fileName = html.find('#filename')[0] as HTMLInputElement;\n\t\t\t\t\t\tconst link = document.createElement('a') as HTMLAnchorElement;\n\t\t\t\t\t\tlink.href = image.data;\n\t\t\t\t\t\tlink.download = fileName.value || fileName.placeholder;\n\t\t\t\t\t\tlink.click();\n\t\t\t\t\t\tresolve(null);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tserver: {\n\t\t\t\t\ticon: '<i class=\"fas fa-upload\"></i>',\n\t\t\t\t\tlabel: 'DF_ARCHITECT.CaptureGameScreen.SaveImageDialog.SaveServer'.localize(),\n\t\t\t\t\tcallback: async (html) => {\n\t\t\t\t\t\tignoreClose = true;\n\t\t\t\t\t\thtml = html instanceof HTMLElement ? $(html) : html;\n\t\t\t\t\t\tconst fileNameElement = html.find('#filename')[0] as HTMLInputElement;\n\t\t\t\t\t\tconst fileName = fileNameElement.value || fileNameElement.placeholder;\n\t\t\t\t\t\tconst parts = image.data.match(/^data:(.+);base64,(.+)/);\n\t\t\t\t\t\tconst data = ARCHITECT.Base64ToBlob(parts[2], parts[1]);\n\t\t\t\t\t\tconst file = new File([data], fileName, {});\n\n\t\t\t\t\t\tif (!folder) {\n\t\t\t\t\t\t\tconst result = await new Promise<{ path: string, source: FilePicker.SourceType }>((res) => {\n\t\t\t\t\t\t\t\tconst picker = new FilePicker(<any>{\n\t\t\t\t\t\t\t\t\ttitle: dialogTitle,\n\t\t\t\t\t\t\t\t\ttype: 'folder',\n\t\t\t\t\t\t\t\t\tfolderSource: folderSource || 'data',\n\t\t\t\t\t\t\t\t\tcallback: async (path: string) => {\n\t\t\t\t\t\t\t\t\t\tresolved = true;\n\t\t\t\t\t\t\t\t\t\tfolderSource = picker.activeSource;\n\t\t\t\t\t\t\t\t\t\tfolder = path\n\t\t\t\t\t\t\t\t\t\tres({ path, source: picker.activeSource });\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tconst tmpClose = picker.close;\n\t\t\t\t\t\t\t\tpicker.close = (o: Application.CloseOptions) => {\n\t\t\t\t\t\t\t\t\tres({ path: null, source: null });\n\t\t\t\t\t\t\t\t\treturn tmpClose.bind(picker).call(o);\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tpicker.browse('');\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tif (!result.path) {\n\t\t\t\t\t\t\t\tresolve(null);\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tfolder = result.path;\n\t\t\t\t\t\t\tfolderSource = result.source;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tawait FilePicker.upload(<FilePicker.SourceType>folderSource, folder, file);\n\t\t\t\t\t\tresolve(folder + '/' + fileName);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t};\n\t\t\tif (!allowDownload === false)\n\t\t\t\tdelete buttons.local;\n\n\t\t\tconst title = dialogTitle || 'DF_ARCHITECT.CaptureGameScreen.SaveImageDialog.Title'.localize();\n\t\t\tconst format = image.data.slice(0, 20).match(/data:image\\/(.+);/)[1];\n\t\t\tconst content = await renderTemplate(`modules/${ARCHITECT.MOD_NAME}/templates/tile-flatten-save.hbs`, {\n\t\t\t\tformat,\n\t\t\t\tplaceholder: (defaultFileName || 'DF_ARCHITECT.CaptureGameScreen.SaveImageDialog.DefaultFileName'.localize()) + '-' + linkDate\n\t\t\t});\n\t\t\tconst dialog: Dialog = new Dialog({\n\t\t\t\ttitle,\n\t\t\t\tcontent,\n\t\t\t\tclose: () => { if (!ignoreClose) resolve(undefined) },\n\t\t\t\tbuttons, default: 'server',\n\t\t\t\trender: (html: HTMLElement | JQuery<HTMLElement>) => {\n\t\t\t\t\tconst img = $(html).find('#img-preview')[0] as HTMLImageElement;\n\t\t\t\t\timg.onload = () => {\n\t\t\t\t\t\tdialog.setPosition({ height: \"auto\" });\n\t\t\t\t\t\tconst tarT = (window.innerHeight - dialog.element[0].offsetHeight) / 2;\n\t\t\t\t\t\tconst maxT = Math.max(window.innerHeight - dialog.element[0].offsetHeight, 0);\n\t\t\t\t\t\tdialog.setPosition({ top: Math.clamped(tarT, 0, maxT) });\n\t\t\t\t\t}\n\t\t\t\t\timg.src = image.data;\n\t\t\t\t}\n\t\t\t}, { width: 500 });\n\t\t\tdialog.render(true);\n\t\t});\n\t}\n}\n\n(<any>window).CanvasCapture = {\n\tLayersWithInvisiblePlaceables: CaptureGameScreen.LayersWithInvisiblePlaceables,\n\tLayersWithHiddenPlaceables: CaptureGameScreen.LayersWithHiddenPlaceables,\n\tbeginCapture: CaptureGameScreen.beginCapture.bind(CaptureGameScreen),\n\tendCapture: CaptureGameScreen.endCapture.bind(CaptureGameScreen),\n\trender: CaptureGameScreen.captureCanvas.bind(CaptureGameScreen),\n\ttoggleLayer: CaptureGameScreen.toggleLayer.bind(CaptureGameScreen),\n\ttoggleHidden: CaptureGameScreen.toggleHidden.bind(CaptureGameScreen),\n\ttoggleControls: CaptureGameScreen.toggleControls.bind(CaptureGameScreen),\n\tsaveImageData: CaptureGameScreen.saveImageData.bind(CaptureGameScreen)\n};","export default async function(this: Tile) {\n\tconst aw = Math.abs(this.data.width);\n\tconst ah = Math.abs(this.data.height);\n\tconst r = Math.toRadians(this.data.rotation);\n\t// Update tile appearance\n\tthis.position.set(this.data.x, this.data.y);\n\tif ( this.tile ) {\n\t\t// Tile position\n\t\tthis.tile.scale.x = this.data.width / this.texture.width;\n\t\tthis.tile.scale.y = this.data.height / this.texture.height;\n\t\tthis.tile.position.set(aw/2, ah/2);\n\t\tthis.tile.rotation = r;\n\t\t// Tile appearance\n\t\tthis.tile.alpha = 1;//this.data.hidden ? Math.min(0.5, this.data.alpha) : this.data.alpha;\n\t\t// if ( this.occlusionFilter ) this.occlusionFilter.uniforms.alpha = this.data.alpha;\n\t\tthis.tile.tint = this.data.tint ? foundry.utils.colorStringToHex(this.data.tint) : 0xFFFFFF;\n\t}\n\t// Temporary tile background\n\tif ( this.bg ) this.bg.clear().beginFill(0xFFFFFF, 0.5).drawRect(0, 0, aw, ah).endFill();\n\t// Define bounds and update the border frame\n\tlet bounds = ( aw === ah ) ?\n\t\tnew NormalizedRectangle(0, 0, aw, ah) : // Square tiles\n\t\tNormalizedRectangle.fromRotation(0, 0, aw, ah, r); // Non-square tiles\n\tthis.hitArea = this._controlled ? bounds.clone().pad(20) : bounds;\n\tthis._refreshBorder(bounds);\n\tthis._refreshHandle(bounds);\n\treturn this;\n}","export default async function (this: Drawing) {\n\t// @ts-ignore\n\tif (this._destroyed || this.shape._destroyed) return;\n\tconst isTextPreview = (this.data.type === CONST.DRAWING_TYPES.TEXT) && this._controlled;\n\tthis.shape.clear();\n\n\t// Outer Stroke\n\tif (this.data.strokeWidth || isTextPreview) {\n\t\tlet sc = foundry.utils.colorStringToHex(this.data.strokeColor || \"#FFFFFF\");\n\t\tconst sw = isTextPreview ? 8 : this.data.strokeWidth ?? 8;\n\t\tthis.shape.lineStyle(sw, sc, this.data.strokeAlpha ?? 1);\n\t}\n\n\t// Fill Color or Texture\n\tif (this.data.fillType || isTextPreview) {\n\t\tconst fc = foundry.utils.colorStringToHex(this.data.fillColor || \"#FFFFFF\");\n\t\t// @ts-ignore\n\t\tif ((this.data.fillType === CONST.DRAWING_FILL_TYPES.PATTERN) && this.texture) {\n\t\t\tthis.shape.beginTextureFill({\n\t\t\t\t// @ts-ignore\n\t\t\t\ttexture: this.texture,\n\t\t\t\tcolor: fc || 0xFFFFFF,\n\t\t\t\talpha: fc ? this.data.fillAlpha : 1\n\t\t\t});\n\t\t} else {\n\t\t\tconst fa = isTextPreview ? 0.25 : this.data.fillAlpha;\n\t\t\tthis.shape.beginFill(fc, fa);\n\t\t}\n\t}\n\n\t// Draw the shape\n\tswitch (this.data.type) {\n\t\tcase CONST.DRAWING_TYPES.RECTANGLE:\n\t\tcase CONST.DRAWING_TYPES.TEXT:\n\t\t\tthis._drawRectangle();\n\t\t\tbreak;\n\t\tcase CONST.DRAWING_TYPES.ELLIPSE:\n\t\t\tthis._drawEllipse();\n\t\t\tbreak;\n\t\tcase CONST.DRAWING_TYPES.POLYGON:\n\t\t\tthis._drawPolygon();\n\t\t\tbreak;\n\t\tcase CONST.DRAWING_TYPES.FREEHAND:\n\t\t\tthis._drawFreehand();\n\t\t\tbreak;\n\t}\n\n\t// Conclude fills\n\tthis.shape.lineStyle(0x000000, 0.0).closePath();\n\tthis.shape.endFill();\n\n\t// Set shape rotation, pivoting about the non-rotated center\n\tthis.shape.pivot.set(this.data.width / 2, this.data.height / 2);\n\tthis.shape.position.set(this.data.width / 2, this.data.height / 2);\n\tthis.shape.rotation = Math.toRadians(this.data.rotation || 0);\n\n\t// Update text position and visibility\n\tif (this.text) {\n\t\tthis.text.alpha = this.data.textAlpha ?? 1.0;\n\t\tthis.text.pivot.set(this.text.width / 2, this.text.height / 2);\n\t\tthis.text.position.set(\n\t\t\t(this.text.width / 2) + ((this.data.width - this.text.width) / 2),\n\t\t\t(this.text.height / 2) + ((this.data.height - this.text.height) / 2)\n\t\t);\n\t\tthis.text.rotation = this.shape.rotation;\n\t}\n\t// Toggle visibility\n\tthis.position.set(this.data.x, this.data.y);\n\t// this.drawing.hitArea = bounds;\n\tthis.alpha = 1;\n}","import { AmbientLightDataProperties } from \"@league-of-foundry-developers/foundry-vtt-types/src/foundry/common/data/data.mjs/ambientLightData\";\nimport { AmbientLightData, LightData, MacroData } from \"@league-of-foundry-developers/foundry-vtt-types/src/foundry/common/data/module.mjs\";\nimport ARCHITECT from \"../core/architect\";\n\ndeclare global {\n\t// class MacroConfig extends BaseEntitySheet { }\n\tconst LightTemplates: _LightTemplates;\n}\n\ndeclare class AdaptiveLightingShader {\n\tstatic SHADER_TECHNIQUES: { [key: string]: { id: number, label: string } }\n}\n\nclass _LightTemplates {\n\t/**\n\t * Activates the given Light Template provided by the Macro ID.\n\t * @param macroId ID of Macro containing the light template.\n\t */\n\tasync activate(macroId: string) {\n\t\tif (!game.user.isGM) return;\n\t\tif (LightTemplateManager.currentActiveTemplate !== null) {\n\t\t\tthis.deactivate();\n\t\t}\n\n\t\t// Activate the lighting layer if we are not on it already\n\t\tif (ui.controls.activeControl !== 'lighting') {\n\t\t\t$('li.scene-control[data-control=\"lighting\"]').trigger('click');\n\t\t}\n\n\t\tLightTemplateManager.currentActiveTemplate = macroId;\n\t\tconst lightData = LightTemplateManager.getCurrentTemplateData();\n\t\tlightData.config.bright = Math.roundDecimals(lightData.config.bright, 2);\n\t\tlightData.config.dim = Math.roundDecimals(lightData.config.dim, 2);\n\t\t// This is just to make the colour text more visible\n\t\tconst tintColour = parseInt('0x1' + (lightData.config.color || '#000000').substring(1));\n\t\tconst templateHtml = $(await renderTemplate(`modules/${ARCHITECT.MOD_NAME}/templates/cur-light-template.hbs`, {\n\t\t\tname: game.macros.get(macroId).name,\n\t\t\tdata: lightData,\n\t\t\tcolorIntensity: Math.sqrt(lightData.config.alpha).toNearest(0.05),\n\t\t\t// lightType: LightTemplateManager.lightTypes[lightData.t],\n\t\t\tanimationType: lightData.config.animation.type === \"\" ? 'None' : CONFIG.Canvas.lightAnimations[lightData.config.animation.type].label,\n\t\t\ttintColorValue: lightData.config.color || 'transparent',\n\t\t\ttintColorLabel: lightData.config.color || '#------',\n\t\t\t// Determines if the tint colour is dark or light, the HBS template will change the text colour accordingly\n\t\t\ttintIsDark: ((((tintColour & 0xff0000) >> 16) + ((tintColour & 0xff00) >> 8) + (tintColour & 0xff)) / 3) < 128,\n\t\t\tcoloration: Object.entries(AdaptiveLightingShader.SHADER_TECHNIQUES).find(x => x[1].id === lightData.config.coloration)[1].label.localize()\n\t\t}));\n\t\tconst rect = $('nav#controls ol.active')[0].getBoundingClientRect();\n\t\ttemplateHtml.css('left', rect.right + 10 + 'px');\n\t\ttemplateHtml.css('top', rect.top + 'px');\n\t\tconst buttons = templateHtml.find('a');\n\t\tbuttons.first().on('click', () => game.macros.get(macroId).sheet.render(true));\n\t\tbuttons.last().on('click', this.deactivate.bind(this));\n\t\ttemplateHtml.appendTo(document.body);\n\t}\n\n\tdeactivate() {\n\t\tif (!game.user.isGM) return;\n\t\t// clear the status from previous selection\n\t\t$('#dfarch-cur-light-template').remove();\n\t\tLightTemplateManager.currentActiveTemplate = null;\n\t}\n}\n\n// @ts-ignore\nwindow.LightTemplates = new _LightTemplates();\n\nexport class LightTemplateManager {\n\tstatic readonly FLAG_IS_TEMPLATE = 'isLightTemplate';\n\n\tstatic currentActiveTemplate: string | null = null;\n\tstatic getCurrentTemplateData(): Partial<AmbientLightData> | null {\n\t\tif (this.currentActiveTemplate === null) return null;\n\t\treturn this.extractLightDataFromMacroCommand((game.macros.get(this.currentActiveTemplate) as any).command);\n\t}\n\n\tstatic init() {\n\t\tlibWrapper.register(ARCHITECT.MOD_NAME, 'Hotbar.prototype._getEntryContextOptions', this._getEntryContextOptions.bind(this), 'OVERRIDE');\n\t}\n\n\tstatic ready() {\n\t\tif (!game.user.isGM) return;\n\t\tHooks.on('renderAmbientLightConfig', this._renderLightConfig.bind(this));\n\t\tHooks.on('renderMacroConfig', this._renderMacroConfig.bind(this));\n\t\tHooks.on('renderSceneControls', (controls: SceneControls) => {\n\t\t\tif (game.user.isGM && controls.activeControl !== 'lighting')\n\t\t\t\tLightTemplates.deactivate();\n\t\t});\n\t\tHooks.on('renderMacroDirectory', (app: MacroDirectory, html: JQuery<HTMLElement>, data: any) => {\n\t\t\tconst createTemplateButton = $(`<button style=\"flex:unset\"><i class=\"far fa-lightbulb\"></i>\n${'DF_ARCHITECT.LightTemplate.CreateTemplateButton.MacroDirectory'.localize()}</button>`);\n\t\t\tcreateTemplateButton.appendTo(html.find('div.header-actions.action-buttons'));\n\t\t\tcreateTemplateButton.on('click', async () => await this._createTemplate({\n\t\t\t\t\"rotation\": 0,\n\t\t\t\t\"walls\": true,\n\t\t\t\t\"vision\": false,\n\t\t\t\t\"config\": <any>{\n\t\t\t\t\t\"alpha\": 0.5,\n\t\t\t\t\t\"angle\": 0,\n\t\t\t\t\t\"animation\": <any>{\n\t\t\t\t\t\t\"intensity\": 5,\n\t\t\t\t\t\t\"reverse\": false,\n\t\t\t\t\t\t\"speed\": 5,\n\t\t\t\t\t\t\"type\": ''\n\t\t\t\t\t},\n\t\t\t\t\t\"attenuation\": 0.5,\n\t\t\t\t\t\"bright\": 15,\n\t\t\t\t\t\"color\": null,\n\t\t\t\t\t\"coloration\": 1,\n\t\t\t\t\t\"contrast\": 0,\n\t\t\t\t\t\"darkness\": <any>{\n\t\t\t\t\t\t\"max\": 1,\n\t\t\t\t\t\t\"min\": 0\n\t\t\t\t\t},\n\t\t\t\t\t\"dim\": 30,\n\t\t\t\t\t\"luminosity\": 0.5,\n\t\t\t\t\t\"saturation\": 0,\n\t\t\t\t\t\"shadows\": 0,\n\t\t\t\t},\n\t\t\t\t\"flags\": {}\n\t\t\t}));\n\t\t});\n\t}\n\n\tprivate static _renderLightConfig(app: AmbientLightConfig, html: JQuery<HTMLElement>, data: any) {\n\t\tlet extraButton: JQuery<HTMLButtonElement>;\n\t\t// If we are rendering one of our template light configs\n\t\tif ((<any>app).df_light_template) {\n\t\t\tconst template = app.object as any as TemplateLightDocument;\n\t\t\t// Remove the XY position fields\n\t\t\thtml.find('input[name=\"x\"]').parentsUntil('div.tab').remove();\n\t\t\thtml.find('a.configure-sheet').remove();\n\t\t\tconst header = $(`<header class=\"sheet-header\">\n\t\t\t<img src=\"${template.macro.img}\" data-edit=\"img\" title=\"${'DF_ARCHITECT.LightTemplate.TemplateConfig.ImageTitle'.localize()}\" height=\"64\" width=\"64\">\n\t\t\t<h1><input name=\"name\" type=\"text\" value=\"${template.macro.name}\" placeholder=\" Name\"></h1>\n\t\t</header>`);\n\t\t\theader.find('img').on('click', (event, element) => {\n\t\t\t\tconst fp = new FilePicker({\n\t\t\t\t\ttype: \"image\",\n\t\t\t\t\tcurrent: template.macro.data.img,\n\t\t\t\t\tcallback: path => {\n\t\t\t\t\t\t(event.target as HTMLImageElement).src = path;\n\t\t\t\t\t\ttemplate.macro.data.img = path;\n\t\t\t\t\t},\n\t\t\t\t\ttop: app.position.top + 40,\n\t\t\t\t\tleft: app.position.left + 10\n\t\t\t\t});\n\t\t\t\tfp.browse(\"\");\n\t\t\t});\n\t\t\thtml.find('nav.sheet-tabs').before(header);\n\t\t\thtml.find('button[name=\"submit\"]').html('<i class=\"far fa-save\"></i> ' + 'DF_ARCHITECT.LightTemplate.TemplateConfig.SaveButton'.localize());\n\t\t\textraButton = $(`<button type=\"button\" class=\"execute\">\n\t<i class=\"far fa-lightbulb\"></i>\n\t${'DF_ARCHITECT.LightTemplate.TemplateConfig.UseButton'.localize()}\n\t</button>`);\n\t\t\thtml.find('button[name=\"submit\"]').before(extraButton);\n\t\t\textraButton.on('click', () => LightTemplates.activate(template.macro.id));\n\t\t\tapp.element[0].style.height = '';\n\t\t\tapp.element[0].style.width = '';\n\t\t\tapp.setPosition({ width: 480 });\n\t\t}\n\t\t// Otherwise we are rendering a regular light config\n\t\telse {\n\t\t\t// Add the \"Create Template\" button to the config\n\t\t\textraButton = $(`<button type=\"button\" name=\"save-template\">\n<i class=\"far fa-lightbulb\"></i>\n${'DF_ARCHITECT.LightTemplate.CreateTemplateButton.LightConfig'.localize()}\n</button>`);\n\t\t\thtml.find('footer.sheet-footer').prepend(extraButton);\n\t\t\textraButton.on('click', (event) => {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tthis._createTemplate(duplicate((<AmbientLightDocument>app.object).data) as Partial<AmbientLightData>);\n\t\t\t});\n\t\t}\n\t\t// Show/Hide the create template button depending on which tab is selected\n\t\tif (html.find('a.item[data-tab=\"advanced\"]').hasClass('active'))\n\t\t\textraButton.hide();\n\t\thtml.find('a.item[data-tab=\"basic\"]').on('click', () => extraButton.show());\n\t\thtml.find('a.item[data-tab=\"animation\"]').on('click', () => extraButton.show());\n\t\thtml.find('a.item[data-tab=\"advanced\"]').on('click', () => extraButton.hide());\n\t}\n\n\tprivate static async _renderMacroConfig(app: MacroConfig, html: JQuery<HTMLElement>, data: MacroConfig.Data<any>) {\n\t\tconst macro = data.document;\n\t\tif (!macro.getFlag(ARCHITECT.MOD_NAME, this.FLAG_IS_TEMPLATE))\n\t\t\treturn;\n\t\thtml.remove();\n\t\thtml.toggle\n\t\tsetTimeout(() => app.close(), 10);\n\t\tconst lightData = this.extractLightDataFromMacroCommand((macro as any).command);\n\t\tconst config = new AmbientLightConfig(<any>new TemplateLightDocument(macro, lightData), { editable: true });\n\t\t// @ts-ignore\n\t\tconfig.df_light_template = true;\n\t\tconfig.render(true, { editable: true });\n\t}\n\n\t/**\n\t * Simple function used to generate a specialized Macro to be used for Light Templating.\n\t * @param app LightConfig Application\n\t */\n\tprivate static async _createTemplate(lightData: Partial<AmbientLightData>) {\n\t\t// Delete the obsolete fields\n\t\tdelete lightData._id;\n\t\tdelete lightData.x;\n\t\tdelete lightData.y;\n\t\tdelete lightData.hidden;\n\t\tif (lightData.config.angle == 0) lightData.config.angle = 360;\n\t\t// Create the Macro\n\t\tconst macro = await Macro.create({\n\t\t\tname: 'Light Template ' + new Date().toISOString().replace(/(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2}).+/, '$4$5$6'),\n\t\t\tauthor: game.userId,\n\t\t\timg: `icons/svg/light.svg`,\n\t\t\tscope: \"global\",\n\t\t\ttype: 'script',\n\t\t\tcommand: this.generateCommandData(lightData)\n\t\t});\n\t\tawait macro.setFlag(ARCHITECT.MOD_NAME, this.FLAG_IS_TEMPLATE, true);\n\t\tmacro.sheet.render(true);\n\t}\n\n\t/**\n\t * Unfortunately, by the design of this core function, I must duplicate the\n\t * Foundry Core code here in order to add a custom option.\n\t */\n\tprivate static _getEntryContextOptions(): ContextMenuEntry[] {\n\t\treturn [\n\t\t\t{\n\t\t\t\tname: \"MACRO.Edit\",\n\t\t\t\ticon: '<i class=\"fas fa-edit\"></i>',\n\t\t\t\tcondition: li => {\n\t\t\t\t\tif (li.hasClass('inactive')) return false;\n\t\t\t\t\tconst macro = game.macros.get(li.data(\"macro-id\"));\n\t\t\t\t\t// Modified Section\n\t\t\t\t\treturn macro && !macro.getFlag(ARCHITECT.MOD_NAME, this.FLAG_IS_TEMPLATE) ? macro.isOwner : false;\n\t\t\t\t\t// End Modification\n\t\t\t\t},\n\t\t\t\tcallback: li => {\n\t\t\t\t\tconst macro = game.macros.get(li.data(\"macro-id\"));\n\t\t\t\t\tmacro.sheet.render(true);\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"MACRO.Remove\",\n\t\t\t\ticon: '<i class=\"fas fa-times\"></i>',\n\t\t\t\t// Modified Section\n\t\t\t\tcondition: li => {\n\t\t\t\t\tif (li.hasClass('inactive')) return false;\n\t\t\t\t\treturn !game.macros.get(li.data(\"macro-id\")).getFlag(ARCHITECT.MOD_NAME, this.FLAG_IS_TEMPLATE)\n\t\t\t\t},\n\t\t\t\t// End Modification\n\t\t\t\tcallback: li => game.user.assignHotbarMacro(null, Number(li.data(\"slot\")))\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"MACRO.Delete\",\n\t\t\t\ticon: '<i class=\"fas fa-trash\"></i>',\n\t\t\t\tcondition: li => {\n\t\t\t\t\tif (li.hasClass('inactive')) return false;\n\t\t\t\t\tconst macro = game.macros.get(li.data(\"macro-id\"));\n\t\t\t\t\t// Modified Section\n\t\t\t\t\treturn macro && !macro.getFlag(ARCHITECT.MOD_NAME, this.FLAG_IS_TEMPLATE) ? macro.isOwner : false;\n\t\t\t\t\t// End Modification\n\t\t\t\t},\n\t\t\t\tcallback: li => {\n\t\t\t\t\tconst macro = game.macros.get(li.data(\"macro-id\"));\n\t\t\t\t\treturn Dialog.confirm({\n\t\t\t\t\t\ttitle: `${game.i18n.localize(\"MACRO.Delete\")} ${macro.name}`,\n\t\t\t\t\t\tcontent: `<h4>${game.i18n.localize(\"AreYouSure\")}</h4><p>${game.i18n.localize(\"MACRO.DeleteWarning\")}</p>`,\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tyes: macro.delete.bind(macro)\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\t// Modified Section\n\t\t\t{\n\t\t\t\tname: \"DF_ARCHITECT.LightTemplate.ContextMenu.Edit\",\n\t\t\t\ticon: '<i class=\"fas fa-edit\"></i>',\n\t\t\t\tcondition: li => {\n\t\t\t\t\tif (li.hasClass('inactive')) return false;\n\t\t\t\t\tconst macro = game.macros.get(li.data(\"macro-id\"));\n\t\t\t\t\treturn macro && macro.getFlag(ARCHITECT.MOD_NAME, this.FLAG_IS_TEMPLATE) ? macro.isOwner : false;\n\t\t\t\t},\n\t\t\t\tcallback: li => game.macros.get(li.data(\"macro-id\")).sheet.render(true)\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"DF_ARCHITECT.LightTemplate.ContextMenu.Remove\",\n\t\t\t\ticon: '<i class=\"fas fa-times\"></i>',\n\t\t\t\tcondition: li => {\n\t\t\t\t\tif (li.hasClass('inactive')) return false;\n\t\t\t\t\treturn <boolean>game.macros.get(li.data(\"macro-id\")).getFlag(ARCHITECT.MOD_NAME, this.FLAG_IS_TEMPLATE)\n\t\t\t\t},\n\t\t\t\tcallback: li => game.user.assignHotbarMacro(null, li.data(\"slot\"))\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"DF_ARCHITECT.LightTemplate.ContextMenu.Delete\",\n\t\t\t\ticon: '<i class=\"fas fa-trash\"></i>',\n\t\t\t\tcondition: li => {\n\t\t\t\t\tif (li.hasClass('inactive')) return false;\n\t\t\t\t\tconst macro = game.macros.get(li.data(\"macro-id\"));\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\treturn macro && macro.getFlag(ARCHITECT.MOD_NAME, this.FLAG_IS_TEMPLATE) ? macro.isOwner : false;\n\t\t\t\t},\n\t\t\t\tcallback: li => {\n\t\t\t\t\tconst macro = game.macros.get(li.data(\"macro-id\"));\n\t\t\t\t\treturn Dialog.confirm({\n\t\t\t\t\t\ttitle: `${game.i18n.localize(\"DF_ARCHITECT.LightTemplate.Delete.Title\")} ${macro.name}`,\n\t\t\t\t\t\tcontent: game.i18n.localize(\"DF_ARCHITECT.LightTemplate.Delete.Confirm\"),\n\t\t\t\t\t\tyes: () => macro.delete()\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\t// End Modification\n\t\t];\n\t}\n\n\tstatic generateCommandData(lightData: Partial<AmbientLightData>) {\n\t\treturn `const ld=${JSON.stringify(lightData, null, '')};\\nLightTemplates.activate(this.id,ld);`;\n\t}\n\tstatic extractLightDataFromMacroCommand(commandString: string): Partial<AmbientLightData> {\n\t\treturn JSON.parse(/const +ld *= *(.+);/.exec(commandString)[1]) as Partial<AmbientLightData>;\n\t}\n}\n\n/**\n * Set of functions that override the Mouse Events for the LightingLayer in order to place templated lights.\n */\nexport class LightingLayerOverride {\n\tstatic ready() {\n\t\tlibWrapper.register(ARCHITECT.MOD_NAME, 'LightingLayer.prototype._onDragLeftStart',\n\t\t\tthis._onDragLeftStart.bind(canvas.lighting),\n\t\t\t'MIXED');\n\t\tlibWrapper.register(ARCHITECT.MOD_NAME, 'LightingLayer.prototype._onClickLeft',\n\t\t\tthis._onClickLeft.bind(canvas.lighting),\n\t\t\t'MIXED');\n\t\tlibWrapper.register(ARCHITECT.MOD_NAME, 'LightingLayer.prototype._onClickRight',\n\t\t\tthis._onClickRight.bind(canvas.lighting),\n\t\t\t'MIXED');\n\t}\n\n\tstatic _onClickLeft(this: LightingLayer, wrapper: Function, event: PIXI.InteractionEvent) {\n\t\tconst templateData: Partial<AmbientLightData> | null = LightTemplateManager.getCurrentTemplateData();\n\t\t// If we do not have an active template/Ctrl not pressed, pass through to original function\n\t\tif (templateData === null || !event.data.originalEvent.ctrlKey)\n\t\t\treturn wrapper(event);\n\t\tconst origin: { x: number, y: number } = (<any>event.data).origin;\n\t\tcanvas.scene.createEmbeddedDocuments(AmbientLight.embeddedName, [mergeObject(templateData, { x: origin.x, y: origin.y }) as any], {});\n\t}\n\n\tstatic _onClickRight(this: LightingLayer, wrapper: Function, event: PIXI.InteractionEvent) {\n\t\tconst templateData = LightTemplateManager.getCurrentTemplateData();\n\t\t// If we do not have an active template/Ctrl not pressed, pass through to original function\n\t\tif (templateData === null || !event.data.originalEvent.ctrlKey)\n\t\t\treturn wrapper(event);\n\t\tLightTemplates.deactivate();\n\t}\n\n\tstatic _onDragLeftStart(this: LightingLayer, wrapper: Function, event: PIXI.InteractionEvent) {\n\t\tconst templateData = LightTemplateManager.getCurrentTemplateData();\n\t\t// If we do not have an active template, pass through to original function\n\t\tif (templateData === null)\n\t\t\treturn wrapper(event);\n\t\tconst origin: { x: number, y: number } = (<any>event.data).origin;\n\t\t// Create the preview source\n\t\tconst doc = new AmbientLightDocument(mergeObject(templateData, { x: origin.x, y: origin.y, dim: 0, bright: 0 }), { parent: canvas.scene });\n\t\tconst preview = new AmbientLight(doc);\n\t\t(<any>event.data).preview = this.preview.addChild(preview);\n\t\tcanvas.effects.lightSources.set(preview.sourceId, preview.source);\n\t\tcanvas.effects.deactivateAnimation();\n\t\treturn preview.draw();\n\t}\n}\n\nclass TemplateLightDocument implements AmbientLightDataProperties {\n\tapps: any = {};\n\tmacro: Macro;\n\n\t_id: string;\n\tx: number;\n\ty: number;\n\trotation: number;\n\twalls: boolean;\n\tvision: boolean;\n\tconfig: LightData;\n\thidden: boolean;\n\tflags: Record<string, unknown>;\n\n\tget uuid() { return this.macro.id; }\n\tget id() { return this.macro.id; }\n\tget name() { return this.macro.name; }\n\tget object() { return this; }\n\tget isOwner() { return this.macro.isOwner; }\n\tconstructor(macro: Macro, data: Partial<AmbientLightData>) {\n\t\tthis._id = data._id;\n\t\tthis.x = data.x;\n\t\tthis.y = data.y;\n\t\tthis.rotation = data.rotation;\n\t\tthis.walls = data.walls;\n\t\tthis.vision = data.vision;\n\t\tthis.config = data.config;\n\t\tthis.hidden = data.hidden;\n\t\tthis.flags = data.flags;\n\t\tthis.macro = macro;\n\t}\n\tupdateSource() { }\n\trefresh() { }\n\tasync update(data: Partial<AmbientLightData>) {\n\t\tconst newData = foundry.utils.expandObject(data);\n\t\tconst img = newData.img;\n\t\tconst name = newData.name;\n\t\tdelete newData.img;\n\t\tdelete newData.name;\n\t\tawait this.macro.update({ name, img, command: LightTemplateManager.generateCommandData(newData) })\n\t}\n\ttestUserPermission(user: any, permission: any, { exact = false } = {}) {\n\t\treturn this.macro.testUserPermission(user, permission, { exact });\n\t}\n\tprepareData() { }\n\tclone() { return this; }\n\ttoObject() { return this; }\n\n\t_onUpdate(_change: any, { _render }: { _render: boolean }, _userId: string) { }\n\n\tstatic metadata = {\n\t\tlabel: 'Light Template'\n\t}\n}","import { WallData } from \"@league-of-foundry-developers/foundry-vtt-types/src/foundry/common/data/module.mjs\";\nimport ARCHITECT from \"../core/architect\";\nimport SETTINGS from \"../core/settings\";\n\n\nexport default class WallChangeType {\n\tprivate static readonly META_KEY = 'WallChangeType.MetaKey';\n\n\tstatic ready() {\n\t\tSETTINGS.register<string>(WallChangeType.META_KEY, {\n\t\t\tname: 'DF_ARCHITECT.WallChangeType.Setting.MetaKeyName',\n\t\t\thint: 'DF_ARCHITECT.WallChangeType.Setting.MetaKeyHint',\n\t\t\tconfig: true,\n\t\t\tscope: 'world',\n\t\t\tchoices: {\n\t\t\t\tctrl: 'DF_ARCHITECT.WallChangeType.Setting.MetaKey_OptionCtrl',\n\t\t\t\talt: 'DF_ARCHITECT.WallChangeType.Setting.MetaKey_OptionAlt'\n\t\t\t},\n\t\t\tdefault: 'ctrl',\n\t\t\ttype: String\n\t\t});\n\t\tlibWrapper.register(ARCHITECT.MOD_NAME, 'SceneControls.prototype._onClickTool', async (wrapper: Function, event: MouseEvent) => {\n\t\t\twrapper(event);\n\t\t\tif (SETTINGS.get(WallChangeType.META_KEY) === 'ctrl' && !event.ctrlKey) return;\n\t\t\telse if (SETTINGS.get(WallChangeType.META_KEY) === 'alt' && !event.altKey) return;\n\t\t\tconst wallData = canvas.walls['_getWallDataFromActiveTool'](game.activeTool) as Partial<WallData>;\n\t\t\tif (wallData.door === undefined)\n\t\t\t\twallData.door = 0;\n\t\t\telse if (wallData.ds === undefined)\n\t\t\t\twallData.ds = 0;\n\t\t\tif ((<Canvas>canvas).walls.controlled.length === 1) {\n\t\t\t\tawait (<Canvas>canvas).walls.controlled[0].document.update(wallData);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst updateData = canvas.walls.controlled.map(it => mergeObject({ _id: it.document._id }, wallData));\n\t\t\tawait canvas.scene.updateEmbeddedDocuments(\"Wall\", <any[]>updateData);\n\t\t\tcanvas.walls.controlled.forEach(x => x.refresh());\n\t\t}, 'WRAPPER');\n\t}\n}\n","import ARCHITECT from \"../core/architect\";\nimport SETTINGS from \"../core/settings\";\nimport libWrapperShared from \"../core/libWrapperShared\";\nimport WallCtrlInvert from \"./WallCtrlInvert\";\nimport { WallData } from \"@league-of-foundry-developers/foundry-vtt-types/src/foundry/common/data/data.mjs\";\n\ninterface WallEventData {\n\tdestination: PIXI.Point; preview: Wall; object: Wall; fixed: boolean;\n}\nexport default class WallAltDrop {\n\tprivate static readonly DISTANCE = \"WallAltDrop.Distance\";\n\n\tprivate static _visible = false;\n\tprivate static ring = new PIXI.Graphics();\n\n\tstatic init() {\n\t\tlibWrapper.register(ARCHITECT.MOD_NAME, 'Wall.prototype._onDragLeftMove', this._handleDragMove.bind(this), 'WRAPPER');\n\t\tlibWrapper.register(ARCHITECT.MOD_NAME, 'Wall.prototype._onDragLeftDrop', this.Wall_handleDragDrop, 'WRAPPER');\n\t\tlibWrapper.register(ARCHITECT.MOD_NAME, 'Wall.prototype._onDragLeftCancel', this._handleDragCancel.bind(this), 'WRAPPER');\n\t}\n\n\tstatic ready() {\n\t\tSETTINGS.register(WallAltDrop.DISTANCE, {\n\t\t\tname: 'DF_ARCHITECT.WallAltDrop.Setting.DistanceName',\n\t\t\thint: 'DF_ARCHITECT.WallAltDrop.Setting.DistanceHint',\n\t\t\tconfig: true,\n\t\t\tscope: 'world',\n\t\t\ttype: Number,\n\t\t\tdefault: 24,\n\t\t\tonChange: (value) => this._drawCircle(value as number)\n\t\t});\n\t\tconst radius: number = SETTINGS.get(WallAltDrop.DISTANCE);\n\t\tthis._drawCircle(radius as number);\n\n\t\tlibWrapper.register(ARCHITECT.MOD_NAME, 'WallsLayer.prototype._onDragLeftMove', this._handleDragMove.bind(this), 'WRAPPER');\n\t\tlibWrapper.register(ARCHITECT.MOD_NAME, 'WallsLayer.prototype._getWallEndpointCoordinates', (wrapper: any, point: { x: number, y: number }, { snap = true } = {}) => {\n\t\t\tconst altPressed = game.keyboard.isModifierActive(KeyboardManager.MODIFIER_KEYS.ALT);\n\t\t\tif (altPressed) {\n\t\t\t\tsnap = false;\n\t\t\t\tpoint = WallAltDrop._getClosestPoint(point)?.point ?? point;\n\t\t\t}\n\t\t\treturn wrapper(point, { snap });\n\t\t}, 'WRAPPER');\n\t\tlibWrapper.register(ARCHITECT.MOD_NAME, 'WallsLayer.prototype._onDragLeftCancel', this._handleDragCancel.bind(this), 'WRAPPER');\n\t\tlibWrapperShared.register('WallsLayer.prototype._onDragLeftDrop', this.WallsLayer_onDragLeftDrop);\n\t}\n\n\tprivate static _drawCircle(radius: number) {\n\t\tthis.ring.clear();\n\t\tthis.ring.beginFill(0, 0)\n\t\t\t.lineStyle(4, 0xEE8E26, 1.0, 1)\n\t\t\t.drawCircle(0, 0, radius)\n\t\t\t.endFill();\n\t}\n\n\tprivate static async _handleDragMove(wrapper: Function, event: PIXI.InteractionEvent) {\n\t\twrapper(event);\n\t\t// If we are controlling more than one wall, ignore it\n\t\tif ((<Canvas>canvas).walls.controlled.length > 1) return;\n\t\tconst data = (<any>event.data) as WallEventData;\n\t\t// If Alt is not pressed, or no wall is bound, cancel circle and return\n\t\tif (!event.data.originalEvent.altKey || (!data.preview && !data.object)) {\n\t\t\tthis._updateCircle(false);\n\t\t\treturn;\n\t\t}\n\t\tthis._updateCircle(true, data.destination);\n\t}\n\n\tprivate static async Wall_handleDragDrop(this: Wall, wrapper: Function, event: PIXI.InteractionEvent) {\n\t\tconst data = (<any>event.data) as WallEventData;\n\t\tconst { destination, fixed, object } = data;\n\t\tawait wrapper(event);\n\t\t// If we are controlling more than one wall, ignore it\n\t\tif ((<Canvas>canvas).walls.controlled.length > 1) return;\n\t\tWallAltDrop._updateCircle(false);\n\t\t// If Alt is not pressed, or no wall is bound, return\n\t\tif (!event.data.originalEvent.altKey || (!this && !object)) return;\n\t\tWallAltDrop._updateWallSnap(destination, fixed, event, this);\n\t}\n\n\tprivate static async WallsLayer_onDragLeftDrop(this: WallsLayer, wrapper: Function, event: PIXI.InteractionEvent) {\n\t\tconst data = (<any>event.data) as WallEventData;\n\t\tconst { destination, fixed, object } = data;\n\t\tvar wall = data.preview;\n\t\tawait wrapper(event);\n\t\tif (event.type === 'mousemove') return;\n\t\t// If we are controlling more than one wall, ignore it\n\t\tif ((<Canvas>canvas).walls.controlled.length > 1) return;\n\t\tWallAltDrop._updateCircle(false);\n\t\t// If Alt is not pressed, or no wall is bound, return\n\t\tif (!event.data.originalEvent.altKey || (!this && !object)) return;\n\t\tif (wall) {\n\t\t\twall = await new Promise<Wall>((res, _) => {\n\t\t\t\tvar counter = 0;\n\t\t\t\tconst waiter = () => {\n\t\t\t\t\tcounter += 10;\n\t\t\t\t\tif (!wall.data._id) {\n\t\t\t\t\t\tif (counter > 2000) res(undefined);\n\t\t\t\t\t\telse setTimeout(waiter, 100);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t// @ts-expect-error\n\t\t\t\t\tres(game.scenes.viewed.data.walls.find(x => x.id === (<Canvas>canvas).walls.last.id)?.object as Wall);\n\t\t\t\t}\n\t\t\t\tsetTimeout(waiter, 10);\n\t\t\t});\n\t\t}\n\t\tWallAltDrop._updateWallSnap(destination, fixed, event, wall ?? object);\n\t}\n\tprivate static async _handleDragCancel(wrapper: Function, event: PIXI.InteractionEvent) {\n\t\twrapper(event);\n\t\tthis._updateCircle(false);\n\t}\n\n\tprivate static _updateCircle(visible: boolean, position?: { x: number, y: number }) {\n\t\tif (visible) {\n\t\t\tif (this._visible != visible)\n\t\t\t\t(<Canvas>canvas).walls.addChild(this.ring);\n\t\t\tthis.ring.setTransform(position.x, position.y).updateTransform();\n\t\t} else if (this._visible != visible) {\n\t\t\t(<Canvas>canvas).walls.removeChild(this.ring);\n\t\t}\n\t\tthis._visible = visible;\n\t}\n\n\tprivate static _getClosestPoint(dest: { x: number, y: number }, wallId?: string): {\n\t\tdist: number;\n\t\tpoint: {\n\t\t\tx: number;\n\t\t\ty: number;\n\t\t};\n\t} {\n\t\tconst walls = game.scenes.viewed.walls.filter(x => x.id != wallId);\n\t\tconst radius: number = SETTINGS.get(this.DISTANCE);\n\t\tconst closestPoints = walls.map(wall => {\n\t\t\tconst [x, y] = WallsLayer.getClosestEndpoint(dest, <Wall>(<any>wall).object)\n\t\t\treturn { dist: Math.hypot(x - dest.x, y - dest.y), point: { x, y } };\n\t\t}).filter(x => x.dist <= radius).sort((a, b) => a.dist - b.dist);\n\t\treturn closestPoints[0];\n\t}\n\n\tprivate static async _updateWallSnap(dest: { x: number, y: number }, fixed: boolean, event: PIXI.InteractionEvent, wall: Wall): Promise<Wall> {\n\t\tconst closestPoint = this._getClosestPoint(dest, wall.document._id);\n\t\t// If there are no points nearby\n\t\tif (!closestPoint) return wall;\n\t\tconst target: PointArray = [closestPoint.point.x, closestPoint.point.y];\n\n\t\tconst p0 = fixed ? wall.coords.slice(2, 4) : wall.coords.slice(0, 2);\n\t\tconst coords = fixed ? target.concat(p0) : p0.concat(target);\n\t\t// If we are chaining walls, move the new wall's origin to the target point\n\t\tif ((game.keyboard.isModifierActive(KeyboardManager.MODIFIER_KEYS.CONTROL) && !WallCtrlInvert.enabled)\n\t\t\t|| (!game.keyboard.isModifierActive(KeyboardManager.MODIFIER_KEYS.CONTROL) && WallCtrlInvert.enabled)) {\n\t\t\t(<any>event.data).object.document.c[0] = target[0];\n\t\t\t(<any>event.data).object.document.c[1] = target[1];\n\t\t}\n\t\t// If we collapsed the wall, delete it\n\t\tif ((coords[0] === coords[2]) && (coords[1] === coords[3])) {\n\t\t\tawait (wall.document as WallDocument).delete();\n\t\t\treturn wall;\n\t\t}\n\t\t(<WallsLayer>wall.layer)['last'].point = target;\n\t\tif ((wall.document as WallData)._id)\n\t\t\tawait wall.document.update(<any>{ c: coords });\n\t\treturn wall;\n\t}\n}\n","import ARCHITECT from \"../core/architect\";\n\ninterface Invert { inverted: boolean };\n\nexport default class AltLightInverted {\n\tstatic ready() {\n\t\tlibWrapper.register(ARCHITECT.MOD_NAME, 'LightingLayer.prototype._onDragLeftMove',\n\t\t\tthis._onDragLeftMove.bind(canvas.lighting), 'WRAPPER');\n\t\tHooks.on('renderAmbientLightConfig', this._renderLightConfig.bind(this));\n\t}\n\tprivate static _onDragLeftMove(this: LightingLayer, wrapper: Function, event: PIXI.InteractionEvent) {\n\t\tconst preview = (event.data as any).preview as AmbientLight;\n\t\tif (event.data.originalEvent.altKey) {\n\t\t\tif (!(preview.document.flags['df-architect'] as Invert)?.inverted) {\n\t\t\t\tpreview.document.flags['df-architect'] = { inverted: true }\n\t\t\t\tpreview.document.config.luminosity = -preview.document.config.luminosity;\n\t\t\t}\n\t\t} else {\n\t\t\tif ((preview.document.flags['df-architect'] as Invert)?.inverted) {\n\t\t\t\tdelete preview.document.flags['df-architect'];\n\t\t\t\tpreview.document.config.luminosity = -preview.document.config.luminosity;\n\t\t\t}\n\t\t}\n\t\treturn wrapper(event);\n\t}\n\tprivate static _renderLightConfig(app: AmbientLightConfig, html: JQuery<HTMLElement>, data: any) {\n\t\tconst button = $(`<button type=\"button\" style=\"flex:0;padding-left:8.5px\" name=\"invert-radius\" title=\"${'DF_ARCHITECT.AltLightInverted.InvertLuminosityButton'.localize()}\"><i class=\"fas fa-adjust\"></i></button>`);\n\t\thtml.find('input[name=\"config.luminosity\"]').parent().before(button);\n\t\tbutton.on('click', (event: any) => {\n\t\t\tevent.preventDefault();\n\t\t\tconst luminosity = html.find('input[name=\"config.luminosity\"]');\n\t\t\tluminosity.val((-parseFloat(<string>luminosity.val())));\n\t\t\tluminosity.trigger('change');\n\t\t});\n\t}\n}\n","import { WallData } from \"@league-of-foundry-developers/foundry-vtt-types/src/foundry/common/data/module.mjs\";\nimport ARCHITECT from \"../core/architect\";\nimport SETTINGS from \"../core/settings\";\n\ninterface WallExt extends Wall {\n\t[key: string]: any;\n\tdfArchWallExt: {\n\t\tleftLabel: PIXI.Text;\n\t\trightLabel: PIXI.Text;\n\t\tdrawLabels?: boolean;\n\t\tstyle?: PIXI.TextStyle;\n\t}\n}\n\nexport default class WallDirections {\n\tstatic readonly PREF_ALLOW_UNSELECTED_INVERT = \"WallDirections.AllowUnselectedInvert\";\n\tstatic init() {\n\t\ttry {\n\t\t\tlibWrapper.register(ARCHITECT.MOD_NAME, 'Wall.prototype.draw', this._onWallDraw, 'WRAPPER');\n\t\t\tlibWrapper.register(ARCHITECT.MOD_NAME, 'Wall.prototype.refresh', this._onWallRefresh, 'WRAPPER');\n\t\t\tlibWrapper.register(ARCHITECT.MOD_NAME, 'Wall.prototype.control', this._onControlOrRelease, 'WRAPPER');\n\t\t\tlibWrapper.register(ARCHITECT.MOD_NAME, 'Wall.prototype.release', this._onControlOrRelease, 'WRAPPER');\n\t\t\tlibWrapper.register(ARCHITECT.MOD_NAME, 'Wall.prototype._onClickRight2', this._reverseWallDirection, 'OVERRIDE');\n\t\t}\n\t\tcatch (e) {\n\t\t\tconsole.error(\"Could not initialize Wall Direction Labels\", e);\n\t\t}\n\t}\n\n\tstatic ready() {\n\t\tSETTINGS.register(WallDirections.PREF_ALLOW_UNSELECTED_INVERT, {\n\t\t\tscope: 'world',\n\t\t\tname: 'DF_ARCHITECT.WallDirections.Setting.AllowUnselectedInvertName',\n\t\t\thint: 'DF_ARCHITECT.WallDirections.Setting.AllowUnselectedInvertHint',\n\t\t\tconfig: true,\n\t\t\ttype: Boolean,\n\t\t\tdefault: false\n\t\t});\n\t}\n\n\tprivate static _onControlOrRelease(this: PlaceableObject, wrapper: Function, ...args: any[]) {\n\t\tconst result = wrapper(...args);\n\t\tif (game.scenes.viewed.walls.has(this.id))\n\t\t\tthis.refresh();\n\t\treturn result;\n\t}\n\n\tprivate static async _reverseWallDirection(this: Wall) {\n\t\tif (SETTINGS.get(WallDirections.PREF_ALLOW_UNSELECTED_INVERT) && !this._controlled) return;\n\t\tconst data = this.document;\n\t\tif (data.dir) {\n\t\t\tawait this.document.update(<DeepPartial<WallData>>{ dir: data.dir === 1 ? 2 : 1 });\n\t\t} else {\n\t\t\tconst data = this.document.c.slice(2).concat(this.document.c.slice(0, 2));\n\t\t\tawait this.document.update(<DeepPartial<WallData>>{ c: data });\n\t\t}\n\t}\n\n\tprivate static async _onWallDraw(this: WallExt, wrapper: () => any): Promise<Wall> {\n\t\tconst style = new PIXI.TextStyle({\n\t\t\talign: 'center',\n\t\t\tfill: this._getWallColor(),\n\t\t\tfontSize: 12,\n\t\t\tstroke: 0,\n\t\t\tstrokeThickness: 2,\n\t\t\tlineHeight: 0\n\t\t});\n\t\tthis.dfArchWallExt = {\n\t\t\tleftLabel: new PIXI.Text(\"L\", style),\n\t\t\trightLabel: new PIXI.Text(\"R\", style),\n\t\t\tdrawLabels: true,\n\t\t\tstyle\n\t\t};\n\t\treturn wrapper();\n\t}\n\tprivate static _onWallRefresh(this: WallExt, wrapper: Function): Wall {\n\t\tif (this.dfArchWallExt.drawLabels) {\n\t\t\tdelete this.dfArchWallExt.drawLabels;\n\t\t\tthis.dfArchWallExt.style.fill = this._getWallColor();\n\t\t\tthis.addChild(this.dfArchWallExt.leftLabel);\n\t\t\tthis.addChild(this.dfArchWallExt.rightLabel);\n\t\t}\n\t\twrapper();\n\t\tif (!this.controlled || (this.document as WallData).dir) {\n\t\t\tif (this.dfArchWallExt?.leftLabel)\n\t\t\t\tthis.dfArchWallExt.leftLabel.renderable = false;\n\t\t\tif (this.dfArchWallExt?.rightLabel)\n\t\t\t\tthis.dfArchWallExt.rightLabel.renderable = false;\n\t\t\treturn this;\n\t\t}\n\t\tconst [x1, y1] = (this.document as WallData).c.slice(0, 2);\n\t\tconst [x2, y2] = (this.document as WallData).c.slice(2);\n\t\tconst [cx, cy] = [(x1 + x2) / 2, (y1 + y2) / 2]; // calculate the center\n\t\tconst [px, py] = [-(y2 - y1), x2 - x1]; // Calculate the line perpendicular\n\t\tconst magnitude = Math.hypot(px, py);\n\t\tconst [nx, ny] = [px / magnitude, py / magnitude]; // Normalize the perpendicular\n\t\tconst labelOffset = 10;\n\t\tconst [lx, ly] = [cx - (nx * labelOffset), cy - (ny * labelOffset)]; // Calculate the position of the Left label\n\t\tconst [rx, ry] = [(nx * labelOffset) + cx, (ny * labelOffset) + cy]; // Calculate the position of the Right label\n\t\t// Update left/right label positioning\n\t\tthis.dfArchWallExt.leftLabel.x = lx - (this.dfArchWallExt.leftLabel.width / 2);\n\t\tthis.dfArchWallExt.leftLabel.y = ly - (this.dfArchWallExt.leftLabel.height / 2);\n\t\tthis.dfArchWallExt.leftLabel.style.fill = this._getWallColor();\n\t\tthis.dfArchWallExt.leftLabel.renderable = true;\n\t\tthis.dfArchWallExt.rightLabel.x = rx - (this.dfArchWallExt.rightLabel.width / 2);\n\t\tthis.dfArchWallExt.rightLabel.y = ry - (this.dfArchWallExt.rightLabel.height / 2);\n\t\tthis.dfArchWallExt.rightLabel.style.fill = this._getWallColor();\n\t\tthis.dfArchWallExt.rightLabel.renderable = true;\n\t\treturn this;\n\t}\n}\n","// import { AmbientLightData } from \"@league-of-foundry-developers/foundry-vtt-types/src/foundry/common/data/data.mjs\";\n// import CaptureGameScreen from \"../general/CaptureGameScreen\";\n// import { LightTemplateManager } from \"../lights/LightTemplate\";\n// import ARCHITECT from \"./architect\";\nimport SETTINGS from \"./settings\";\n\ninterface Version {\n\tarch: string,\n\tcore: string\n}\n\nexport default class DataMigration {\n\tprivate static readonly PREF_DATA_VERSION = 'data-version';\n\tprivate static previous: Version;\n\tprivate static current: Version;\n\n\tstatic init() {\n\t\tSETTINGS.register(this.PREF_DATA_VERSION, {\n\t\t\tscope: 'world',\n\t\t\tconfig: false,\n\t\t\ttype: Object,\n\t\t\tdefault: { core: '0.0.0', arch: '0.0.0' }\n\t\t});\n\t}\n\tstatic async ready() {\n\t\tthis.current = {\n\t\t\tcore: game.version,\n\t\t\tarch: (game.modules.get('df-architect') as any).version\n\t\t};\n\t\tthis.previous = SETTINGS.get(this.PREF_DATA_VERSION);\n\t\tif (this.current.core === this.previous.core && this.current.arch === this.previous.arch) return;\n\t\tawait this.performMigration();\n\t\tawait SETTINGS.set(this.PREF_DATA_VERSION, this.current);\n\t}\n\n\tprivate static async performMigration() {\n\t\tvar migrating = false;\n\t\tconst migrationOccurring = () => {\n\t\t\tif (migrating) return;\n\t\t\tmigrating = true;\n\t\t\tui.notifications.info(game.i18n.localize('DF Architect is migrating your saved data to the latest version, please wait and <b>do not</b> refresh the page...'), { permanent: true });\n\t\t};\n\n\t\t// This is the start of the migration chain\n\t\t// await this.migrateToCore_0_9_241(migrationOccurring);\n\t\t// await this.migrateLightTemplates_3_2_x(migrationOccurring);\n\n\t\tif (migrating)\n\t\t\tui.notifications.info(game.i18n.localize('DF Architect has finished migrating your data!'), { permanent: true });\n\t}\n\n\t// Example migration function\n\t// private async migrateToCore_0_X_X() {\n\t// \tif (this.previous.core < '0.X.X') {\n\t// \t\t// perform data migration for Core 0.x.x\n\t// \t}\n\t// \twhile (this.previous.arch < 'X.X.X') {\n\t// \t\tswitch (this.previous.arch) {\n\t// \t\t\tcase 'x.x.x':\n\t// \t\t\t\t// Perform migration to x.x.x\n\t// \t\t\t\t// Update migration data state\n\t// \t\t\t\tthis.previous.arch = 'x.x.x'\n\t// \t\t\t\tbreak;\n\t// \t\t\tdefault:\n\t// \t\t\t// Perform migration from an unknown\n\t// \t\t}\n\t// \t}\n\t// \t// Invoke next migration in chain\n\t// }\n\n\t// private static async migrateToCore_0_9_241(notifyMigration: () => void) {\n\t// \tif (this.previous.core >= '9.241') return;\n\t// \tnotifyMigration();\n\t// \tconst layers: { [key: string]: any } = SETTINGS.get(CaptureGameScreen.PREF_LYRS);\n\t// \tconst newLayers = [\n\t// \t\t'background',\n\t// \t\t'controls',\n\t// \t\t'drawings',\n\t// \t\t'effects',\n\t// \t\t'foreground',\n\t// \t\t'grid',\n\t// \t\t'lighting',\n\t// \t\t'notes',\n\t// \t\t'sight',\n\t// \t\t'sounds',\n\t// \t\t'templates',\n\t// \t\t'tokens',\n\t// \t\t'walls'];\n\n\t// \tconst layerMap = new Map([\n\t// \t\t['BackgroundLayer', 'background'],\n\t// \t\t['ControlsLayer', 'controls'],\n\t// \t\t['DrawingsLayer', 'drawings'],\n\t// \t\t['EffectsLayer', 'effects'],\n\t// \t\t['ForegroundLayer', 'foreground'],\n\t// \t\t['GridLayer', 'grid'],\n\t// \t\t['LightingLayerPF2e', 'lighting'],\n\t// \t\t['NotesLayer', 'notes'],\n\t// \t\t['SightLayerPF2e', 'sight'],\n\t// \t\t['SoundsLayer', 'sounds'],\n\t// \t\t['TemplateLayerPF2e', 'templates'],\n\t// \t\t['TokenLayer', 'tokens'],\n\t// \t\t['WallsLayer', 'walls']]\n\t// \t);\n\t// \tif (layers['DarkvisionLayerPF2e'] !== undefined) delete layers['DarkvisionLayerPF2e'];\n\t// \tfor (const layer of Object.keys(layers)) {\n\t// \t\t// Map the layer data to the new layer name\n\t// \t\tif (layerMap.has(layer))\n\t// \t\t\tlayers[layerMap.get(layer)] = layers[layer];\n\t// \t\t// Delete the old layer name if it is not in the new layer list\n\t// \t\tif (!newLayers.includes(layer))\n\t// \t\t\tdelete layers[layer];\n\t// \t}\n\t// \tawait SETTINGS.set(CaptureGameScreen.PREF_LYRS, layers);\n\t// }\n\n\t// private static async migrateLightTemplates_3_2_x(notifyMigration: () => void) {\n\t// \tif (this.previous.arch >= '3.2.0') return;\n\t// \tnotifyMigration();\n\n\t// \tconst oldImage = \"modules/df-architect/templates/lightbulb.svg\";\n\t// \tconst newImage = \"icons/svg/light.svg\";\n\t// \tfor (const macro of game.macros) {\n\t// \t\t// Ignore regular macros\n\t// \t\tif (!macro.getFlag(ARCHITECT.MOD_NAME, LightTemplateManager.FLAG_IS_TEMPLATE)) continue;\n\t// \t\tconst oldLightData = LightTemplateManager.extractLightDataFromMacroCommand(macro.data.command) as {\n\t// \t\t\tt: string,\n\t// \t\t\tdim: number,\n\t// \t\t\tangle: number,\n\t// \t\t\tbright: number,\n\t// \t\t\trotation: number,\n\t// \t\t\ttintColor: string,\n\t// \t\t\ttintAlpha: number,\n\t// \t\t\tdarkness: {\n\t// \t\t\t\tmin: number,\n\t// \t\t\t\tmax: number\n\t// \t\t\t},\n\t// \t\t\tlightAnimation: {\n\t// \t\t\t\ttype: string,\n\t// \t\t\t\tintensity: number,\n\t// \t\t\t\tspeed: number\n\t// \t\t\t},\n\t// \t\t\tconfig?: any\n\t// \t\t};\n\t// \t\t// Ignore macros that may have already been converted\n\t// \t\tif (!!oldLightData.config) continue;\n\t// \t\t// Change the default image in light template macros (if still referencing the old one) to the Foundry light image\n\t// \t\tconst img = macro.data.img === oldImage ? newImage : macro.data.img;\n\t// \t\tconst newLightData: AmbientLightData = <any>{\n\t// \t\t\trotation: oldLightData.rotation,\n\t// \t\t\twalls: oldLightData.t !== 'u',\n\t// \t\t\tvision: oldLightData.t !== 'l',\n\t// \t\t\tconfig: <any>{\n\t// \t\t\t\talpha: oldLightData.tintAlpha,\n\t// \t\t\t\tangle: oldLightData.angle,\n\t// \t\t\t\tbright: Math.abs(oldLightData.bright),\n\t// \t\t\t\tdim: Math.abs(oldLightData.dim),\n\t// \t\t\t\tcoloration: 1,\n\t// \t\t\t\tgradual: true,\n\t// \t\t\t\t// Convert the negative radius to negative luminosity for creating patches of \"darkness\"\n\t// \t\t\t\tluminosity: oldLightData.bright < 0 || oldLightData.dim < 0 ? -0.5 : 0.5,\n\t// \t\t\t\tsaturation: 0,\n\t// \t\t\t\tcontrast: 0,\n\t// \t\t\t\tshadows: 0,\n\t// \t\t\t\tanimation: <any>{\n\t// \t\t\t\t\ttype: oldLightData.lightAnimation.type ?? '',\n\t// \t\t\t\t\tspeed: oldLightData.lightAnimation.speed,\n\t// \t\t\t\t\tintensity: oldLightData.lightAnimation.intensity,\n\t// \t\t\t\t\treverse: false\n\t// \t\t\t\t},\n\t// \t\t\t\tdarkness: <any>oldLightData.darkness\n\t// \t\t\t}\n\t// \t\t}\n\t// \t\tmacro.update({ img, command: LightTemplateManager.generateCommandData(newLightData) })\n\t// \t}\n\n\t// }\n}","import { TileData } from \"@league-of-foundry-developers/foundry-vtt-types/src/foundry/common/data/module.mjs\";\nimport ARCHITECT from \"../core/architect\";\nimport SETTINGS from \"../core/settings\";\nimport CaptureGameScreen from \"../general/CaptureGameScreen\";\nimport ArchiveFolderMenu from \"./TileFlattenerFolder\";\n\ninterface Margin {\n\tl: number;\n\tr: number;\n\tt: number;\n\tb: number;\n}\ninterface ImageData { data: string, width: number, height: number }\n\nenum TileLayerRendered {\n\tFloor,\n\tRoof,\n\tBoth\n}\n\n/**\n * This Declaration is for the Levels Module. This module performs placeable\n * cloning into its own PIXI Containers. This is used to disable those\n * containers for proper rendering.\n * \n * https://foundryvtt.com/packages/levels\n */\ndeclare const _levels: any;\n\nexport default class TileFlattener {\n\n\tprivate static readonly PREF_RENDER_LIGHT = \"TileFlattener.RenderLighting\";\n\tprivate static readonly PREF_RENDER_BACKG = \"TileFlattener.RenderBackground\";\n\tprivate static readonly PREF_RENDER_SLCTD = \"TileFlattener.RenderSelectedOnly\";\n\tprivate static readonly PREF_RENDER_HIDEN = \"TileFlattener.RenderHiddenTiles\";\n\tprivate static readonly PREF_RENDER_ANIMS = \"TileFlattener.RenderAnimatedTiles\";\n\tprivate static readonly PREF_MARGIN = \"TileFlattener.Margin\";\n\tprivate static readonly PREF_LAYERS = \"TileFlattener.Layers\";\n\tstatic readonly PREF_FOLDER = \"TileFlattener.Folder\";\n\tstatic readonly PREF_FOLDER_SOURCE = \"TileFlattener.FolderSource\";\n\n\tprivate static get renderLights(): boolean { return SETTINGS.get(this.PREF_RENDER_LIGHT); }\n\tprivate static get renderBackground(): boolean { return SETTINGS.get(this.PREF_RENDER_BACKG); }\n\tprivate static get renderSelected(): boolean { return SETTINGS.get(this.PREF_RENDER_SLCTD); }\n\tprivate static get renderHidden(): boolean { return SETTINGS.get(this.PREF_RENDER_HIDEN); }\n\tprivate static get renderAnimated(): boolean { return SETTINGS.get(this.PREF_RENDER_ANIMS); }\n\tprivate static get margin(): Margin { return SETTINGS.get(this.PREF_MARGIN); }\n\tprivate static get layers(): number { return SETTINGS.get(this.PREF_LAYERS); }\n\tprivate static get folder(): string { return SETTINGS.get(this.PREF_FOLDER); }\n\tprivate static get folderSource(): FilePicker.SourceType { return SETTINGS.get(this.PREF_FOLDER_SOURCE); }\n\n\tstatic init() {\n\t\t//#region Register Render Configuration Settings\n\t\tSETTINGS.register<Boolean>(this.PREF_RENDER_LIGHT, { scope: 'client', config: false, type: Boolean, default: false });\n\t\tSETTINGS.register<Boolean>(this.PREF_RENDER_BACKG, { scope: 'client', config: false, type: Boolean, default: true });\n\t\tSETTINGS.register<Boolean>(this.PREF_RENDER_SLCTD, { scope: 'client', config: false, type: Boolean, default: false });\n\t\tSETTINGS.register<Boolean>(this.PREF_RENDER_HIDEN, { scope: 'client', config: false, type: Boolean, default: false });\n\t\tSETTINGS.register<Boolean>(this.PREF_RENDER_ANIMS, { scope: 'client', config: false, type: Boolean, default: false });\n\t\tSETTINGS.register<Number>(this.PREF_LAYERS, { scope: 'client', config: false, type: Number, default: 0 });\n\t\tSETTINGS.register<Margin>(this.PREF_MARGIN, { scope: 'client', config: false, type: SETTINGS.typeOf<Margin>(), default: { l: 0, r: 0, t: 0, b: 0 } });\n\t\t//#endregion\n\n\t\tSETTINGS.register<String>(this.PREF_FOLDER, { scope: 'world', config: false, type: String, default: 'assets' });\n\t\tSETTINGS.register<String>(this.PREF_FOLDER_SOURCE, { scope: 'world', config: false, type: String, default: 'data' });\n\t\tSETTINGS.registerMenu('TileFlattener.StorageLocation', {\n\t\t\trestricted: true,\n\t\t\ttype: ArchiveFolderMenu,\n\t\t\ticon: 'fas fa-folder-open',\n\t\t\tlabel: 'DF_ARCHITECT.TileFlattener.ImageFolderTitle'\n\t\t});\n\n\t\tHooks.on('getSceneControlButtons', (controls: SceneControl[]) => {\n\t\t\tconst tiles = controls.find(x => x.name === 'tiles');\n\t\t\ttiles.tools.push({\n\t\t\t\ticon: 'fas fa-file-image',\n\t\t\t\tname: 'flatten',\n\t\t\t\tbutton: true,\n\t\t\t\ttitle: 'DF_ARCHITECT.TileFlattener.Label',\n\t\t\t\t//! TEMPORARY DISABLING OF TILE FLATTENER\n\t\t\t\t//! Get rid of this line\n\t\t\t\tonClick: () => ui.notifications.warn(\"Tile Flattener is temporarily unavailable until the Canvas Capture's layer filtering feature can be fixed\")\n\t\t\t\t//! Reactivate this line\n\t\t\t\t// onClick: this.promptForTileFlattening.bind(this)\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate static async promptForTileFlattening() {\n\t\tconst data = {\n\t\t\tpng: SETTINGS.get(CaptureGameScreen.PREF_FRMT) === 'png',\n\t\t\tjpeg: SETTINGS.get(CaptureGameScreen.PREF_FRMT) === 'jpeg',\n\t\t\twebp: SETTINGS.get(CaptureGameScreen.PREF_FRMT) === 'webp',\n\t\t\tcompression: SETTINGS.get(CaptureGameScreen.PREF_COMP),\n\t\t\tmargin: this.margin,\n\t\t\tlights: this.renderLights,\n\t\t\tshowBG: this.renderBackground,\n\t\t\tselect: this.renderSelected,\n\t\t\thidden: this.renderHidden,\n\t\t\tlayers: this.layers,\n\t\t\thideAnimated: this.renderAnimated\n\t\t};\n\t\tconst dialog: Dialog = new Dialog({\n\t\t\ttitle: 'DF_ARCHITECT.TileFlattener.CapturePromptTitle'.localize(),\n\t\t\tcontent: await renderTemplate(`modules/${ARCHITECT.MOD_NAME}/templates/tile-flatten.hbs`, data),\n\t\t\tbuttons: {\n\t\t\t\tcancel: {\n\t\t\t\t\ticon: '<i class=\"fas fa-times\"></i>',\n\t\t\t\t\tlabel: 'DF_ARCHITECT.General.Cancel'.localize(),\n\t\t\t\t\tcallback: () => dialog.close()\n\t\t\t\t},\n\t\t\t\tcapture: {\n\t\t\t\t\ticon: '<i class=\"fas fa-file-image\"></i>',\n\t\t\t\t\tlabel: 'DF_ARCHITECT.TileFlattener.FlattenButton'.localize(),\n\t\t\t\t\tcallback: this.flattenTiles.bind(this),\n\t\t\t\t}\n\t\t\t},\n\t\t\trender: this.setupBindings.bind(this),\n\t\t\tdefault: 'capture',\n\t\t});\n\t\tdialog.render(true);\n\t}\n\n\tprivate static async flattenTiles(html: JQuery | HTMLElement) {\n\t\t// Collect data from form\n\t\thtml = html instanceof HTMLElement ? html : html[0];\n\t\tconst format = html.querySelector<HTMLSelectElement>('#format').value;\n\t\tconst quality = html.querySelector<HTMLInputElement>('#compression').valueAsNumber;\n\t\tconst margin = {\n\t\t\tl: html.querySelector<HTMLInputElement>('#left').valueAsNumber,\n\t\t\tr: html.querySelector<HTMLInputElement>('#right').valueAsNumber,\n\t\t\tt: html.querySelector<HTMLInputElement>('#top').valueAsNumber,\n\t\t\tb: html.querySelector<HTMLInputElement>('#bottom').valueAsNumber\n\t\t}\n\t\tconst lights = html.querySelector<HTMLInputElement>('#lights').checked;\n\t\tconst showBG = html.querySelector<HTMLInputElement>('#showBG').checked;\n\t\tconst hidden = html.querySelector<HTMLInputElement>('#hidden').checked;\n\t\tconst animated = !html.querySelector<HTMLInputElement>('#animated').checked;\n\t\tconst select = html.querySelector<HTMLInputElement>('#tiles').checked;\n\t\tconst layers = html.querySelector<HTMLInputElement>('#floor').checked\n\t\t\t? TileLayerRendered.Floor : html.querySelector<HTMLInputElement>('#roof').checked\n\t\t\t\t? TileLayerRendered.Roof : TileLayerRendered.Both;\n\t\t// Save data as defaults for later\n\t\tawait Promise.all([\n\t\t\tSETTINGS.set(this.PREF_RENDER_LIGHT, lights),\n\t\t\tSETTINGS.set(this.PREF_RENDER_BACKG, showBG),\n\t\t\tSETTINGS.set(this.PREF_RENDER_HIDEN, hidden),\n\t\t\tSETTINGS.set(this.PREF_RENDER_ANIMS, animated),\n\t\t\tSETTINGS.set(this.PREF_RENDER_SLCTD, select),\n\t\t\tSETTINGS.set(this.PREF_MARGIN, margin),\n\t\t\tSETTINGS.set(this.PREF_RENDER_LIGHT, lights),\n\t\t\tSETTINGS.set(this.PREF_LAYERS, layers),\n\t\t\tSETTINGS.set(CaptureGameScreen.PREF_FRMT, format),\n\t\t\tSETTINGS.set(CaptureGameScreen.PREF_COMP, quality),\n\t\t]);\n\n\t\tconst tilesPreHidden = new Map<string, [Tile, boolean]>();\n\t\tvar controlledTiles: Tile[];\n\t\t// Collect all of the selected tiles\n\t\tcontrolledTiles = (canvas.background.controlled as Tile[]).concat(canvas.foreground.controlled);\n\t\t// If we are rendering only selected items\n\t\tif (select) {\n\t\t\tif (controlledTiles.length === 0) {\n\t\t\t\tui.notifications.error('You must have tiles selected for the current configuration. Did you maybe mean to select Entire Canvas?'.localize());\n\t\t\t\tthis.promptForTileFlattening();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Collect and hide all the other tiles\n\t\t\tconst allTiles = (canvas.background.tiles as Tile[]).concat(canvas.foreground.tiles);\n\t\t\tconst controlledIDs = controlledTiles.map(x => x.id);\n\t\t\tfor (let tile of allTiles) {\n\t\t\t\ttilesPreHidden.set(tile.data._id, [tile, tile.data.hidden]);\n\t\t\t\ttile.data.hidden = !controlledIDs.includes(tile.id);\n\t\t\t\ttile.refresh();\n\t\t\t}\n\t\t}\n\t\t// If we are not rendering animated tiles\n\t\tif (!animated) {\n\t\t\t// Collect and hide all the other tiles\n\t\t\tconst allTiles = (canvas.background.tiles as Tile[]).concat(canvas.foreground.tiles);\n\t\t\tfor (let tile of allTiles) {\n\t\t\t\tif (!tilesPreHidden.has(tile.data._id))\n\t\t\t\t\ttilesPreHidden.set(tile.data._id, [tile, tile.data.hidden]);\n\t\t\t\t// Only override the hidden if it is not already true\n\t\t\t\tif (!tile.data.hidden)\n\t\t\t\t\ttile.data.hidden = VideoHelper.hasVideoExtension(tile.data.img);\n\t\t\t}\n\t\t}\n\n\t\t// Pre-Hide all tiles on the background layer before canvas capture starts\n\t\tif (layers === TileLayerRendered.Roof) {\n\t\t\tfor (let tile of canvas.background.tiles) {\n\t\t\t\tif (!tilesPreHidden.has(tile.data._id))\n\t\t\t\t\ttilesPreHidden.set(tile.data._id, [tile, tile.data.hidden]);\n\t\t\t\ttile.data.hidden = true;\n\t\t\t}\n\t\t}\n\n\t\t// Begin the Canvas Capture Process\n\t\tconst session = CaptureGameScreen.beginCapture(false);\n\n\t\t// Disable ALL Other Layers\n\t\tfor (let layer of Object.keys(CONFIG.Canvas.layers)) {\n\t\t\tif ([\"background\", \"foreground\", \"lighting\"].includes(layer)) continue;\n\t\t\ttry {\n\t\t\t\tCaptureGameScreen.toggleLayer(layer, false);\n\t\t\t} catch (error: any) {\n\t\t\t\tconsole.error(error);\n\t\t\t}\n\t\t}\n\t\tCaptureGameScreen.toggleLayer(\"lighting\", lights);\n\t\tif (layers === TileLayerRendered.Floor)\n\t\t\tCaptureGameScreen.toggleLayer(\"foreground\", false);\n\t\t// Update the Background Image if it exists\n\t\tif (!!canvas.background.bg)\n\t\t\tcanvas.background.bg.visible = showBG;\n\t\t(<any>canvas.app.renderer).backgroundAlpha = 0;\n\n\t\tconst waitForDOMUpdate = async () => new Promise<void>(res => setTimeout(res, 10));\n\t\tawait waitForDOMUpdate();\n\t\tvar image: ImageData;\n\t\ttry {\n\t\t\tif (!session) {\n\t\t\t\tui.notifications.warn('DF_ARCHITECT.CaptureGameScreen.ErrorCaptureInProgress'.localize());\n\t\t\t\tthis.promptForTileFlattening();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tCaptureGameScreen.toggleHidden(\"background\", hidden && !select && layers !== TileLayerRendered.Roof);\n\t\t\tCaptureGameScreen.toggleHidden(\"foreground\", hidden && !select && layers !== TileLayerRendered.Floor);\n\t\t\tawait waitForDOMUpdate();\n\n\t\t\tif (typeof _levels !== 'undefined') {\n\t\t\t\t_levels.floorContainer.visible = false;\n\t\t\t\t_levels.overContainer.visible = false;\n\t\t\t\t_levels.fogContainer.visible = false;\n\t\t\t\t_levels.tokenRevealFogContainer.visible = false;\n\t\t\t}\n\n\t\t\tif (select) {\n\t\t\t\tconst rect = {\n\t\t\t\t\tl: Number.MAX_VALUE,\n\t\t\t\t\tt: Number.MAX_VALUE,\n\t\t\t\t\tr: Number.MIN_VALUE,\n\t\t\t\t\tb: Number.MIN_VALUE,\n\t\t\t\t};\n\t\t\t\tfor (let tile of controlledTiles) {\n\t\t\t\t\tconst bounds: { minX: number, minY: number, maxX: number, maxY: number } = {\n\t\t\t\t\t\tminX: tile.center.x - (tile.width / 2),\n\t\t\t\t\t\tminY: tile.center.y - (tile.height / 2),\n\t\t\t\t\t\tmaxX: tile.center.x + (tile.width / 2),\n\t\t\t\t\t\tmaxY: tile.center.y + (tile.height / 2)\n\t\t\t\t\t}\n\t\t\t\t\tif (bounds.minX < rect.l) rect.l = bounds.minX;\n\t\t\t\t\tif (bounds.minY < rect.t) rect.t = bounds.minY;\n\t\t\t\t\tif (bounds.maxX > rect.r) rect.r = bounds.maxX;\n\t\t\t\t\tif (bounds.maxY > rect.b) rect.b = bounds.maxY;\n\t\t\t\t}\n\t\t\t\timage = await CaptureGameScreen.captureCanvas({\n\t\t\t\t\tformat: 'image/' + format, quality,\n\t\t\t\t\tview: {\n\t\t\t\t\t\tx: -margin.l + rect.l,\n\t\t\t\t\t\ty: -margin.t + rect.t,\n\t\t\t\t\t\tw: margin.l + margin.r + rect.r - rect.l,\n\t\t\t\t\t\th: margin.t + margin.b + rect.b - rect.t,\n\t\t\t\t\t\ts: 1\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\timage = await CaptureGameScreen.captureCanvas({ format: 'image/' + format, quality });\n\t\t\t}\n\t\t} finally {\n\t\t\tif (typeof _levels !== 'undefined') {\n\t\t\t\t_levels.floorContainer.visible = true;\n\t\t\t\t_levels.overContainer.visible = true;\n\t\t\t\t_levels.fogContainer.visible = true;\n\t\t\t\t_levels.tokenRevealFogContainer.visible = true;\n\t\t\t}\n\t\t\t// Terminate the canvas capture\n\t\t\tCaptureGameScreen.endCapture(session);\n\t\t\t// Restore Background Image\n\t\t\tif (!!canvas.background.bg)\n\t\t\t\tcanvas.background.bg.visible = true;\n\t\t\t(<any>canvas.app.renderer).backgroundAlpha = 1;\n\t\t\t// Restore the non-selected tiles\n\t\t\tfor (let [_, [tile, hidden]] of tilesPreHidden) {\n\t\t\t\ttile.data.hidden = hidden;\n\t\t\t\ttile.refresh();\n\t\t\t}\n\t\t\t// Restore selection\n\t\t\tcontrolledTiles.forEach(x => x.control({ releaseOthers: false }));\n\t\t}\n\t\t// Save the image data to file\n\t\tCaptureGameScreen.saveImageData({\n\t\t\timage,\n\t\t\tdefaultFileName: 'DF_ARCHITECT.TileFlattener.SaveImageDialog.FileNamePlaceholder'.localize(),\n\t\t\tdialogTitle: 'DF_ARCHITECT.TileFlattener.SaveImageDialog.Title'.localize(),\n\t\t\tfolder: this.folder,\n\t\t\tfolderSource: this.folderSource\n\t\t}).then(filePath => {\n\t\t\t// Prompt to ask what to do with it\n\t\t\tif (!!filePath) this.promptSceneReplacement(filePath, image.width, image.height, layers, lights);\n\t\t});\n\t}\n\n\tprivate static setupBindings(root: HTMLElement | JQuery<HTMLElement>) {\n\t\tconst html = $(root);\n\t\tconst margins = html.find('table');\n\t\tconst hidden = html.find('#hidden');\n\t\tconst canvas = html.find('#canvas');\n\t\tconst tiles = html.find('#tiles');\n\t\tconst update = () => {\n\t\t\tif ((canvas[0] as HTMLInputElement).checked) {\n\t\t\t\tmargins.find('input').prop('disabled', true);\n\t\t\t\thidden.prop('disabled', false);\n\t\t\t} else {\n\t\t\t\tmargins.find('input').prop('disabled', false);\n\t\t\t\thidden.prop('disabled', true);\n\t\t\t}\n\t\t};\n\t\tcanvas.on('change', update);\n\t\ttiles.on('change', update);\n\t\tconst compression = html.find('#compression');\n\t\tcompression.on('input', () => compression.trigger('change'));\n\t\tcompression.on('change', () => html.find('#compression-output').val(compression.val()));\n\t}\n\n\tprivate static async promptSceneReplacement(filePath: string, width: number, height: number, layersRendered: TileLayerRendered, bakedLighting: boolean) {\n\t\tconst dialog: Dialog = new Dialog({\n\t\t\ttitle: 'DF_ARCHITECT.TileFlattener.SceneReplaceDialog.Title'.localize(),\n\t\t\tcontent: await renderTemplate(`modules/${ARCHITECT.MOD_NAME}/templates/tile-flatten-scene.hbs`, {}),\n\t\t\tbuttons: {\n\t\t\t\tcancel: {\n\t\t\t\t\ticon: '<i class=\"fas fa-times\"></i>',\n\t\t\t\t\tlabel: 'DF_ARCHITECT.TileFlattener.SceneReplaceDialog.DoNothing'.localize(),\n\t\t\t\t\tcallback: () => dialog.close()\n\t\t\t\t}\n\t\t\t},\n\t\t\tdefault: 'cancel',\n\t\t\trender: (root: HTMLElement | JQuery<HTMLElement>) => {\n\t\t\t\tconst html = $(root);\n\t\t\t\thtml.find('#replace').on('click', async (e) => {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tdialog.close();\n\t\t\t\t\tawait game.scenes.viewed.update({ img: filePath }, {});\n\t\t\t\t});\n\t\t\t\thtml.find('#clone').on('click', async (e) => {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\t// Create the new scene\n\t\t\t\t\tconst newScene = await game.scenes.viewed.clone({\n\t\t\t\t\t\tname: game.scenes.viewed.name + ' (Copy)',\n\t\t\t\t\t\timg: filePath\n\t\t\t\t\t}, { save: true });\n\t\t\t\t\t// Get the tiles that were rendered\n\t\t\t\t\tvar tiles: TileData[] = newScene.data.tiles.map(x => x.data);\n\t\t\t\t\tif (this.renderSelected) {\n\t\t\t\t\t\ttiles = canvas.background.controlled.map(x => x.data);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (layersRendered === TileLayerRendered.Floor)\n\t\t\t\t\t\t\ttiles = tiles.filter(x => !x.overhead);\n\t\t\t\t\t\telse if (layersRendered === TileLayerRendered.Roof)\n\t\t\t\t\t\t\ttiles = tiles.filter(x => x.overhead);\n\t\t\t\t\t\tif (!this.renderHidden) {\n\t\t\t\t\t\t\ttiles = tiles.filter(x => !x.hidden);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// Delete the rendered tiles\n\t\t\t\t\tawait newScene.deleteEmbeddedDocuments('Tile', tiles.map(x => x._id));\n\t\t\t\t\tconst thumbData = await (<any>newScene).createThumbnail();\n\t\t\t\t\tawait newScene.update(<any>{ thumb: thumbData.thumb }, { diff: false });\n\t\t\t\t\t// If lighting was baked in, delete the scene's lights\n\t\t\t\t\tif (bakedLighting)\n\t\t\t\t\t\tawait newScene.deleteEmbeddedDocuments('AmbientLight', newScene.data.lights.map(x => x.id));\n\t\t\t\t\tdialog.close();\n\t\t\t\t});\n\t\t\t\thtml.find('#tile').on('click', async (e) => {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tconst x = (game.scenes.viewed.data.width - width) / 2;\n\t\t\t\t\tconst y = (game.scenes.viewed.data.height - height) / 2;\n\t\t\t\t\tawait game.scenes.viewed.createEmbeddedDocuments(TileDocument.documentName, [{ img: filePath, x, y, z: 0, width, height }]);\n\t\t\t\t\tdialog.close();\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\tdialog.render(true);\n\t}\n}\n","import ARCHITECT from \"../core/architect\";\nimport SETTINGS from \"../core/settings\";\nimport TileFlattener from \"./TileFlattener\";\n\nexport default class ArchiveFolderMenu extends FormApplication {\n\tstatic get defaultOptions() {\n\t\treturn mergeObject(FormApplication.defaultOptions as Partial<FormApplicationOptions>, {\n\t\t\twidth: 400,\n\t\t\theight: 125,\n\t\t\tresizable: false,\n\t\t\tminimizable: false,\n\t\t\ttitle: 'DF_ARCHITECT.TileFlattener.ImageFolderTitle',\n\t\t\ttemplate: `modules/${ARCHITECT.MOD_NAME}/templates/folder-selection.hbs`,\n\t\t\tsubmitOnClose: false,\n\t\t\tsubmitOnChange: false,\n\t\t\tcloseOnSubmit: true\n\t\t}) as FormApplicationOptions;\n\t}\n\n\tprivate folder = SETTINGS.get<string>(TileFlattener.PREF_FOLDER);\n\tprivate source = SETTINGS.get<string>(TileFlattener.PREF_FOLDER_SOURCE);\n\n\tgetData(options: any): any {\n\t\treturn { path: this.folder }\n\t}\n\n\tasync _renderInner(data: any): Promise<JQuery<HTMLElement>> {\n\t\tconst html = await super._renderInner(data);\n\t\tconst input = html.find('input#dfce-ca-folder-path')[0] as HTMLInputElement;\n\t\thtml.find('label>button').on('click', async (event: any) => {\n\t\t\tevent.preventDefault();\n\t\t\tconst fp = new FilePicker(<any>{\n\t\t\t\tcurrent: SETTINGS.get(TileFlattener.PREF_FOLDER),\n\t\t\t\ttitle: 'DF_ARCHITECT.TileFlattener.ImageFolderTitle',\n\t\t\t\ttype: 'folder',\n\t\t\t\tfield: input,\n\t\t\t\tcallback: async (path: string) => {\n\t\t\t\t\tthis.source = fp.activeSource;\n\t\t\t\t\tthis.folder = path\n\t\t\t\t},\n\t\t\t\tbutton: event.currentTarget\n\t\t\t});\n\t\t\tawait fp.browse('');\n\t\t});\n\t\treturn html;\n\t}\n\tprotected async _updateObject(event: Event, formData?: object) {\n\t\tawait SETTINGS.set<string>(TileFlattener.PREF_FOLDER, this.folder);\n\t\tawait SETTINGS.set<string>(TileFlattener.PREF_FOLDER_SOURCE, this.source);\n\t}\n}","import ARCHITECT from \"../core/architect\";\nimport CounterUI from \"../core/CounterUI\";\nimport SETTINGS from \"../core/settings\";\n\nexport default class LightCounter {\n\tprivate static _counter = new CounterUI(0, 'Lights');\n\tstatic ready() {\n\t\tlibWrapper.register(ARCHITECT.MOD_NAME, 'LightingLayer.prototype.activate', (wrapped: Function) => {\n\t\t\twrapped();\n\t\t\tthis.updateCount();\n\t\t\tif (SETTINGS.get('General.ShowCounters'))\n\t\t\t\tthis._counter.render(true);\n\t\t}, 'WRAPPER');\n\t\tlibWrapper.register(ARCHITECT.MOD_NAME, 'LightingLayer.prototype.deactivate', (wrapped: Function) => {\n\t\t\twrapped();\n\t\t\tif (this._counter.rendered)\n\t\t\t\tthis._counter.close();\n\t\t}, 'WRAPPER');\n\t\tHooks.on('createAmbientLight', () => this.updateCount());\n\t\tHooks.on('updateAmbientLight', () => this.updateCount());\n\t\tHooks.on('deleteAmbientLight', () => this.updateCount());\n\t}\n\n\tstatic updateCount() {\n\t\tif (!SETTINGS.get('General.ShowCounters')) return;\n\t\tconst objects = canvas.lighting.objects.children as AmbientLight[];\n\t\tthis._counter.count = objects.length;\n\t\tvar normal = 0;\n\t\tvar unrestrained = 0;\n\t\tvar normalVision = 0;\n\t\tvar unrestrainedVision = 0;\n\t\tobjects.forEach(x => {\n\t\t\tconst t = (x.document.vision ? 0x10 : 0x00) | (x.document.walls ? 0x1 : 0x0);\n\t\t\tif (t == 0x01) normal++;\n\t\t\telse if (t == 0x11) normalVision++;\n\t\t\telse if (t == 0x00) unrestrained++;\n\t\t\telse if (t == 0x10) unrestrainedVision++;\n\t\t});\n\t\tthis._counter.hint = `<pre style=\"margin:0\">\n                        Normal: ${normal}\n               Provides Vision: ${normalVision}\n                  Unrestrained: ${unrestrained}\nUnrestrained & Provides Vision: ${unrestrainedVision}\n</pre>`;\n\t}\n}","import ARCHITECT from \"./architect\";\n\nexport default class CounterUI extends Application {\n\tstatic get defaultOptions(): ApplicationOptions {\n\t\treturn <ApplicationOptions>mergeObject(<Partial<ApplicationOptions>>Application.defaultOptions, {\n\t\t\ttitle: null,\n\t\t\theight: 100,\n\t\t\twidth: 100,\n\t\t\tminimizable: false,\n\t\t\tresizable: false,\n\t\t\ttemplate: `modules/df-architect/templates/counter-ui.hbs`,\n\t\t\tpopOut: false,\n\t\t});\n\t}\n\tprivate _count: number = 0;\n\tprivate _label: string = '';\n\tprivate _hint: string = '';\n\n\tstatic init() {\n\t\t// Do not wrap these calls if lib-df-buttons is enabled\n\t\tif (game.modules.get('lib-df-buttons')?.active) return;\n\t\tlibWrapper.register(ARCHITECT.MOD_NAME, 'Sidebar.prototype.expand', function (this: Sidebar, wrapped: Function) {\n\t\t\tHooks.callAll('collapseSidebarPre', this, !this._collapsed);\n\t\t\twrapped();\n\t\t}, 'WRAPPER');\n\t\tlibWrapper.register(ARCHITECT.MOD_NAME, 'Sidebar.prototype.collapse', function (this: Sidebar, wrapped: Function) {\n\t\t\tHooks.callAll('collapseSidebarPre', this, !this._collapsed);\n\t\t\twrapped();\n\t\t}, 'WRAPPER');\n\t}\n\n\tconstructor(count: number, label: string) {\n\t\tsuper();\n\t\tthis._count = count;\n\t\tthis.label = label;\n\t}\n\n\tget count(): number {\n\t\treturn this._count;\n\t}\n\tset count(value: number) {\n\t\tthis._count = value;\n\t\tthis.element.find('#count').val(value);\n\t}\n\tget label(): string {\n\t\treturn this._label;\n\t}\n\tset label(value: string) {\n\t\tthis._label = value;\n\t\tthis.element.find('#label').val(value);\n\t}\n\tget hint(): string {\n\t\treturn this._hint;\n\t}\n\tset hint(value: string) {\n\t\tthis._hint = value;\n\t}\n\n\tgetData(options?: any): any {\n\t\treturn {\n\t\t\tcount: this._count,\n\t\t\tlabel: this._label\n\t\t};\n\t}\n\n\t_injectHTML(html: JQuery) {\n\t\tdocument.body.appendChild(html[0]);\n\t\tthis._element = html;\n\t\tconst width = html[0].offsetWidth;\n\t\thtml.css('width', '0');\n\t\thtml.animate({\n\t\t\tpadding: '.5em 1em',\n\t\t\twidth: `${width}px`\n\t\t}, 200, () => {\n\t\t\thtml.css('width', '');\n\t\t});\n\t}\n\n\tasync _render(force = false, options = {}): Promise<void> {\n\t\tHooks.on('collapseSidebarPre', this._handleSidebarCollapse.bind(this));\n\t\tawait super._render(force, options);\n\t\tif ((<any>ui.sidebar)._collapsed) {\n\t\t\tthis.element.css('right', '35px');\n\t\t}\n\n\t\t/**\n\t\t * This catches if the FPS Meter module is enabled and displaying its counter\n\t\t */\n\t\tif (game.modules.get('fpsmeter')?.active) {\n\t\t\tconst fpsCounter = document.querySelector<HTMLElement>('div.fpsCounter');\n\t\t\tconst fpsT = fpsCounter.offsetTop;\n\t\t\tconst fpsB = fpsT + fpsCounter.offsetHeight;\n\t\t\tconst cuiT = this.element[0].offsetTop - 5; // Add a 5px margin to the top\n\t\t\tconst cuiH = this.element[0].offsetHeight + 5; // account for margin\n\t\t\t// If we are touching, push us down to be 5px below the counter\n\t\t\tif ((fpsT <= cuiT && fpsB >= cuiT)\n\t\t\t\t|| (fpsT >= cuiT && fpsT <= cuiH)\n\t\t\t\t|| (fpsB >= cuiT && fpsB <= cuiH)) {\n\t\t\t\tthis.element[0].style.top = `${fpsB + 5}px`;\n\t\t\t}\n\t\t}\n\t\t/**\n\t\t * This catches the existance of the [Library: DF Module Buttons] module\n\t\t * and places ourselves at the bottom of the Sidebar instead of the top.\n\t\t */\n\t\tif (game.modules.get('lib-df-buttons')?.active) {\n\t\t\tthis.element[0].style.top = 'unset';\n\t\t\tthis.element[0].style.bottom = '8px';\n\t\t}\n\n\t\t// Add listener for activating the tooltip\n\t\tthis.element.on('pointerenter', (e: any) => ((<any>game).tooltip as TooltipManager).activate(e.target, { text: this._hint, direction: \"LEFT\" }));\n\t}\n\n\tclose(options: Application.CloseOptions = {}): Promise<void> {\n\t\tHooks.off('collapseSidebarPre', this._handleSidebarCollapse.bind(this));\n\t\t/**********************************/\n\t\t/****** COPIED FROM FOUNDRY *******/\n\t\t/**********************************/\n\t\tconst states = Application.RENDER_STATES;\n\t\tif (!options.force && ![states.RENDERED, states.ERROR].includes(<any>this._state)) return undefined;\n\t\tthis._state = states.CLOSING;\n\n\t\t// Get the element\n\t\tlet el = this.element;\n\t\tif (!el) return <any>(this._state = states.CLOSED);\n\t\tel.css({ minHeight: 0 });\n\n\t\t// Dispatch Hooks for closing the base and subclass applications\n\t\tfor (let cls of (<any>this.constructor)._getInheritanceChain()) {\n\n\t\t\t/**\n\t\t\t * A hook event that fires whenever this Application is closed.\n\t\t\t * @function closeApplication\n\t\t\t * @memberof hookEvents\n\t\t\t * @param {Application} app                     The Application instance being closed\n\t\t\t * @param {jQuery[]} html                       The application HTML when it is closed\n\t\t\t */\n\t\t\tHooks.call(`close${cls.name}`, this, el);\n\t\t}\n\t\t/**********************************/\n\t\t/******* FOUNDRY CODE END *********/\n\t\t/**********************************/\n\n\t\t// Animate closing the element\n\t\treturn new Promise<void>(resolve => {\n\t\t\tel.animate({\n\t\t\t\tpadding: '.5em 0',\n\t\t\t\twidth: '0'\n\t\t\t}, 200, () => {\n\t\t\t\tel.remove();\n\t\t\t\t// Clean up data\n\t\t\t\tthis._element = null;\n\t\t\t\tdelete ui.windows[this.appId];\n\t\t\t\tthis._minimized = false;\n\t\t\t\tthis._scrollPositions = null;\n\t\t\t\tthis._state = states.CLOSED;\n\t\t\t\tresolve();\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate _handleSidebarCollapse(sideBar: Sidebar, collapsed: boolean) {\n\t\tif (collapsed) {\n\t\t\tthis.element.delay(250).animate({ right: '35px' }, 150);\n\t\t} else {\n\t\t\tthis.element.animate({ right: '305px' }, 150);\n\t\t}\n\t}\n}","import ARCHITECT from \"../core/architect\";\nimport CounterUI from \"../core/CounterUI\";\nimport SETTINGS from \"../core/settings\";\n\nexport default class WallsCounter {\n\tprivate static _counter = new CounterUI(0, 'Walls');\n\tstatic ready() {\n\t\tlibWrapper.register(ARCHITECT.MOD_NAME, 'WallsLayer.prototype.activate', (wrapped: Function) => {\n\t\t\twrapped();\n\t\t\tthis.updateCount();\n\t\t\tif (SETTINGS.get('General.ShowCounters'))\n\t\t\t\tthis._counter.render(true);\n\t\t}, 'WRAPPER');\n\t\tlibWrapper.register(ARCHITECT.MOD_NAME, 'WallsLayer.prototype.deactivate', (wrapped: Function) => {\n\t\t\twrapped();\n\t\t\tif (this._counter.rendered)\n\t\t\t\tthis._counter.close();\n\t\t}, 'WRAPPER');\n\t\tHooks.on('createWall', () => this.updateCount());\n\t\tHooks.on('deleteWall', () => this.updateCount());\n\t\tHooks.on('updateWall', () => this.updateCount());\n\t}\n\n\tstatic updateCount() {\n\t\tif (!SETTINGS.get('General.ShowCounters')) return;\n\t\tconst objects = canvas.walls.objects.children as Wall[];\n\t\tthis._counter.count = objects.length;\n\t\tvar doors = 0;\n\t\tvar secretDoors = 0;\n\t\tvar moves = 0;\n\t\tvar lightBlock = 0;\n\t\tvar lightLimit = 0;\n\t\tvar sightBlock = 0;\n\t\tvar sightLimit = 0;\n\t\tvar soundBlock = 0;\n\t\tvar soundLimit = 0;\n\t\tobjects.forEach(x => {\n\t\t\tif (x.document.door == foundry.CONST.WALL_DOOR_TYPES.DOOR) doors++;\n\t\t\tif (x.document.door == foundry.CONST.WALL_DOOR_TYPES.SECRET) secretDoors++;\n\t\t\tif (x.document.move == foundry.CONST.WALL_MOVEMENT_TYPES.NORMAL) moves++;\n\t\t\tif (x.document.light == foundry.CONST.WALL_SENSE_TYPES.NORMAL) lightBlock++;\n\t\t\tif (x.document.light == foundry.CONST.WALL_SENSE_TYPES.LIMITED) lightLimit++;\n\t\t\tif (x.document.sight == foundry.CONST.WALL_SENSE_TYPES.NORMAL) sightBlock++;\n\t\t\tif (x.document.sight == foundry.CONST.WALL_SENSE_TYPES.LIMITED) sightLimit++;\n\t\t\tif (x.document.sound == foundry.CONST.WALL_SENSE_TYPES.NORMAL) soundBlock++;\n\t\t\tif (x.document.sound == foundry.CONST.WALL_SENSE_TYPES.LIMITED) soundLimit++;\n\t\t});\n\t\tthis._counter.hint = `<pre style=\"margin:0\">\n         Doors: ${doors}\n  Secret Doors: ${secretDoors}<br>\n Move Blocking: ${moves}<br>\nLight Blocking: ${lightBlock}\nLight Limiting: ${lightLimit}<br>\nSight Blocking: ${sightBlock}\nSight Limiting: ${sightLimit}<br>\nSound Blocking: ${soundBlock}\nSound Limiting: ${soundLimit}\n</pre>`;\n\t}\n}","import ARCHITECT from \"../core/architect\";\nimport CounterUI from \"../core/CounterUI\";\nimport SETTINGS from \"../core/settings\";\n\nexport default class TileCounter {\n\tprivate static _counter = new CounterUI(0, 'Tiles');\n\tstatic ready() {\n\t\tlibWrapper.register(ARCHITECT.MOD_NAME, 'TilesLayer.prototype.activate', (wrapped: Function) => {\n\t\t\twrapped();\n\t\t\tthis.updateCount();\n\t\t\tif (SETTINGS.get('General.ShowCounters'))\n\t\t\t\tthis._counter.render(true);\n\t\t}, 'WRAPPER');\n\t\tlibWrapper.register(ARCHITECT.MOD_NAME, 'TilesLayer.prototype.deactivate', (wrapped: Function) => {\n\t\t\twrapped();\n\t\t\tif (this._counter.rendered && canvas.activeLayer?.name !== 'ForegroundLayer')\n\t\t\t\tthis._counter.close();\n\t\t}, 'WRAPPER');\n\t\tHooks.on('createTile', this.updateCount.bind(this));\n\t\tHooks.on('deleteTile', this.updateCount.bind(this));\n\t\tHooks.on('updateTile', this.updateCount.bind(this));\n\t}\n\n\tstatic updateCount() {\n\t\tif (!SETTINGS.get('General.ShowCounters')) return;\n\t\tconst children = (canvas.tiles.objects.children as Tile[]).map(x => x.document.overhead);\n\t\tthis._counter.count = children.length;\n\t\tthis._counter.hint = `<pre style=\"margin:0\">\nFloors: ${children.filter(x => !x).length}\n Roofs: ${children.filter(x => x).length}\n</pre>`;\n\t}\n}","import ARCHITECT from \"../core/architect\";\nimport CounterUI from \"../core/CounterUI\";\nimport SETTINGS from \"../core/settings\";\n\nexport default class SoundCounter {\n\tprivate static _counter = new CounterUI(0, 'Sounds');\n\tstatic ready() {\n\t\tlibWrapper.register(ARCHITECT.MOD_NAME, 'SoundsLayer.prototype.activate', (wrapped: Function) => {\n\t\t\twrapped();\n\t\t\tthis.updateCount();\n\t\t\tif (SETTINGS.get('General.ShowCounters'))\n\t\t\t\tthis._counter.render(true);\n\t\t}, 'WRAPPER');\n\t\tlibWrapper.register(ARCHITECT.MOD_NAME, 'SoundsLayer.prototype.deactivate', (wrapped: Function) => {\n\t\t\twrapped();\n\t\t\tif (this._counter.rendered)\n\t\t\t\tthis._counter.close();\n\t\t}, 'WRAPPER');\n\t\tHooks.on('createAmbientSound', () => this.updateCount());\n\t\tHooks.on('deleteAmbientSound', () => this.updateCount());\n\t\tHooks.on('updateAmbientSound', () => this.updateCount());\n\t}\n\n\tstatic updateCount() {\n\t\tif (!SETTINGS.get('General.ShowCounters')) return;\n\t\tconst objects = canvas.sounds.objects.children as AmbientSound[];\n\t\tthis._counter.count = objects.length;\n\t\tthis._counter.hint = `<pre style=\"margin:0\">\n      Normal Sounds: ${objects.filter(x => x.document.walls).length}\nUnrestrained Sounds: ${objects.filter(x => !x.document.walls).length}\n</pre>`;\n\t}\n}","import ARCHITECT from \"../core/architect\";\nimport SETTINGS from \"../core/settings\";\n\nexport default class ShowLayerControls {\n\tprivate static readonly PREF_WALLS = 'ShowLayerControls.WallsLayer';\n\tprivate static readonly PREF_LIGHT = 'ShowLayerControls.LightingLayer';\n\tprivate static readonly PREF_SOUND = 'ShowLayerControls.SoundsLayer';\n\tprivate static _ready = false;\n\n\tprivate static get showWalls(): boolean {\n\t\treturn game.user.isGM && SETTINGS.get(ShowLayerControls.PREF_WALLS);\n\t}\n\tprivate static get showLights(): boolean {\n\t\treturn game.user.isGM && SETTINGS.get(ShowLayerControls.PREF_LIGHT);\n\t}\n\tprivate static get showSounds(): boolean {\n\t\treturn game.user.isGM && SETTINGS.get(ShowLayerControls.PREF_SOUND);\n\t}\n\n\tprivate static async toggleLayer(layer: string, setting: string, toggled: boolean) {\n\t\tawait SETTINGS.set(setting, toggled);\n\t\tconst control = ui.controls.controls.find(x => x.layer == layer);\n\t\tif (toggled)\n\t\t\tcontrol.icon += ' df-arch-layervisible';\n\t\telse if (control.icon.indexOf(' df-arch-layervisible') > 0)\n\t\t\tcontrol.icon = control.icon.substring(0, control.icon.indexOf(' df-arch-layervisible'));\n\t\tsetTimeout(() => ui.controls.render(), 100);\n\t}\n\n\tstatic init() {\n\t\tSETTINGS.register(this.PREF_WALLS, { config: false, scope: 'client', type: Boolean, default: false });\n\t\tSETTINGS.register(this.PREF_LIGHT, { config: false, scope: 'client', type: Boolean, default: false });\n\t\tSETTINGS.register(this.PREF_SOUND, { config: false, scope: 'client', type: Boolean, default: false });\n\n\t\tHooks.on('getSceneControlButtons', (controls: SceneControl[]) => {\n\t\t\tif (!game.user.isGM) return;\n\n\t\t\tconst walls = controls.find(x => x.name === 'walls');\n\t\t\tconst lighting = controls.find(x => x.name === 'lighting');\n\t\t\tconst sounds = controls.find(x => x.name === 'sounds');\n\n\t\t\tif (this.showWalls)\n\t\t\t\twalls.icon += ' df-arch-layervisible';\n\t\t\twalls.tools.unshift({\n\t\t\t\ticon: 'fas fa-eye', name: 'flatten', toggle: true,\n\t\t\t\tactive: SETTINGS.get(this.PREF_WALLS),\n\t\t\t\ttitle: 'DF_ARCHITECT.ShowLayerControls.Walls',\n\t\t\t\tonClick: toggled => this.toggleLayer('walls', ShowLayerControls.PREF_WALLS, toggled)\n\t\t\t});\n\t\t\tif (this.showLights)\n\t\t\t\tlighting.icon += ' df-arch-layervisible';\n\t\t\tlighting.tools.unshift({\n\t\t\t\ticon: 'fas fa-eye', name: 'flatten', toggle: true,\n\t\t\t\tactive: SETTINGS.get(this.PREF_LIGHT),\n\t\t\t\ttitle: 'DF_ARCHITECT.ShowLayerControls.Lights',\n\t\t\t\tonClick: toggled => this.toggleLayer('lighting', ShowLayerControls.PREF_LIGHT, toggled)\n\t\t\t});\n\t\t\tif (this.showSounds)\n\t\t\t\tsounds.icon += ' df-arch-layervisible';\n\t\t\tsounds.tools.unshift({\n\t\t\t\ticon: 'fas fa-eye', name: 'flatten', toggle: true,\n\t\t\t\tactive: SETTINGS.get(this.PREF_SOUND),\n\t\t\t\ttitle: 'DF_ARCHITECT.ShowLayerControls.Sounds',\n\t\t\t\tonClick: toggled => this.toggleLayer('sounds', ShowLayerControls.PREF_SOUND, toggled)\n\t\t\t});\n\t\t});\n\n\t\tHooks.on('updateWall', () => {\n\t\t\tif (!game.user.isGM) return;\n\t\t\tconst refreshLayer = (layer: any) => {\n\t\t\t\tlayer._active = true;\n\t\t\t\tlayer.objects.children.forEach((x: any) => { x.updateSource(); x.refresh() });\n\t\t\t\tlayer._active = false;\n\t\t\t}\n\t\t\tif (this.showLights)\n\t\t\t\trefreshLayer(canvas.lighting);\n\t\t\tif (this.showSounds)\n\t\t\t\trefreshLayer(canvas.sounds);\n\t\t});\n\n\t\tHooks.on('deleteWall', () => {\n\t\t\tif (!game.user.isGM) return;\n\t\t\tconst refreshLayer = (layer: any) => {\n\t\t\t\tlayer._active = true;\n\t\t\t\tlayer.objects.children.forEach((x: any) => { x.updateSource(); x.refresh() });\n\t\t\t\tlayer._active = false;\n\t\t\t}\n\t\t\tif (this.showLights)\n\t\t\t\trefreshLayer(canvas.lighting);\n\t\t\tif (this.showSounds)\n\t\t\t\trefreshLayer(canvas.sounds);\n\t\t});\n\t}\n\n\tstatic ready() {\n\t\tthis._ready = true;\n\t\tconst walls = this.showWalls;\n\t\tconst light = this.showLights;\n\t\tconst sound = this.showSounds;\n\t\tif (walls) { canvas.walls.activate(); canvas.walls.deactivate(); }\n\t\tif (light) { canvas.lighting.activate(); canvas.lighting.deactivate(); }\n\t\tif (sound) { canvas.sounds.activate(); canvas.sounds.deactivate(); }\n\t\tif (walls || light || sound)\n\t\t\tsetTimeout(() => canvas.tokens.activate(), 1);\n\n\t\tif (!game.user.isGM) return;\n\t\tlibWrapper.register(ARCHITECT.MOD_NAME, 'PlaceablesLayer.prototype.deactivate', this.PlaceablesLayer_deactivate, 'MIXED');\n\t}\n\n\tprivate static AmbientLight_refresh(this: AmbientLight) {\n\t\t/*****************************************************************************************/\n\t\t/************* CODE COPIED FROM foundry.js AmbientLight.prototype._refresh() *************/\n\t\t/*****************************************************************************************/\n\t\t// const active = this.layer.active; //! DF: Disabled Active Check\n\n\t\t// Update position and FOV\n\t\tconst { x, y } = this.document;\n\t\tthis.position.set(x, y);\n\t\t(this as any).field.position.set(-x, -y);\n\n\t\t// Draw the light preview field\n\t\tconst l = (this as any).field.clear();\n\n\t\t//! DF: Disabled Active Check\n\t\tif (/*active &&*/ this.source.los) l.lineStyle(2, 0xEEEEEE, 0.4).drawShape(this.source.los);\n\n\t\t// Update control icon appearance\n\t\tthis.refreshControl();\n\t\t/*****************************************************************************************/\n\t\t/************************************* CODE COPY END *************************************/\n\t\t/*****************************************************************************************/\n\n\t\tthis.controlIcon.visible = true;\n\t}\n\n\tprivate static PlaceablesLayer_deactivate(this: PlaceablesLayer<any>, wrapped: Function) {\n\t\tif (!ShowLayerControls._ready) return wrapped();\n\t\tvar toggled: boolean = false;\n\t\tswitch (this.name) {\n\t\t\tcase 'WallsLayer':\n\t\t\t\ttoggled = ShowLayerControls.showWalls;\n\t\t\t\tbreak;\n\t\t\tcase 'LightingLayer':\n\t\t\t\ttoggled = ShowLayerControls.showLights;\n\t\t\t\tbreak;\n\t\t\tcase 'SoundsLayer':\n\t\t\t\ttoggled = ShowLayerControls.showSounds;\n\t\t\t\tbreak;\n\t\t}\n\t\t// If we are not on one of our layers, or we are not keeping the controls on\n\t\tif (!toggled) return wrapped();\n\t\tInteractionLayer.prototype.deactivate.bind(this)();\n\t\tthis.objects.visible = true;\n\t\tif (this.preview) this.preview.removeChildren();\n\n\t\tswitch (this.name) {\n\t\t\tcase 'LightingLayer':\n\t\t\t\t(this.objects.children as AmbientLight[]).forEach(x => ShowLayerControls.AmbientLight_refresh.apply(x));\n\t\t\tcase 'SoundsLayer':\n\t\t\t\t(this.objects.children as (AmbientLight | AmbientSound)[]).forEach(x => x.controlIcon.visible = true);\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn this;\n\t}\n}","import { TileData } from \"@league-of-foundry-developers/foundry-vtt-types/src/foundry/common/data/module.mjs\";\nimport SETTINGS from \"../core/settings\";\n\nfunction reduce(numerator: number, denominator: number) {\n\tvar a = numerator;\n\tvar b = denominator;\n\tvar c;\n\twhile (b) {\n\t\tc = a % b; a = b; b = c;\n\t}\n\treturn [numerator / a, denominator / a];\n}\n\nexport default class TileConfigExt {\n\tprivate static readonly PREF_SHOW_CONTROLS = 'TileConfigExt.ShowControls';\n\tprivate static _previewImageHTML = `<section class=\"df-arch-tile-config\">\n\t<img id=\"img-preview\" style=\"display: none;\">\n\t<video id=\"anim-preview\" style=\"display: none;\" autoplay muted loop></video>\n\t<output id=\"img-data\" />\n</section>`;\n\n\tstatic init() {\n\t\tSETTINGS.register(this.PREF_SHOW_CONTROLS, {\n\t\t\tname: 'DF_ARCHITECT.TileConfigExt.SettingControlsName',\n\t\t\thint: 'DF_ARCHITECT.TileConfigExt.SettingControlsHint',\n\t\t\tconfig: true,\n\t\t\tscope: 'world',\n\t\t\ttype: Boolean,\n\t\t\tdefault: true\n\t\t});\n\t\tHooks.on('renderTileConfig', this.updateTileConfig.bind(this));\n\t}\n\n\tprivate static updateTileConfig(config: TileConfig, html: JQuery<HTMLElement>, data: TileData) {\n\t\t// Update the image preview\n\t\tconst imgInput = html.find('input[name=\"texture.src\"]');\n\t\timgInput.parent().parent().before($(this._previewImageHTML));\n\t\timgInput.on('change', () => this.updateImagePreview(config));\n\t\tthis.updateImagePreview(config);\n\t\t// Add the ratio scale buttons\n\t\tconst horTitle = 'Scale the width to the aspect ratio relative to the current height'.localize();\n\t\tconst verTitle = 'Scale the height to the aspect ratio relative to the current width'.localize();\n\t\tconst width = html.find('input[name=\"width\"]');\n\t\tconst height = html.find('input[name=\"height\"]');\n\t\twidth.after($(`<button class=\"df-arch-scale\" title=\"${horTitle}\"><i class=\"fas fa-arrows-alt-h\"></i></button>`)\n\t\t\t.on('click', e => {\n\t\t\t\te.preventDefault();\n\t\t\t\tconst ratio = (<any>config).ratio.num / (<any>config).ratio.den;\n\t\t\t\twidth.val(Math.round(parseInt(height.val() as string) * ratio))\n\t\t\t\t\t.trigger('change');\n\t\t\t}));\n\t\theight.after($(`<button class=\"df-arch-scale\" title=\"${verTitle}\"><i class=\"fas fa-arrows-alt-v\"></i></button>`)\n\t\t\t.on('click', e => {\n\t\t\t\te.preventDefault();\n\t\t\t\tconst ratio = (<any>config).ratio.num / (<any>config).ratio.den;\n\t\t\t\theight.val(Math.round(parseInt(width.val() as string) / ratio))\n\t\t\t\t\t.trigger('change');\n\t\t\t}));\n\t\tconfig.setPosition({ left: (<Application.Position>config.position).left, top: (<Application.Position>config.position).top });\n\t}\n\n\tprivate static updateImagePreview(config: TileConfig) {\n\t\tif (config.element.find('input[name=\"img\"]').val() === \"\") return;\n\t\tconst labelDimens = 'DF_ARCHITECT.TileConfigExt.LabelDimens'.localize();\n\t\tconst labelAspect = 'DF_ARCHITECT.TileConfigExt.LabelAspect'.localize();\n\t\tconst imgPreview = config.element.find('#img-preview')[0] as HTMLImageElement;\n\t\tconst animPreview = config.element.find('#anim-preview')[0] as HTMLVideoElement;\n\t\tconst info = config.element.find('#img-data')[0] as HTMLOutputElement;\n\t\tconst source = config.element.find('input[name=\"texture.src\"]').val() as string;\n\t\tif (VideoHelper.hasVideoExtension(source)) {\n\t\t\t$(imgPreview).hide();\n\t\t\t$(animPreview).show();\n\t\t\tanimPreview.controls = SETTINGS.get(this.PREF_SHOW_CONTROLS);\n\t\t\tanimPreview.addEventListener('loadedmetadata', () => {\n\t\t\t\tconst [num, den] = reduce(animPreview.videoWidth, animPreview.videoHeight);\n\t\t\t\t(<any>config).ratio = { num, den };\n\t\t\t\tinfo.innerHTML = `<b>${labelDimens}</b><br>${animPreview.videoWidth}px x ${animPreview.videoHeight}px<br><br><b>${labelAspect}</b><br>${num}:${den}`;\n\t\t\t});\n\t\t\tanimPreview.src = source;\n\t\t\tanimPreview.load();\n\t\t} else {\n\t\t\t$(imgPreview).show();\n\t\t\t$(animPreview).hide();\n\t\t\timgPreview.src = source;\n\t\t\tconst image = new Image();\n\t\t\timage.onload = () => {\n\t\t\t\tconst [num, den] = reduce(image.width, image.height);\n\t\t\t\t(<any>config).ratio = { num, den };\n\t\t\t\tinfo.innerHTML = `<b>${labelDimens}</b><br>${image.width}px x ${image.height}px<br><br><b>${labelAspect}</b><br>${num}:${den}`;\n\t\t\t};\n\t\t\timage.src = imgPreview.src;\n\t\t}\n\t}\n}","import { WallData } from \"@league-of-foundry-developers/foundry-vtt-types/src/foundry/common/data/data.mjs\";\nimport SETTINGS from \"../core/settings\";\n\n\ninterface WallGap {\n\twallA: Wall;\n\twallB: Wall;\n\tdistanceSquared: number;\n\tmidpoint: { x: number, y: number };\n}\n\nexport default class WallGapFiller {\n\tprivate static readonly PREF_GAP_THRESHOLD = 'WallGapFiller.GapThreshold';\n\n\tprivate static get threshold(): number { return SETTINGS.get(this.PREF_GAP_THRESHOLD); }\n\n\tstatic init() {\n\t\tHooks.on('getSceneControlButtons', (controls: SceneControl[]) => {\n\t\t\tconst wallsControls = controls.find(x => x.name === 'walls');\n\t\t\twallsControls.tools.splice(wallsControls.tools.findIndex(x => x.name === 'join') + 1, 0, {\n\t\t\t\ticon: 'fas fa-vector-square',\n\t\t\t\tname: 'wall-gaps',\n\t\t\t\ttitle: 'DF_ARCHITECT.WallGapFiller.ToolButtonLabel',\n\t\t\t\tbutton: true,\n\t\t\t\tvisible: game.user.isGM,\n\t\t\t\tonClick: this._fillGaps.bind(this)\n\t\t\t});\n\t\t});\n\t}\n\n\tstatic ready() {\n\t\tSETTINGS.register(this.PREF_GAP_THRESHOLD, {\n\t\t\tscope: 'world',\n\t\t\tconfig: true,\n\t\t\tdefault: 5,\n\t\t\ttype: Number,\n\t\t\tname: 'DF_ARCHITECT.WallGapFiller.SettingName',\n\t\t\thint: 'DF_ARCHITECT.WallGapFiller.SettingHint',\n\t\t});\n\t}\n\n\tstatic _calculateWallGap(wallAData: WallData, wallBData: WallData): Partial<WallGap> {\n\t\tconst wallA = wallAData.c;\n\t\tconst wallB = wallBData.c;\n\n\t\t// Compare A1 to B1\n\t\tconst ab1: [number, [number, number]] = [((wallA[0] - wallB[0]) ** 2) + ((wallA[1] - wallB[1]) ** 2), [wallA[0] + wallB[0], wallA[1] + wallB[1]]];\n\t\t// Compare A2 to B2\n\t\tconst ab2: [number, [number, number]] = [((wallA[2] - wallB[2]) ** 2) + ((wallA[3] - wallB[3]) ** 2), [wallA[2] + wallB[2], wallA[3] + wallB[3]]];\n\t\t// Compare A1 to B2\n\t\tconst ab3: [number, [number, number]] = [((wallA[0] - wallB[2]) ** 2) + ((wallA[1] - wallB[3]) ** 2), [wallA[0] + wallB[2], wallA[1] + wallB[3]]];\n\t\t// Compare A2 to B1\n\t\tconst ab4: [number, [number, number]] = [((wallA[2] - wallB[0]) ** 2) + ((wallA[3] - wallB[1]) ** 2), [wallA[2] + wallB[0], wallA[3] + wallB[1]]];\n\n\t\tlet final: [number, [number, number]];\n\t\t// Detect which endpoint pair is the closest of the 4 wall endpoint pairings\n\t\tif (ab1[0] < ab2[0] && ab1[0] < ab3[0] && ab1[0] < ab4[0])\n\t\t\tfinal = ab1;\n\t\telse if (ab2[0] < ab3[0] && ab2[0] < ab4[0])\n\t\t\tfinal = ab2;\n\t\telse if (ab3[0] < ab4[0])\n\t\t\tfinal = ab3;\n\t\telse\n\t\t\tfinal = ab4;\n\t\t// return the midpoint between the closest endpoints, and their squared distance\n\t\treturn {\n\t\t\tmidpoint: {\n\t\t\t\tx: final[1][0] / 2,\n\t\t\t\ty: final[1][1] / 2\n\t\t\t}, distanceSquared: final[0]\n\t\t};\n\t}\n\n\tprivate static async _findWallGaps(): Promise<WallGap[]> {\n\t\treturn new Promise(res => {\n\t\t\tconst walls = <Wall[]>canvas.walls.objects.children;\n\t\t\tconst wallGaps: WallGap[] = [];\n\t\t\tconst thresholdSquared = this.threshold ** 2;\n\t\t\tlet wallGap: Partial<WallGap>;\n\t\t\t// O(n^2) Not exactly a true depiction. In reality, the number of iterations will equal [ n(n+1) / 2 ].\n\t\t\t// Basically each time we complete a comparison of one item, that item will be ignored for all future, so our\n\t\t\t// list decreases in size by 1 on each iteration of the outer loop\n\t\t\tfor (let a = 0; a < walls.length; a++) {\n\t\t\t\t// Our list of comparison grow shorter for each wall we check\n\t\t\t\tfor (let b = a + 1; b < walls.length; b++) {\n\t\t\t\t\t// Calculate the smallest gap between the two walls\n\t\t\t\t\twallGap = this._calculateWallGap(walls[a].data, walls[b].data);\n\t\t\t\t\t// If the distance is too far, or they are overlapped perfectly, ignore the result\n\t\t\t\t\tif (wallGap.distanceSquared > thresholdSquared || wallGap.distanceSquared === 0) continue;\n\t\t\t\t\t// Add the wall references and add the gap to the list\n\t\t\t\t\twallGap.wallA = walls[a];\n\t\t\t\t\twallGap.wallB = walls[b];\n\t\t\t\t\twallGaps.push(<any>wallGap);\n\t\t\t\t}\n\t\t\t}\n\t\t\tres(wallGaps);\n\t\t});\n\t}\n\n\tprivate static async _fillGaps() {\n\t\t// Disable interaction with canvas\n\t\tconst overlayElement = $(`<div id=\"dfarch-temp-overlay\" style=\"background:#444c\"><h1>${'DF_ARCHITECT.WallGapFiller.DetectGapsLabel'.localize()}</h1><div class=\"dfarch-dual-ring\"></div></div>`);\n\t\toverlayElement.appendTo(document.body);\n\t\t// Detect all the wall gaps, this can take some noticeable time if there are 100+ walls\n\t\tconst wallGaps = await this._findWallGaps();\n\t\toverlayElement.remove();\n\n\t\t// If there are no wall gaps, notify the user and exit\n\t\tif (wallGaps.length === 0) {\n\t\t\tDialog.prompt({\n\t\t\t\tcallback: () => { },\n\t\t\t\tcontent: `<p>${'DF_ARCHITECT.WallGapFiller.NoGaps'.localize()}</p>`,\n\t\t\t\ttitle: 'DF_ARCHITECT.WallGapFiller.DialogTitle'.localize()\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\t// Draw a little circle around each wall gap\n\t\tconst graphics = new PIXI.Graphics();\n\t\tcanvas.walls.addChild(graphics);\n\t\tgraphics.lineStyle(3, 0x00FF00, 0.7);\n\t\tgraphics.beginFill(0, 0);\n\t\tfor (const gap of wallGaps) {\n\t\t\tgraphics.drawCircle(gap.midpoint.x, gap.midpoint.y, (Math.sqrt(gap.distanceSquared) / 2) + 8);\n\t\t}\n\t\tgraphics.endFill();\n\n\t\t// Ask the user if they would like to close the wall gaps\n\t\tconst decision = await Dialog.confirm({\n\t\t\ttitle: 'DF_ARCHITECT.WallGapFiller.DialogTitle'.localize(),\n\t\t\tcontent: `<p>${'DF_ARCHITECT.WallGapFiller.GapsDetected'.localize().replace('{count}', wallGaps.length.toString())}</p>`,\n\t\t\tdefaultYes: true\n\t\t});\n\n\t\tif (decision) {\n\t\t\tlet d1 = 0;\n\t\t\tlet d2 = 0;\n\t\t\t// Display Progress Bar\n\t\t\tSceneNavigation.displayProgressBar({\n\t\t\t\tlabel: 'DF_ARCHITECT.WallGapFiller.ProgressLabel'.localize().replace('{0}', '0').replace('{1}', wallGaps.length.toString()),\n\t\t\t\tpct: 0\n\t\t\t});\n\t\t\tlet count = 0;\n\t\t\t// Iterate over each gap and close them\n\t\t\tfor (const gap of wallGaps) {\n\t\t\t\t// Calculate the new Wall A data and update it\n\t\t\t\td1 = (gap.wallA.data.c[0] - gap.midpoint.x) ** 2 + (gap.wallA.data.c[1] - gap.midpoint.y) ** 2;\n\t\t\t\td2 = (gap.wallA.data.c[2] - gap.midpoint.x) ** 2 + (gap.wallA.data.c[3] - gap.midpoint.y) ** 2;\n\t\t\t\tif (d1 < d2)\n\t\t\t\t\tawait gap.wallA.document.update({ c: [gap.midpoint.x, gap.midpoint.y, gap.wallA.data.c[2], gap.wallA.data.c[3]] });\n\t\t\t\telse\n\t\t\t\t\tawait gap.wallA.document.update({ c: [gap.wallA.data.c[0], gap.wallA.data.c[1], gap.midpoint.x, gap.midpoint.y] });\n\t\t\t\t// Calculate the new Wall B data and update it\n\t\t\t\td1 = (gap.wallB.data.c[0] - gap.midpoint.x) ** 2 + (gap.wallB.data.c[1] - gap.midpoint.y) ** 2;\n\t\t\t\td2 = (gap.wallB.data.c[2] - gap.midpoint.x) ** 2 + (gap.wallB.data.c[3] - gap.midpoint.y) ** 2;\n\t\t\t\tif (d1 < d2)\n\t\t\t\t\tawait gap.wallB.document.update({ c: [gap.midpoint.x, gap.midpoint.y, gap.wallB.data.c[2], gap.wallB.data.c[3]] });\n\t\t\t\telse\n\t\t\t\t\tawait gap.wallB.document.update({ c: [gap.wallB.data.c[0], gap.wallB.data.c[1], gap.midpoint.x, gap.midpoint.y] });\n\t\t\t\t// Update progress bar\n\t\t\t\tSceneNavigation.displayProgressBar({\n\t\t\t\t\tlabel: 'DF_ARCHITECT.WallGapFiller.ProgressLabel'.localize().replace('{0}', (++count).toString()).replace('{1}', wallGaps.length.toString()),\n\t\t\t\t\tpct: (count / wallGaps.length) * 100\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\t// Remove and destroy the graphics object containing the green circles\n\t\tcanvas.walls.removeChild(graphics);\n\t\tgraphics.destroy({ children: true });\n\t}\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","\ndeclare global {\n\tinterface LenientGlobalVariableTypes {\n\t\tgame: never; // the type doesn't matter\n\t\tcanvas: never;\n\t}\n}\n\nimport DECLARATIONS from './core/declarations'; DECLARATIONS();\nimport SETTINGS from './core/settings';\nimport ARCHITECT from \"./core/architect\";\nSETTINGS.init(ARCHITECT.MOD_NAME);\n\nimport PIXIAppOverride from './general/PIXIAppOverride';\nimport LayerShortcuts from \"./general/LayerShortcuts\";\nimport AltGridSnap from './general/AltGridSnap';\nimport WallCtrlInvert from './walls/WallCtrlInvert';\nimport WallShortcuts from './walls/WallShortcuts';\nimport WallJoinSplit from './walls/WallJoinSplit';\nimport AltLightOrigin from './lights/AltLightOrigin';\nimport { QuickColourPicker } from './general/QuickColourPicker';\nimport CaptureGameScreen from './general/CaptureGameScreen';\nimport { LightTemplateManager, LightingLayerOverride } from './lights/LightTemplate';\nimport WallChangeType from './walls/WallChangeType';\nimport WallAltDrop from './walls/WallAltDrop';\nimport AltLightInverted from './lights/AltLightInverted';\nimport WallDirections from './walls/WallDirections';\nimport DataMigration from './core/migration';\nimport TileFlattener from './tiles/TileFlattener';\nimport LightCounter from './lights/LightCounter';\nimport WallsCounter from './walls/WallCounter';\nimport TileCounter from './tiles/TileCounter';\nimport SoundCounter from './sounds/SoundCounter';\nimport ShowLayerControls from './general/ShowLayerControls';\nimport TileConfigExt from './tiles/TileConfigExt';\nimport CounterUI from './core/CounterUI';\nimport WallGapFiller from './walls/WallGapFiller';\n\nHooks.once('init', function () {\n\tif (!game.modules.get('lib-wrapper')?.active) return;\n\tif (!game.modules.get('colorsettings')?.active) return;\n\n\tARCHITECT.DrawArchitectGraphicToConsole();\n\ttry { DataMigration.init() } catch (error) { console.error(error) }\n\t// WARNING! ShowLayerControls needs to come before AltGridSnap\n\ttry { ShowLayerControls.init() } catch (error) { console.error(error) }\n\ttry { AltGridSnap.init() } catch (error) { console.error(error) }\n\ttry { LayerShortcuts.init() } catch (error) { console.error(error) }\n\ttry { WallShortcuts.init() } catch (error) { console.error(error) }\n\ttry { WallCtrlInvert.init() } catch (error) { console.error(error) }\n\ttry { WallJoinSplit.init() } catch (error) { console.error(error) }\n\ttry { WallGapFiller.init() } catch (error) { console.error(error) }\n\ttry { WallAltDrop.init() } catch (error) { console.error(error) }\n\ttry { WallDirections.init() } catch (error) { console.error(error) }\n\ttry { AltLightOrigin.init() } catch (error) { console.error(error) }\n\ttry { CaptureGameScreen.init() } catch (error) { console.error(error) }\n\ttry { LightTemplateManager.init() } catch (error) { console.error(error) }\n\ttry { TileFlattener.init() } catch (error) { console.error(error) }\n\ttry { TileConfigExt.init() } catch (error) { console.error(error) }\n\ttry { CounterUI.init() } catch (error) { console.error(error) }\n\n\tSETTINGS.register('General.ShowCounters', {\n\t\tname: 'DF_ARCHITECT.General.ShowCounterName'.localize(),\n\t\thint: 'DF_ARCHITECT.General.ShowCounterHint'.localize(),\n\t\tconfig: true,\n\t\tscope: 'world',\n\t\ttype: Boolean,\n\t\tdefault: true\n\t})\n});\n\nHooks.once('setup', function () {\n\tif (!game.modules.get('lib-wrapper')?.active) return;\n\tif (!game.modules.get('colorsettings')?.active) return;\n\tPIXIAppOverride.setup();\n});\n\nHooks.once('ready', async function () {\n\tif (!game.modules.get('lib-wrapper')?.active) {\n\t\tconsole.error('Missing libWrapper module dependency');\n\t\tif (game.user.isGM)\n\t\t\tui.notifications.error('DF_ARCHITECT.ErrorLibWrapperMissing'.localize());\n\t\treturn;\n\t}\n\tif (!game.modules.get('colorsettings')?.active) {\n\t\tconsole.error('Missing colorsettings module dependency');\n\t\tif (game.user.isGM)\n\t\t\tui.notifications.error('DF_ARCHITECT.ErrorColourSettingsMissing'.localize());\n\t\treturn;\n\t}\n\n\tawait DataMigration.ready();\n\ttry { PIXIAppOverride.ready() } catch (error) { console.error(error) }\n\ttry { LayerShortcuts.ready() } catch (error) { console.error(error) }\n\ttry { WallCtrlInvert.ready() } catch (error) { console.error(error) }\n\ttry { WallChangeType.ready() } catch (error) { console.error(error) }\n\ttry { WallGapFiller.ready() } catch (error) { console.error(error) }\n\ttry { WallAltDrop.ready() } catch (error) { console.error(error) }\n\ttry { WallDirections.ready() } catch (error) { console.error(error) }\n\ttry { AltLightOrigin.ready() } catch (error) { console.error(error) }\n\ttry { QuickColourPicker.ready() } catch (error) { console.error(error) }\n\ttry { AltLightInverted.ready() } catch (error) { console.error(error) }\n\ttry { LightTemplateManager.ready() } catch (error) { console.error(error) }\n\ttry { LightingLayerOverride.ready() } catch (error) { console.error(error) }\n\ttry { ShowLayerControls.ready() } catch (error) { console.error(error) }\n\t// WARNING: The *Counters need to go after ShowLayerControls so they don't\n\t// accidentally pick up the layer activations during initialization\n\ttry { LightCounter.ready() } catch (error) { console.error(error) }\n\ttry { WallsCounter.ready() } catch (error) { console.error(error) }\n\ttry { TileCounter.ready() } catch (error) { console.error(error) }\n\ttry { SoundCounter.ready() } catch (error) { console.error(error) }\n});"],"names":["Map","prototype","getOrDefault","key","defaultValue","result","this","get","undefined","Function","set","String","localize","game","i18n","valueOf","SETTINGS","static","moduleName","_MOD_NAME","config","settings","register","registerMenu","value","default","Object","ARCHITECT","context","progress","total","keepAlive","loader","document","getElementById","pct","Math","round","querySelector","textContent","style","width","display","hidden","$","fadeOut","immediately","hide","dialog","Dialog","title","content","buttons","no","icon","label","callback","async","close","yes","window","location","reload","render","b64Data","contentType","sliceSize","byteCharacters","atob","byteArrays","offset","length","slice","byteNumbers","Array","i","charCodeAt","byteArray","Uint8Array","push","Blob","type","layer","canvas","CONFIG","Canvas","layers","layerClass","instance","css","loEnd","parseInt","GR_BG_LO","hiEnd","GR_BG_HI","bdr","GR_BG_BDR","tct","GR_BG_TCT","c","GRAPHIC","bg","trunc","toString","repeat","console","log","join","PIXIAppOverride","Hooks","once","canvasConfig","preserveDrawingBuffer","transparent","app","renderer","backgroundAlpha","LayerShortcuts","keybindings","restricted","name","hint","editable","modifiers","KeyboardManager","MODIFIER_KEYS","ALT","onDown","layer1","PREF_LAYER_SWAP_LAYER1","layer2","PREF_LAYER_SWAP_LAYER2","ui","controls","activeControl","_onClickLayer","preventDefault","currentTarget","dataset","control","count","replace","CONTROL","activate","getLayers","map","x","forEach","choices","scope","AltGridSnap","PREF_TOGGLED","Boolean","onChange","PREF_PLACE_ON_CONTROL_BAR","button","addClass","removeClass","tools","find","t","active","PREF_ENABLED","_patchSquareGrid","initialize","enabled","toggled","on","isGM","user","splice","visible","toggle","onClick","html","data","hasClass","append","libWrapper","_SquareGrid_getSnappedPosition","unregister","wrapped","y","interval","altGs","dimensions","size","WallCtrlInvert","_isModifierActive","_onDragLeftDropRegistrationId","_onDragLeftDrop","wallsControls","findIndex","wrapper","event","_invertKeyboardMap","args","clone","Set","keyboard","downKeys","MODIFIER_CODES","some","k","has","delete","add","Registration","nextId","wrappers","handler","values","current","call","next","apply","libWrapperShared","target","registration","registrations","id","WallShortcuts","wallTypes","counter","tool","currentTool","SHIFT","_onClickTool","walls","preview","children","Wall","_getWallDataFromActiveTool","activeTool","keys","activeLayer","WallsLayer","trigger","_patchForceSnap","forceSnap","_forceSnap","originalEvent","shiftKey","WallJoinSplit","_splitWalls","bind","_joinWalls","controlled","newWalls","wall","x1","y1","x2","y2","midX","midY","_getWallEndpointCoordinates","PIXI","Point","snap","wall1","duplicate","_source","_id","wall2","scenes","viewed","deleteEmbeddedDocuments","wallObjects","createEmbeddedDocuments","o","can","releaseOthers","points","JSON","stringify","reduce","r","notifications","error","endpoints","entries","filter","wallData","concat","parse","object","AltLightOrigin","showCrosshairs","_showCrosshairs","alternateColour","_alternateColour","_controls","max","AltLightControlIcon","texture","controlIcons","light","Ardittristan","ColorSetting","PREF_COLOUR1","defaultColor","PREF_COLOUR2","LIGHTING_LAYER","addEventListener","KEYEVENT_DOWN","_keyEventHandler","KEYEVENT_UP","removeEventListener","code","altKey","draw","ControlIcon","constructor","borderColor","tint","super","alpha","border","clear","lineStyle","drawRoundedRect","rect","endFill","parseColour","colorStr","startsWith","substr","colour","isNaN","moveTo","lineTo","drawEllipse","destroy","options","deregister","_QuickColourPicker","SIZE","HALF_SIZE","_BUTTON_HTML","_rows","_pixels","_colour","_currentApp","_enabled","_promise","_states","_html","_docObserver","MutationObserver","_handleMutation","querySelectorAll","ready","_handleMouseMove","_handleMouseDownUp","observe","body","childList","mutations","observer","mutation","addedNodes","HTMLElement","classList","contains","element","appId","windows","each","_","QuickColourPicker","requestColourPick","parent","val","after","_rightDownPosition","_ignoreRightClick","_completeColourRequest","remove","promise","state","minimized","maximize","res","bringToTop","deltaX","deltaY","sqrt","gl","readPixels","height","RGBA","UNSIGNED_BYTE","hex","backgroundColor","setProperty","left","top","Promise","appendChild","promises","minimizable","_minimized","minimize","all","EyeDropper","getColor","afterDOMUpdate","block","delay","setTimeout","waitForDOMUpdate","DELETE_RESOURCES","resources","isDeleted","CaptureGameScreen","SPLIT_DIM","_layerFilters","_dialogLayerFilters","s","PREF_ALLOW_PC","PREF_COMP","Number","PREF_FRMT","PREF_TRGT","PREF_PADS","PREF_LYRS","PREF_BG_HIDE","PREF_BG_COLO","PREF_BG_ALPH","captureButton","warn","Handlebars","registerHelper","lhs","rhs","_captureInProgress","layerToConfig","titleCase","_active","TOGGLE_SETTING","hasControls","LayersWithInvisiblePlaceables","includes","hasHidden","LayersWithHiddenPlaceables","mergeObject","h","_getDialogLayerFilter","compression","png","jpeg","webp","pads","properlyDefined","message","simplefog","alph","colo","background","session","beginCapture","cleanupHandled","renderTemplate","cancel","endCapture","save","checked","keepPadding","parseFloat","captureCanvas","captureView","format","imageData","saveImageData","image","htmlElement","output","e","layerFilter","toggleLayer","toggleHidden","toggleControls","endsWith","alphaRange","alphaOutput","_openCVPromise","openCVScript","createElement","onload","cv","getBuildInformation","src","throwOnError","Error","hiddenItemsSnapshot","occludedItemsSnapshot","layerName","objects","frame","Tile","occlusion","mode","CONST","TILE_OCCLUSION_MODES","NONE","flags","df_arch_occl","df_arch_hidden","refresh","foregroundPreviouslyActive","foreground","_currentSession","Date","getTime","renderable","deactivate","isToggled","placeables","p","controlIcon","interactiveChildren","controlName","show","hud","err","l","releaseAll","removeChildren","quality","view","stage","pivot","w","scale","targetImage","Image","targetCanvas","targetContext","getContext","imageSmoothingEnabled","GetImageMat","resolve","drawImage","imread","GetImageData","imshow","toDataURL","resolveCapture","rejectCapture","overlayElement","appendTo","loadOpenCV","reject","v","origX","origY","origS","origW","origH","origR","resolution","padW","scene","padding","padH","grid","widthAdjust","heightAdjust","split","ceil","widthChunk","widthExtra","heightChunk","heightExtra","WARNING_SIZE","confirm","defaultYes","boardCanvasElement","images","widthSplitMultiplier","floor","heightSplitMultiplier","cy","indexH","cx","indexW","resize","extract","base64","text","cols","rows","finalMats","finalVec","finalImage","MatVector","push_back","rowVector","rowMats","renderTarget","Mat","hconcat","permanent","vconcat","dialogTitle","defaultFileName","folder","folderSource","allowDownload","resolved","ignoreClose","linkDate","toISOString","local","fileName","link","href","download","placeholder","click","server","fileNameElement","parts","match","file","File","picker","FilePicker","path","activeSource","source","tmpClose","browse","upload","img","setPosition","tarT","innerHeight","offsetHeight","maxT","clamped","CanvasCapture","aw","abs","ah","toRadians","rotation","position","tile","foundry","utils","colorStringToHex","beginFill","drawRect","bounds","NormalizedRectangle","fromRotation","hitArea","_controlled","pad","_refreshBorder","_refreshHandle","_destroyed","shape","isTextPreview","DRAWING_TYPES","TEXT","strokeWidth","sc","strokeColor","sw","strokeAlpha","fillType","fc","fillColor","DRAWING_FILL_TYPES","PATTERN","beginTextureFill","color","fillAlpha","fa","RECTANGLE","_drawRectangle","ELLIPSE","_drawEllipse","POLYGON","_drawPolygon","FREEHAND","_drawFreehand","closePath","textAlpha","LightTemplates","_LightTemplates","macroId","LightTemplateManager","currentActiveTemplate","lightData","getCurrentTemplateData","bright","roundDecimals","dim","tintColour","substring","templateHtml","macros","colorIntensity","toNearest","animationType","animation","lightAnimations","tintColorValue","tintColorLabel","tintIsDark","coloration","AdaptiveLightingShader","SHADER_TECHNIQUES","getBoundingClientRect","right","first","sheet","last","extractLightDataFromMacroCommand","command","_getEntryContextOptions","_renderLightConfig","_renderMacroConfig","createTemplateButton","_createTemplate","extraButton","df_light_template","template","parentsUntil","header","macro","before","prepend","getFlag","FLAG_IS_TEMPLATE","AmbientLightConfig","TemplateLightDocument","angle","Macro","create","author","userId","generateCommandData","setFlag","condition","li","isOwner","assignHotbarMacro","commandString","exec","LightingLayerOverride","_onDragLeftStart","lighting","_onClickLeft","_onClickRight","templateData","ctrlKey","origin","AmbientLight","embeddedName","doc","AmbientLightDocument","addChild","effects","lightSources","sourceId","deactivateAnimation","apps","vision","uuid","updateSource","newData","expandObject","update","testUserPermission","permission","exact","prepareData","toObject","_onUpdate","_change","_render","_userId","WallChangeType","META_KEY","ctrl","alt","door","ds","updateData","it","updateEmbeddedDocuments","WallAltDrop","Graphics","_handleDragMove","Wall_handleDragDrop","_handleDragCancel","DISTANCE","_drawCircle","radius","point","isModifierActive","_getClosestPoint","WallsLayer_onDragLeftDrop","ring","drawCircle","_updateCircle","destination","fixed","_updateWallSnap","waiter","_visible","setTransform","updateTransform","removeChild","dest","wallId","getClosestEndpoint","dist","hypot","sort","a","b","closestPoint","p0","coords","AltLightInverted","_onDragLeftMove","inverted","luminosity","WallDirections","_onWallDraw","_onWallRefresh","_onControlOrRelease","_reverseWallDirection","PREF_ALLOW_UNSELECTED_INVERT","dir","TextStyle","align","fill","_getWallColor","fontSize","stroke","strokeThickness","lineHeight","dfArchWallExt","leftLabel","Text","rightLabel","drawLabels","px","py","magnitude","nx","ny","lx","ly","rx","ry","DataMigration","PREF_DATA_VERSION","core","arch","version","modules","previous","performMigration","migrating","info","TileLayerRendered","TileFlattener","renderLights","PREF_RENDER_LIGHT","renderBackground","PREF_RENDER_BACKG","renderSelected","PREF_RENDER_SLCTD","renderHidden","PREF_RENDER_HIDEN","renderAnimated","PREF_RENDER_ANIMS","margin","PREF_MARGIN","PREF_LAYERS","PREF_FOLDER","PREF_FOLDER_SOURCE","lights","showBG","select","hideAnimated","capture","flattenTiles","setupBindings","valueAsNumber","animated","Floor","Roof","Both","tilesPreHidden","controlledTiles","promptForTileFlattening","allTiles","tiles","controlledIDs","VideoHelper","hasVideoExtension","_levels","floorContainer","overContainer","fogContainer","tokenRevealFogContainer","MAX_VALUE","MIN_VALUE","minX","center","minY","maxX","maxY","then","filePath","promptSceneReplacement","root","margins","prop","layersRendered","bakedLighting","newScene","overhead","thumbData","createThumbnail","thumb","diff","TileDocument","documentName","z","ArchiveFolderMenu","FormApplication","defaultOptions","resizable","submitOnClose","submitOnChange","closeOnSubmit","getData","_renderInner","input","fp","field","formData","LightCounter","updateCount","_counter","rendered","normal","unrestrained","normalVision","unrestrainedVision","CounterUI","Application","popOut","_count","_label","_hint","callAll","_collapsed","_injectHTML","_element","offsetWidth","animate","force","_handleSidebarCollapse","sidebar","fpsCounter","fpsT","offsetTop","fpsB","cuiT","cuiH","bottom","tooltip","direction","off","states","RENDER_STATES","RENDERED","ERROR","_state","CLOSING","el","CLOSED","minHeight","cls","_getInheritanceChain","_scrollPositions","sideBar","collapsed","WallsCounter","doors","secretDoors","moves","lightBlock","lightLimit","sightBlock","sightLimit","soundBlock","soundLimit","WALL_DOOR_TYPES","DOOR","SECRET","move","WALL_MOVEMENT_TYPES","NORMAL","WALL_SENSE_TYPES","LIMITED","sight","sound","TileCounter","SoundCounter","sounds","ShowLayerControls","showWalls","PREF_WALLS","showLights","PREF_LIGHT","showSounds","PREF_SOUND","setting","indexOf","unshift","refreshLayer","_ready","tokens","PlaceablesLayer_deactivate","los","drawShape","refreshControl","InteractionLayer","AmbientLight_refresh","numerator","denominator","TileConfigExt","PREF_SHOW_CONTROLS","updateTileConfig","imgInput","_previewImageHTML","updateImagePreview","horTitle","verTitle","ratio","num","den","labelDimens","labelAspect","imgPreview","animPreview","videoWidth","videoHeight","innerHTML","load","WallGapFiller","threshold","PREF_GAP_THRESHOLD","_fillGaps","wallAData","wallBData","wallA","wallB","ab1","ab2","ab3","ab4","final","midpoint","distanceSquared","wallGaps","thresholdSquared","wallGap","_calculateWallGap","_findWallGaps","prompt","graphics","gap","d1","d2","SceneNavigation","displayProgressBar","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","d","definition","defineProperty","enumerable","obj","hasOwnProperty","Symbol","toStringTag"],"sourceRoot":""}